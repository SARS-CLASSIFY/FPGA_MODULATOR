// Copyright (C) 1991-2012 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench template that is freely editable to  
// suit user's needs .Comments are provided in each section to help the user    
// fill out necessary details.                                                  
// *****************************************************************************
// Generated on "10/07/2014 13:10:36"
                                                                                
// Verilog Test Bench template for design : AskDemod
// 
// Simulation tool : ModelSim-Altera (Verilog)
// 

`timescale 1 ps/ 1 ps
module AskDemod_vlg_tst();
// constants                                           
// general purpose registers
//reg eachvec;
// test vector input registers
reg clk,clk32;
reg [7:0] din;
reg rst;
// wires                                               
wire [13:0]  dout;
wire [13:0]  gate;
wire dataout;
wire bit_sync;
// assign statements (if any)                          
AskDemod i1 (
// port map - connection between master ports and signals/registers   
	.clk(clk),
	.clk32(clk32),
	.din(din),
	.dout(dout),
	.gate(gate),
	.dataout(dataout),
	.bit_sync(bit_sync),
	.rst(rst)
);
parameter clk_period=20; //设置时钟信号周期（频率）:50MHz
parameter clk_half_period=clk_period/2;
parameter clk32_half_period=clk_half_period/4;
parameter data_num=4000;  //仿真数据长度
parameter time_sim=data_num*clk_period; //仿真时间
initial
begin
	//设置输入信号初值
	din=8'd10;
	//设置时钟信号初值
	clk=1;
	clk32=1;
	//设置复位信号
	rst=1;
	#110 rst=0;
	//设置仿真时间
	#400 $finish;//#time_sim $finish;

end

//产生时钟信号
always                                                 
	#clk_half_period clk=~clk;
	
always                                                 
	#clk32_half_period clk32=~clk32;
	
//从外部TX文件(E4_5_TestData.txt)读入数据作为测试激励
integer Pattern;
reg [11:0] stimulus[1:data_num];
initial
begin
   //文件必须放置在"工程目录\simulation\modelsim"路径下
	$readmemb("ASK2.txt",stimulus);//ASK2 ASK2_filter.txt  ASK4 ASK4_filter.txt 
	Pattern=0;
	repeat(data_num)
		begin
			Pattern=Pattern+1;
			din=stimulus[Pattern];
			#clk_period;
		end
end

                                                    
endmodule


