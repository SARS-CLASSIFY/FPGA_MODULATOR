//IP Functional Simulation Model
//VERSION_BEGIN 12.1 cbx_mgl 2012:11:07:18:06:30:SJ cbx_simgen 2012:11:07:18:03:51:SJ  VERSION_END
// synthesis VERILOG_INPUT_VERSION VERILOG_2001
// altera message_off 10463



// Copyright (C) 1991-2012 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// You may only use these simulation model output files for simulation
// purposes and expressly not for synthesis or any other purposes (in which
// event Altera disclaims all warranties of any kind).


//synopsys translate_off

//synthesis_resources = altsyncram 2 lpm_add_sub 2 lpm_counter 1 lut 246 mux21 415 oper_add 3 oper_mux 14 
`timescale 1 ps / 1 ps
module  dds
	( 
	clk,
	clken,
	fsin_o,
	out_valid,
	phi_inc_i,
	reset_n) /* synthesis synthesis_clearbox=1 */;
	input   clk;
	input   clken;
	output   [13:0]  fsin_o;
	output   out_valid;
	input   [31:0]  phi_inc_i;
	input   reset_n;

	wire  [12:0]   wire_niOiO_q_a;
	wire  [12:0]   wire_niOli_q_a;
	reg	nl10OO43;
	reg	nl10OO44;
	reg	nl1i0i35;
	reg	nl1i0i36;
	reg	nl1i0l33;
	reg	nl1i0l34;
	reg	nl1i0O31;
	reg	nl1i0O32;
	reg	nl1i1i41;
	reg	nl1i1i42;
	reg	nl1i1l39;
	reg	nl1i1l40;
	reg	nl1i1O37;
	reg	nl1i1O38;
	reg	nl1iii29;
	reg	nl1iii30;
	reg	nl1iil27;
	reg	nl1iil28;
	reg	nl1iiO25;
	reg	nl1iiO26;
	reg	nl1ili23;
	reg	nl1ili24;
	reg	nl1ill21;
	reg	nl1ill22;
	reg	nl1ilO19;
	reg	nl1ilO20;
	reg	nl1iOi17;
	reg	nl1iOi18;
	reg	nl1iOl15;
	reg	nl1iOl16;
	reg	nl1iOO13;
	reg	nl1iOO14;
	reg	nl1l0i5;
	reg	nl1l0i6;
	reg	nl1l1i11;
	reg	nl1l1i12;
	reg	nl1l1l10;
	reg	nl1l1l9;
	reg	nl1l1O7;
	reg	nl1l1O8;
	reg	nl1liO3;
	reg	nl1liO4;
	reg	nl1lli1;
	reg	nl1lli2;
	reg	n01O;
	reg	n0li;
	reg	n100i;
	reg	n100l;
	reg	n100O;
	reg	n101i;
	reg	n101l;
	reg	n101O;
	reg	n10ii;
	reg	n10il;
	reg	n10iO;
	reg	n10li;
	reg	n10ll;
	reg	n10lO;
	reg	n10Oi;
	reg	n10Ol;
	reg	n10OO;
	reg	n110i;
	reg	n110l;
	reg	n110O;
	reg	n111i;
	reg	n111l;
	reg	n111O;
	reg	n11ii;
	reg	n11il;
	reg	n11iO;
	reg	n11li;
	reg	n11ll;
	reg	n11lO;
	reg	n11Oi;
	reg	n11Ol;
	reg	n11OO;
	reg	n1i0i;
	reg	n1i0l;
	reg	n1i0O;
	reg	n1i1i;
	reg	n1i1l;
	reg	n1i1O;
	reg	n1iii;
	reg	n1iil;
	reg	n1iiO;
	reg	n1ili;
	reg	n1ill;
	reg	n1ilO;
	reg	n1iOi;
	reg	n1iOl;
	reg	n1iOO;
	reg	n1l0i;
	reg	n1l0l;
	reg	n1l0O;
	reg	n1l1i;
	reg	n1l1l;
	reg	n1l1O;
	reg	n1lii;
	reg	n1lil;
	reg	n1liO;
	reg	n1lli;
	reg	niOil;
	reg	niOll;
	reg	niOlO;
	reg	niOOi;
	reg	niOOl;
	reg	niOOO;
	reg	nl00lO;
	reg	nl00Oi;
	reg	nl00Ol;
	reg	nl00OO;
	reg	nl01ii;
	reg	nl01il;
	reg	nl01iO;
	reg	nl01li;
	reg	nl0i0i;
	reg	nl0i0l;
	reg	nl0i0O;
	reg	nl0i1i;
	reg	nl0i1l;
	reg	nl0i1O;
	reg	nl0iii;
	reg	nl0iil;
	reg	nl0iiO;
	reg	nl0ili;
	reg	nl0ill;
	reg	nl0ilO;
	reg	nl0iOi;
	reg	nl0iOl;
	reg	nl0iOO;
	reg	nl0l0i;
	reg	nl0l0l;
	reg	nl0l0O;
	reg	nl0l1i;
	reg	nl0l1l;
	reg	nl0l1O;
	reg	nl0lii;
	reg	nl0lil;
	reg	nl0liO;
	reg	nl0lli;
	reg	nl0lll;
	reg	nl0llO;
	reg	nl10i;
	reg	nl10l;
	reg	nl10O;
	reg	nl11i;
	reg	nl11l;
	reg	nl11O;
	reg	nl1ii;
	reg	nl1il;
	reg	nl1lll;
	reg	nl1llO;
	reg	nl1lOi;
	reg	nl1lOl;
	reg	nl1lOO;
	reg	nl1O0i;
	reg	nl1O0l;
	reg	nl1O0O;
	reg	nl1O1i;
	reg	nl1O1l;
	reg	nl1O1O;
	reg	nlil0i;
	reg	nlil0l;
	reg	nlil0O;
	reg	nlil1l;
	reg	nlil1O;
	reg	nlilii;
	reg	nlilil;
	reg	nliliO;
	reg	nlilli;
	reg	nlilll;
	reg	nlillO;
	reg	nlilOi;
	reg	nlilOl;
	reg	nlilOO;
	reg	nliO0i;
	reg	nliO0l;
	reg	nliO0O;
	reg	nliO1i;
	reg	nliO1l;
	reg	nliO1O;
	reg	nliOii;
	reg	nll0O;
	reg	nllii;
	reg	nlliiO;
	reg	nllil;
	reg	nllill;
	reg	nllilO;
	reg	nlliO;
	reg	nlliOi;
	reg	nlliOl;
	reg	nlliOO;
	reg	nlll0i;
	reg	nlll0l;
	reg	nlll0O;
	reg	nlll1i;
	reg	nlll1l;
	reg	nlll1O;
	reg	nllli;
	reg	nlllii;
	reg	nlllil;
	reg	nllliO;
	reg	nllll;
	reg	nlllO;
	reg	nllOi;
	reg	nllOl;
	reg	nllOO;
	reg	nlO01i;
	reg	nlO01l;
	reg	nlO0i;
	reg	nlO1i;
	reg	nlO1il;
	reg	nlO1iO;
	reg	nlO1l;
	reg	nlO1li;
	reg	nlO1ll;
	reg	nlO1lO;
	reg	nlO1O;
	reg	nlO1Oi;
	reg	nlO1Ol;
	reg	nlO1OO;
	reg	nlOl0O;
	reg	nlOlii;
	reg	nlOlil;
	reg	nlOliO;
	reg	nlOlli;
	reg	nlOlll;
	reg	nlOllO;
	reg	nlOlOi;
	reg	nlOlOl;
	reg	nlOlOO;
	reg	nlOO0i;
	reg	nlOO0l;
	reg	nlOO0O;
	reg	nlOO1i;
	reg	nlOO1l;
	reg	nlOO1O;
	reg	nlOOii;
	reg	nlOOil;
	reg	nlOOiO;
	reg	nlOOli;
	reg	nlOOll;
	reg	nlOOlO;
	reg	nlOOOi;
	reg	nlOOOl;
	reg	nlOOOO;
	reg	n0iO_clk_prev;
	wire	wire_n0iO_CLRN;
	wire	wire_n0iO_PRN;
	wire  [31:0]   wire_nl00ll_result;
	wire  [18:0]   wire_nllili_result;
	wire  [3:0]   wire_n00i_q;
	wire	wire_n000i_dataout;
	wire	wire_n000l_dataout;
	wire	wire_n000O_dataout;
	wire	wire_n001i_dataout;
	wire	wire_n001l_dataout;
	wire	wire_n001O_dataout;
	wire	wire_n00ii_dataout;
	wire	wire_n00il_dataout;
	wire	wire_n00iO_dataout;
	wire	wire_n00li_dataout;
	wire	wire_n00ll_dataout;
	wire	wire_n00lO_dataout;
	wire	wire_n00O_dataout;
	wire	wire_n00Oi_dataout;
	wire	wire_n00Ol_dataout;
	wire	wire_n00OO_dataout;
	wire	wire_n010i_dataout;
	wire	wire_n010l_dataout;
	wire	wire_n010O_dataout;
	wire	wire_n011i_dataout;
	wire	wire_n011l_dataout;
	wire	wire_n011O_dataout;
	wire	wire_n01i_dataout;
	wire	wire_n01ii_dataout;
	wire	wire_n01il_dataout;
	wire	wire_n01iO_dataout;
	wire	wire_n01l_dataout;
	wire	wire_n01li_dataout;
	wire	wire_n01ll_dataout;
	wire	wire_n01lO_dataout;
	wire	wire_n01Oi_dataout;
	wire	wire_n01Ol_dataout;
	wire	wire_n01OO_dataout;
	wire	wire_n0i0i_dataout;
	wire	wire_n0i0l_dataout;
	wire	wire_n0i0O_dataout;
	wire	wire_n0i1i_dataout;
	wire	wire_n0i1l_dataout;
	wire	wire_n0i1O_dataout;
	wire	wire_n0ii_dataout;
	wire	wire_n0iii_dataout;
	wire	wire_n0iil_dataout;
	wire	wire_n0iiO_dataout;
	wire	wire_n0ili_dataout;
	wire	wire_n0ill_dataout;
	wire	wire_n0ilO_dataout;
	wire	wire_n0iOi_dataout;
	wire	wire_n0iOl_dataout;
	wire	wire_n0iOO_dataout;
	wire	wire_n0l0i_dataout;
	wire	wire_n0l0l_dataout;
	wire	wire_n0l0O_dataout;
	wire	wire_n0l1i_dataout;
	wire	wire_n0l1l_dataout;
	wire	wire_n0l1O_dataout;
	wire	wire_n0lii_dataout;
	wire	wire_n0lil_dataout;
	wire	wire_n0liO_dataout;
	wire	wire_n0lli_dataout;
	wire	wire_n0lll_dataout;
	wire	wire_n0llO_dataout;
	wire	wire_n0lOi_dataout;
	wire	wire_n0lOl_dataout;
	wire	wire_n0lOO_dataout;
	wire	wire_n0O0i_dataout;
	wire	wire_n0O0l_dataout;
	wire	wire_n0O0O_dataout;
	wire	wire_n0O1i_dataout;
	wire	wire_n0O1l_dataout;
	wire	wire_n0O1O_dataout;
	wire	wire_n0Oii_dataout;
	wire	wire_n0Oil_dataout;
	wire	wire_n0OiO_dataout;
	wire	wire_n0Oli_dataout;
	wire	wire_n0Oll_dataout;
	wire	wire_n0OlO_dataout;
	wire	wire_n0OOi_dataout;
	wire	wire_n0OOl_dataout;
	wire	wire_n0OOO_dataout;
	wire	wire_n10i_dataout;
	wire	wire_n10l_dataout;
	wire	wire_n10O_dataout;
	wire	wire_n11i_dataout;
	wire	wire_n11l_dataout;
	wire	wire_n11O_dataout;
	wire	wire_n1ii_dataout;
	wire	wire_n1il_dataout;
	wire	wire_n1iO_dataout;
	wire	wire_n1li_dataout;
	wire	wire_n1ll_dataout;
	wire	wire_n1lll_dataout;
	wire	wire_n1llO_dataout;
	wire	wire_n1lO_dataout;
	wire	wire_n1lOi_dataout;
	wire	wire_n1lOl_dataout;
	wire	wire_n1lOO_dataout;
	wire	wire_n1O0i_dataout;
	wire	wire_n1O0l_dataout;
	wire	wire_n1O0O_dataout;
	wire	wire_n1O1i_dataout;
	wire	wire_n1O1l_dataout;
	wire	wire_n1O1O_dataout;
	wire	wire_n1Oi_dataout;
	wire	wire_n1Oii_dataout;
	wire	wire_n1Oil_dataout;
	wire	wire_n1OiO_dataout;
	wire	wire_n1Ol_dataout;
	wire	wire_n1Oli_dataout;
	wire	wire_n1Oll_dataout;
	wire	wire_n1OlO_dataout;
	wire	wire_n1OO_dataout;
	wire	wire_n1OOi_dataout;
	wire	wire_n1OOl_dataout;
	wire	wire_n1OOO_dataout;
	wire	wire_ni00i_dataout;
	wire	wire_ni00l_dataout;
	wire	wire_ni00O_dataout;
	wire	wire_ni01i_dataout;
	wire	wire_ni01l_dataout;
	wire	wire_ni01O_dataout;
	wire	wire_ni0ii_dataout;
	wire	wire_ni0il_dataout;
	wire	wire_ni0iO_dataout;
	wire	wire_ni0li_dataout;
	wire	wire_ni0ll_dataout;
	wire	wire_ni0lO_dataout;
	wire	wire_ni0Oi_dataout;
	wire	wire_ni0Ol_dataout;
	wire	wire_ni0OO_dataout;
	wire	wire_ni10i_dataout;
	wire	wire_ni10l_dataout;
	wire	wire_ni10O_dataout;
	wire	wire_ni11i_dataout;
	wire	wire_ni11l_dataout;
	wire	wire_ni11O_dataout;
	wire	wire_ni1ii_dataout;
	wire	wire_ni1il_dataout;
	wire	wire_ni1iO_dataout;
	wire	wire_ni1li_dataout;
	wire	wire_ni1ll_dataout;
	wire	wire_ni1lO_dataout;
	wire	wire_ni1Oi_dataout;
	wire	wire_ni1Ol_dataout;
	wire	wire_ni1OO_dataout;
	wire	wire_nii0i_dataout;
	wire	wire_nii0l_dataout;
	wire	wire_nii0O_dataout;
	wire	wire_nii1i_dataout;
	wire	wire_nii1l_dataout;
	wire	wire_nii1O_dataout;
	wire	wire_niiii_dataout;
	wire	wire_niiil_dataout;
	wire	wire_niiiO_dataout;
	wire	wire_niili_dataout;
	wire	wire_niill_dataout;
	wire	wire_niilO_dataout;
	wire	wire_niiOi_dataout;
	wire	wire_niiOl_dataout;
	wire	wire_niiOO_dataout;
	wire	wire_nil0i_dataout;
	wire	wire_nil0l_dataout;
	wire	wire_nil0O_dataout;
	wire	wire_nil1i_dataout;
	wire	wire_nil1l_dataout;
	wire	wire_nil1O_dataout;
	wire	wire_nilii_dataout;
	wire	wire_nilil_dataout;
	wire	wire_niliO_dataout;
	wire	wire_nilli_dataout;
	wire	wire_nilll_dataout;
	wire	wire_nillO_dataout;
	wire	wire_nilOi_dataout;
	wire	wire_nilOl_dataout;
	wire	wire_nilOO_dataout;
	wire	wire_niO0i_dataout;
	wire	wire_niO0l_dataout;
	wire	wire_niO1i_dataout;
	wire	wire_niO1l_dataout;
	wire	wire_niO1O_dataout;
	wire	wire_nl000i_dataout;
	wire	wire_nl000l_dataout;
	wire	wire_nl000O_dataout;
	wire	wire_nl001i_dataout;
	wire	wire_nl001l_dataout;
	wire	wire_nl001O_dataout;
	wire	wire_nl00i_dataout;
	wire	wire_nl00ii_dataout;
	wire	wire_nl00il_dataout;
	wire	wire_nl00iO_dataout;
	wire	wire_nl00l_dataout;
	wire	wire_nl00li_dataout;
	wire	wire_nl00O_dataout;
	wire	wire_nl010i_dataout;
	wire	wire_nl010l_dataout;
	wire	wire_nl010O_dataout;
	wire	wire_nl011i_dataout;
	wire	wire_nl011l_dataout;
	wire	wire_nl011O_dataout;
	wire	wire_nl01i_dataout;
	wire	wire_nl01l_dataout;
	wire	wire_nl01ll_dataout;
	wire	wire_nl01lO_dataout;
	wire	wire_nl01O_dataout;
	wire	wire_nl01Oi_dataout;
	wire	wire_nl01Ol_dataout;
	wire	wire_nl01OO_dataout;
	wire	wire_nl0ii_dataout;
	wire	wire_nl0il_dataout;
	wire	wire_nl0iO_dataout;
	wire	wire_nl0li_dataout;
	wire	wire_nl0ll_dataout;
	wire	wire_nl0lO_dataout;
	wire	wire_nl0lOi_dataout;
	wire	wire_nl0lOl_dataout;
	wire	wire_nl0lOO_dataout;
	wire	wire_nl0O0i_dataout;
	wire	wire_nl0O0l_dataout;
	wire	wire_nl0O0O_dataout;
	wire	wire_nl0O1i_dataout;
	wire	wire_nl0O1l_dataout;
	wire	wire_nl0O1O_dataout;
	wire	wire_nl0Oi_dataout;
	wire	wire_nl0Oii_dataout;
	wire	wire_nl0Oil_dataout;
	wire	wire_nl0OiO_dataout;
	wire	wire_nl0Ol_dataout;
	wire	wire_nl0Oli_dataout;
	wire	wire_nl0Oll_dataout;
	wire	wire_nl0OlO_dataout;
	wire	wire_nl0OO_dataout;
	wire	wire_nl0OOi_dataout;
	wire	wire_nl0OOl_dataout;
	wire	wire_nl0OOO_dataout;
	wire	wire_nl1iO_dataout;
	wire	wire_nl1li_dataout;
	wire	wire_nl1ll_dataout;
	wire	wire_nl1lO_dataout;
	wire	wire_nl1Oi_dataout;
	wire	wire_nl1Oii_dataout;
	wire	wire_nl1Oil_dataout;
	wire	wire_nl1OiO_dataout;
	wire	wire_nl1Ol_dataout;
	wire	wire_nl1Oli_dataout;
	wire	wire_nl1Oll_dataout;
	wire	wire_nl1OlO_dataout;
	wire	wire_nl1OO_dataout;
	wire	wire_nl1OOi_dataout;
	wire	wire_nl1OOl_dataout;
	wire	wire_nl1OOO_dataout;
	wire	wire_nli00i_dataout;
	wire	wire_nli00l_dataout;
	wire	wire_nli00O_dataout;
	wire	wire_nli01i_dataout;
	wire	wire_nli01l_dataout;
	wire	wire_nli01O_dataout;
	wire	wire_nli0i_dataout;
	wire	wire_nli0ii_dataout;
	wire	wire_nli0il_dataout;
	wire	wire_nli0iO_dataout;
	wire	wire_nli0l_dataout;
	wire	wire_nli0li_dataout;
	wire	wire_nli0ll_dataout;
	wire	wire_nli0lO_dataout;
	wire	wire_nli0O_dataout;
	wire	wire_nli0Oi_dataout;
	wire	wire_nli0Ol_dataout;
	wire	wire_nli0OO_dataout;
	wire	wire_nli10i_dataout;
	wire	wire_nli10l_dataout;
	wire	wire_nli10O_dataout;
	wire	wire_nli11i_dataout;
	wire	wire_nli11l_dataout;
	wire	wire_nli11O_dataout;
	wire	wire_nli1i_dataout;
	wire	wire_nli1ii_dataout;
	wire	wire_nli1il_dataout;
	wire	wire_nli1iO_dataout;
	wire	wire_nli1l_dataout;
	wire	wire_nli1li_dataout;
	wire	wire_nli1ll_dataout;
	wire	wire_nli1lO_dataout;
	wire	wire_nli1O_dataout;
	wire	wire_nli1Oi_dataout;
	wire	wire_nli1Ol_dataout;
	wire	wire_nli1OO_dataout;
	wire	wire_nlii0i_dataout;
	wire	wire_nlii0l_dataout;
	wire	wire_nlii0O_dataout;
	wire	wire_nlii1i_dataout;
	wire	wire_nlii1l_dataout;
	wire	wire_nlii1O_dataout;
	wire	wire_nliiii_dataout;
	wire	wire_nliiil_dataout;
	wire	wire_nliiiO_dataout;
	wire	wire_nliili_dataout;
	wire	wire_nliill_dataout;
	wire	wire_nliilO_dataout;
	wire	wire_nliiOi_dataout;
	wire	wire_nliiOl_dataout;
	wire	wire_nliiOO_dataout;
	wire	wire_nlil1i_dataout;
	wire	wire_nliOil_dataout;
	wire	wire_nliOiO_dataout;
	wire	wire_nliOli_dataout;
	wire	wire_nliOll_dataout;
	wire	wire_nliOlO_dataout;
	wire	wire_nliOOi_dataout;
	wire	wire_nliOOl_dataout;
	wire	wire_nliOOO_dataout;
	wire	wire_nll00i_dataout;
	wire	wire_nll00l_dataout;
	wire	wire_nll00O_dataout;
	wire	wire_nll01i_dataout;
	wire	wire_nll01l_dataout;
	wire	wire_nll01O_dataout;
	wire	wire_nll0ii_dataout;
	wire	wire_nll0il_dataout;
	wire	wire_nll0iO_dataout;
	wire	wire_nll0li_dataout;
	wire	wire_nll0ll_dataout;
	wire	wire_nll0lO_dataout;
	wire	wire_nll0Oi_dataout;
	wire	wire_nll0Ol_dataout;
	wire	wire_nll0OO_dataout;
	wire	wire_nll10i_dataout;
	wire	wire_nll10l_dataout;
	wire	wire_nll10O_dataout;
	wire	wire_nll11i_dataout;
	wire	wire_nll11l_dataout;
	wire	wire_nll11O_dataout;
	wire	wire_nll1ii_dataout;
	wire	wire_nll1il_dataout;
	wire	wire_nll1iO_dataout;
	wire	wire_nll1li_dataout;
	wire	wire_nll1ll_dataout;
	wire	wire_nll1lO_dataout;
	wire	wire_nll1Oi_dataout;
	wire	wire_nll1Ol_dataout;
	wire	wire_nll1OO_dataout;
	wire	wire_nlli0i_dataout;
	wire	wire_nlli1i_dataout;
	wire	wire_nlli1l_dataout;
	wire	wire_nlli1O_dataout;
	wire	wire_nlllli_dataout;
	wire	wire_nlllll_dataout;
	wire	wire_nllllO_dataout;
	wire	wire_nlllOi_dataout;
	wire	wire_nlllOl_dataout;
	wire	wire_nlllOO_dataout;
	wire	wire_nllO0i_dataout;
	wire	wire_nllO0l_dataout;
	wire	wire_nllO0O_dataout;
	wire	wire_nllO1i_dataout;
	wire	wire_nllO1l_dataout;
	wire	wire_nllO1O_dataout;
	wire	wire_nllOii_dataout;
	wire	wire_nllOil_dataout;
	wire	wire_nllOiO_dataout;
	wire	wire_nllOli_dataout;
	wire	wire_nllOll_dataout;
	wire	wire_nllOlO_dataout;
	wire	wire_nllOOi_dataout;
	wire	wire_nllOOl_dataout;
	wire	wire_nllOOO_dataout;
	wire	wire_nlO00i_dataout;
	wire	wire_nlO00l_dataout;
	wire	wire_nlO00O_dataout;
	wire	wire_nlO01O_dataout;
	wire	wire_nlO0ii_dataout;
	wire	wire_nlO0il_dataout;
	wire	wire_nlO0iO_dataout;
	wire	wire_nlO0l_dataout;
	wire	wire_nlO0li_dataout;
	wire	wire_nlO0ll_dataout;
	wire	wire_nlO0lO_dataout;
	wire	wire_nlO0O_dataout;
	wire	wire_nlO0Oi_dataout;
	wire	wire_nlO0Ol_dataout;
	wire	wire_nlO0OO_dataout;
	wire	wire_nlO10i_dataout;
	wire	wire_nlO10l_dataout;
	wire	wire_nlO10O_dataout;
	wire	wire_nlO11i_dataout;
	wire	wire_nlO11l_dataout;
	wire	wire_nlO11O_dataout;
	wire	wire_nlO1ii_dataout;
	wire	wire_nlOi0i_dataout;
	wire	wire_nlOi0l_dataout;
	wire	wire_nlOi0O_dataout;
	wire	wire_nlOi1i_dataout;
	wire	wire_nlOi1l_dataout;
	wire	wire_nlOi1O_dataout;
	wire	wire_nlOii_dataout;
	wire	wire_nlOiii_dataout;
	wire	wire_nlOiil_dataout;
	wire	wire_nlOiiO_dataout;
	wire	wire_nlOil_dataout;
	wire	wire_nlOili_dataout;
	wire	wire_nlOill_dataout;
	wire	wire_nlOilO_dataout;
	wire	wire_nlOiO_dataout;
	wire	wire_nlOiOi_dataout;
	wire	wire_nlOiOl_dataout;
	wire	wire_nlOiOO_dataout;
	wire	wire_nlOl0i_dataout;
	wire	wire_nlOl0l_dataout;
	wire	wire_nlOl1i_dataout;
	wire	wire_nlOl1l_dataout;
	wire	wire_nlOl1O_dataout;
	wire	wire_nlOli_dataout;
	wire	wire_nlOll_dataout;
	wire	wire_nlOlO_dataout;
	wire	wire_nlOOi_dataout;
	wire	wire_nlOOl_dataout;
	wire	wire_nlOOO_dataout;
	wire  [13:0]   wire_niO0O_o;
	wire  [13:0]   wire_niOii_o;
	wire  [4:0]   wire_nlli0l_o;
	wire  wire_nliii_o;
	wire  wire_nliil_o;
	wire  wire_nliiO_o;
	wire  wire_nlili_o;
	wire  wire_nlill_o;
	wire  wire_nlilO_o;
	wire  wire_nliOi_o;
	wire  wire_nliOl_o;
	wire  wire_nliOO_o;
	wire  wire_nll0i_o;
	wire  wire_nll0l_o;
	wire  wire_nll1i_o;
	wire  wire_nll1l_o;
	wire  wire_nll1O_o;
	wire  nl1lii;

	altsyncram   niOiO
	( 
	.address_a({nlO1il, nlO1iO, nlO1li, nlO1ll, nlO1lO, nlO1Oi, nlO1Ol, nlO1OO, nlO01i, nlO01l, nlOl0O}),
	.clock0(clk),
	.clocken0(clken),
	.eccstatus(),
	.q_a(wire_niOiO_q_a),
	.q_b(),
	.aclr0(),
	.aclr1(),
	.address_b(),
	.addressstall_a(),
	.addressstall_b(),
	.byteena_a(),
	.byteena_b(),
	.clock1(),
	.clocken1(),
	.clocken2(),
	.clocken3(),
	.data_a(),
	.data_b(),
	.rden_a(),
	.rden_b(),
	.wren_a(),
	.wren_b()
	);
	defparam
		niOiO.address_aclr_a = "NONE",
		niOiO.address_aclr_b = "NONE",
		niOiO.address_reg_b = "CLOCK1",
		niOiO.byte_size = 8,
		niOiO.byteena_aclr_a = "NONE",
		niOiO.byteena_aclr_b = "NONE",
		niOiO.byteena_reg_b = "CLOCK1",
		niOiO.clock_enable_core_a = "USE_INPUT_CLKEN",
		niOiO.clock_enable_core_b = "USE_INPUT_CLKEN",
		niOiO.clock_enable_input_a = "NORMAL",
		niOiO.clock_enable_input_b = "NORMAL",
		niOiO.clock_enable_output_a = "NORMAL",
		niOiO.clock_enable_output_b = "NORMAL",
		niOiO.ecc_pipeline_stage_enabled = "FALSE",
		niOiO.enable_ecc = "FALSE",
		niOiO.indata_aclr_a = "NONE",
		niOiO.indata_aclr_b = "NONE",
		niOiO.indata_reg_b = "CLOCK1",
		niOiO.init_file = "dds_sin.hex",
		niOiO.init_file_layout = "PORT_A",
		niOiO.intended_device_family = "Cyclone IV E",
		niOiO.numwords_a = 2048,
		niOiO.numwords_b = 1,
		niOiO.operation_mode = "ROM",
		niOiO.outdata_aclr_a = "NONE",
		niOiO.outdata_aclr_b = "NONE",
		niOiO.outdata_reg_a = "CLOCK0",
		niOiO.outdata_reg_b = "UNREGISTERED",
		niOiO.ram_block_type = "AUTO",
		niOiO.rdcontrol_aclr_b = "NONE",
		niOiO.rdcontrol_reg_b = "CLOCK1",
		niOiO.read_during_write_mode_mixed_ports = "DONT_CARE",
		niOiO.read_during_write_mode_port_a = "NEW_DATA_NO_NBE_READ",
		niOiO.read_during_write_mode_port_b = "NEW_DATA_NO_NBE_READ",
		niOiO.width_a = 13,
		niOiO.width_b = 1,
		niOiO.width_byteena_a = 1,
		niOiO.width_byteena_b = 1,
		niOiO.width_eccstatus = 3,
		niOiO.widthad_a = 11,
		niOiO.widthad_b = 1,
		niOiO.wrcontrol_aclr_a = "NONE",
		niOiO.wrcontrol_aclr_b = "NONE",
		niOiO.wrcontrol_wraddress_reg_b = "CLOCK1",
		niOiO.lpm_hint = "WIDTH_BYTEENA=1";
	altsyncram   niOli
	( 
	.address_a({nlO1il, nlO1iO, nlO1li, nlO1ll, nlO1lO, nlO1Oi, nlO1Ol, nlO1OO, nlO01i, nlO01l, nlOl0O}),
	.clock0(clk),
	.clocken0(clken),
	.eccstatus(),
	.q_a(wire_niOli_q_a),
	.q_b(),
	.aclr0(),
	.aclr1(),
	.address_b(),
	.addressstall_a(),
	.addressstall_b(),
	.byteena_a(),
	.byteena_b(),
	.clock1(),
	.clocken1(),
	.clocken2(),
	.clocken3(),
	.data_a(),
	.data_b(),
	.rden_a(),
	.rden_b(),
	.wren_a(),
	.wren_b()
	);
	defparam
		niOli.address_aclr_a = "NONE",
		niOli.address_aclr_b = "NONE",
		niOli.address_reg_b = "CLOCK1",
		niOli.byte_size = 8,
		niOli.byteena_aclr_a = "NONE",
		niOli.byteena_aclr_b = "NONE",
		niOli.byteena_reg_b = "CLOCK1",
		niOli.clock_enable_core_a = "USE_INPUT_CLKEN",
		niOli.clock_enable_core_b = "USE_INPUT_CLKEN",
		niOli.clock_enable_input_a = "NORMAL",
		niOli.clock_enable_input_b = "NORMAL",
		niOli.clock_enable_output_a = "NORMAL",
		niOli.clock_enable_output_b = "NORMAL",
		niOli.ecc_pipeline_stage_enabled = "FALSE",
		niOli.enable_ecc = "FALSE",
		niOli.indata_aclr_a = "NONE",
		niOli.indata_aclr_b = "NONE",
		niOli.indata_reg_b = "CLOCK1",
		niOli.init_file = "dds_cos.hex",
		niOli.init_file_layout = "PORT_A",
		niOli.intended_device_family = "Cyclone IV E",
		niOli.numwords_a = 2048,
		niOli.numwords_b = 1,
		niOli.operation_mode = "ROM",
		niOli.outdata_aclr_a = "NONE",
		niOli.outdata_aclr_b = "NONE",
		niOli.outdata_reg_a = "CLOCK0",
		niOli.outdata_reg_b = "UNREGISTERED",
		niOli.ram_block_type = "AUTO",
		niOli.rdcontrol_aclr_b = "NONE",
		niOli.rdcontrol_reg_b = "CLOCK1",
		niOli.read_during_write_mode_mixed_ports = "DONT_CARE",
		niOli.read_during_write_mode_port_a = "NEW_DATA_NO_NBE_READ",
		niOli.read_during_write_mode_port_b = "NEW_DATA_NO_NBE_READ",
		niOli.width_a = 13,
		niOli.width_b = 1,
		niOli.width_byteena_a = 1,
		niOli.width_byteena_b = 1,
		niOli.width_eccstatus = 3,
		niOli.widthad_a = 11,
		niOli.widthad_b = 1,
		niOli.wrcontrol_aclr_a = "NONE",
		niOli.wrcontrol_aclr_b = "NONE",
		niOli.wrcontrol_wraddress_reg_b = "CLOCK1",
		niOli.lpm_hint = "WIDTH_BYTEENA=1";
	initial
		nl10OO43 = 0;
	always @ ( posedge clk)
		  nl10OO43 <= nl10OO44;
	event nl10OO43_event;
	initial
		#1 ->nl10OO43_event;
	always @(nl10OO43_event)
		nl10OO43 <= {1{1'b1}};
	initial
		nl10OO44 = 0;
	always @ ( posedge clk)
		  nl10OO44 <= nl10OO43;
	initial
		nl1i0i35 = 0;
	always @ ( posedge clk)
		  nl1i0i35 <= nl1i0i36;
	event nl1i0i35_event;
	initial
		#1 ->nl1i0i35_event;
	always @(nl1i0i35_event)
		nl1i0i35 <= {1{1'b1}};
	initial
		nl1i0i36 = 0;
	always @ ( posedge clk)
		  nl1i0i36 <= nl1i0i35;
	initial
		nl1i0l33 = 0;
	always @ ( posedge clk)
		  nl1i0l33 <= nl1i0l34;
	event nl1i0l33_event;
	initial
		#1 ->nl1i0l33_event;
	always @(nl1i0l33_event)
		nl1i0l33 <= {1{1'b1}};
	initial
		nl1i0l34 = 0;
	always @ ( posedge clk)
		  nl1i0l34 <= nl1i0l33;
	initial
		nl1i0O31 = 0;
	always @ ( posedge clk)
		  nl1i0O31 <= nl1i0O32;
	event nl1i0O31_event;
	initial
		#1 ->nl1i0O31_event;
	always @(nl1i0O31_event)
		nl1i0O31 <= {1{1'b1}};
	initial
		nl1i0O32 = 0;
	always @ ( posedge clk)
		  nl1i0O32 <= nl1i0O31;
	initial
		nl1i1i41 = 0;
	always @ ( posedge clk)
		  nl1i1i41 <= nl1i1i42;
	event nl1i1i41_event;
	initial
		#1 ->nl1i1i41_event;
	always @(nl1i1i41_event)
		nl1i1i41 <= {1{1'b1}};
	initial
		nl1i1i42 = 0;
	always @ ( posedge clk)
		  nl1i1i42 <= nl1i1i41;
	initial
		nl1i1l39 = 0;
	always @ ( posedge clk)
		  nl1i1l39 <= nl1i1l40;
	event nl1i1l39_event;
	initial
		#1 ->nl1i1l39_event;
	always @(nl1i1l39_event)
		nl1i1l39 <= {1{1'b1}};
	initial
		nl1i1l40 = 0;
	always @ ( posedge clk)
		  nl1i1l40 <= nl1i1l39;
	initial
		nl1i1O37 = 0;
	always @ ( posedge clk)
		  nl1i1O37 <= nl1i1O38;
	event nl1i1O37_event;
	initial
		#1 ->nl1i1O37_event;
	always @(nl1i1O37_event)
		nl1i1O37 <= {1{1'b1}};
	initial
		nl1i1O38 = 0;
	always @ ( posedge clk)
		  nl1i1O38 <= nl1i1O37;
	initial
		nl1iii29 = 0;
	always @ ( posedge clk)
		  nl1iii29 <= nl1iii30;
	event nl1iii29_event;
	initial
		#1 ->nl1iii29_event;
	always @(nl1iii29_event)
		nl1iii29 <= {1{1'b1}};
	initial
		nl1iii30 = 0;
	always @ ( posedge clk)
		  nl1iii30 <= nl1iii29;
	initial
		nl1iil27 = 0;
	always @ ( posedge clk)
		  nl1iil27 <= nl1iil28;
	event nl1iil27_event;
	initial
		#1 ->nl1iil27_event;
	always @(nl1iil27_event)
		nl1iil27 <= {1{1'b1}};
	initial
		nl1iil28 = 0;
	always @ ( posedge clk)
		  nl1iil28 <= nl1iil27;
	initial
		nl1iiO25 = 0;
	always @ ( posedge clk)
		  nl1iiO25 <= nl1iiO26;
	event nl1iiO25_event;
	initial
		#1 ->nl1iiO25_event;
	always @(nl1iiO25_event)
		nl1iiO25 <= {1{1'b1}};
	initial
		nl1iiO26 = 0;
	always @ ( posedge clk)
		  nl1iiO26 <= nl1iiO25;
	initial
		nl1ili23 = 0;
	always @ ( posedge clk)
		  nl1ili23 <= nl1ili24;
	event nl1ili23_event;
	initial
		#1 ->nl1ili23_event;
	always @(nl1ili23_event)
		nl1ili23 <= {1{1'b1}};
	initial
		nl1ili24 = 0;
	always @ ( posedge clk)
		  nl1ili24 <= nl1ili23;
	initial
		nl1ill21 = 0;
	always @ ( posedge clk)
		  nl1ill21 <= nl1ill22;
	event nl1ill21_event;
	initial
		#1 ->nl1ill21_event;
	always @(nl1ill21_event)
		nl1ill21 <= {1{1'b1}};
	initial
		nl1ill22 = 0;
	always @ ( posedge clk)
		  nl1ill22 <= nl1ill21;
	initial
		nl1ilO19 = 0;
	always @ ( posedge clk)
		  nl1ilO19 <= nl1ilO20;
	event nl1ilO19_event;
	initial
		#1 ->nl1ilO19_event;
	always @(nl1ilO19_event)
		nl1ilO19 <= {1{1'b1}};
	initial
		nl1ilO20 = 0;
	always @ ( posedge clk)
		  nl1ilO20 <= nl1ilO19;
	initial
		nl1iOi17 = 0;
	always @ ( posedge clk)
		  nl1iOi17 <= nl1iOi18;
	event nl1iOi17_event;
	initial
		#1 ->nl1iOi17_event;
	always @(nl1iOi17_event)
		nl1iOi17 <= {1{1'b1}};
	initial
		nl1iOi18 = 0;
	always @ ( posedge clk)
		  nl1iOi18 <= nl1iOi17;
	initial
		nl1iOl15 = 0;
	always @ ( posedge clk)
		  nl1iOl15 <= nl1iOl16;
	event nl1iOl15_event;
	initial
		#1 ->nl1iOl15_event;
	always @(nl1iOl15_event)
		nl1iOl15 <= {1{1'b1}};
	initial
		nl1iOl16 = 0;
	always @ ( posedge clk)
		  nl1iOl16 <= nl1iOl15;
	initial
		nl1iOO13 = 0;
	always @ ( posedge clk)
		  nl1iOO13 <= nl1iOO14;
	event nl1iOO13_event;
	initial
		#1 ->nl1iOO13_event;
	always @(nl1iOO13_event)
		nl1iOO13 <= {1{1'b1}};
	initial
		nl1iOO14 = 0;
	always @ ( posedge clk)
		  nl1iOO14 <= nl1iOO13;
	initial
		nl1l0i5 = 0;
	always @ ( posedge clk)
		  nl1l0i5 <= nl1l0i6;
	event nl1l0i5_event;
	initial
		#1 ->nl1l0i5_event;
	always @(nl1l0i5_event)
		nl1l0i5 <= {1{1'b1}};
	initial
		nl1l0i6 = 0;
	always @ ( posedge clk)
		  nl1l0i6 <= nl1l0i5;
	initial
		nl1l1i11 = 0;
	always @ ( posedge clk)
		  nl1l1i11 <= nl1l1i12;
	event nl1l1i11_event;
	initial
		#1 ->nl1l1i11_event;
	always @(nl1l1i11_event)
		nl1l1i11 <= {1{1'b1}};
	initial
		nl1l1i12 = 0;
	always @ ( posedge clk)
		  nl1l1i12 <= nl1l1i11;
	initial
		nl1l1l10 = 0;
	always @ ( posedge clk)
		  nl1l1l10 <= nl1l1l9;
	initial
		nl1l1l9 = 0;
	always @ ( posedge clk)
		  nl1l1l9 <= nl1l1l10;
	event nl1l1l9_event;
	initial
		#1 ->nl1l1l9_event;
	always @(nl1l1l9_event)
		nl1l1l9 <= {1{1'b1}};
	initial
		nl1l1O7 = 0;
	always @ ( posedge clk)
		  nl1l1O7 <= nl1l1O8;
	event nl1l1O7_event;
	initial
		#1 ->nl1l1O7_event;
	always @(nl1l1O7_event)
		nl1l1O7 <= {1{1'b1}};
	initial
		nl1l1O8 = 0;
	always @ ( posedge clk)
		  nl1l1O8 <= nl1l1O7;
	initial
		nl1liO3 = 0;
	always @ ( posedge clk)
		  nl1liO3 <= nl1liO4;
	event nl1liO3_event;
	initial
		#1 ->nl1liO3_event;
	always @(nl1liO3_event)
		nl1liO3 <= {1{1'b1}};
	initial
		nl1liO4 = 0;
	always @ ( posedge clk)
		  nl1liO4 <= nl1liO3;
	initial
		nl1lli1 = 0;
	always @ ( posedge clk)
		  nl1lli1 <= nl1lli2;
	event nl1lli1_event;
	initial
		#1 ->nl1lli1_event;
	always @(nl1lli1_event)
		nl1lli1 <= {1{1'b1}};
	initial
		nl1lli2 = 0;
	always @ ( posedge clk)
		  nl1lli2 <= nl1lli1;
	initial
	begin
		n01O = 0;
		n0li = 0;
		n100i = 0;
		n100l = 0;
		n100O = 0;
		n101i = 0;
		n101l = 0;
		n101O = 0;
		n10ii = 0;
		n10il = 0;
		n10iO = 0;
		n10li = 0;
		n10ll = 0;
		n10lO = 0;
		n10Oi = 0;
		n10Ol = 0;
		n10OO = 0;
		n110i = 0;
		n110l = 0;
		n110O = 0;
		n111i = 0;
		n111l = 0;
		n111O = 0;
		n11ii = 0;
		n11il = 0;
		n11iO = 0;
		n11li = 0;
		n11ll = 0;
		n11lO = 0;
		n11Oi = 0;
		n11Ol = 0;
		n11OO = 0;
		n1i0i = 0;
		n1i0l = 0;
		n1i0O = 0;
		n1i1i = 0;
		n1i1l = 0;
		n1i1O = 0;
		n1iii = 0;
		n1iil = 0;
		n1iiO = 0;
		n1ili = 0;
		n1ill = 0;
		n1ilO = 0;
		n1iOi = 0;
		n1iOl = 0;
		n1iOO = 0;
		n1l0i = 0;
		n1l0l = 0;
		n1l0O = 0;
		n1l1i = 0;
		n1l1l = 0;
		n1l1O = 0;
		n1lii = 0;
		n1lil = 0;
		n1liO = 0;
		n1lli = 0;
		niOil = 0;
		niOll = 0;
		niOlO = 0;
		niOOi = 0;
		niOOl = 0;
		niOOO = 0;
		nl00lO = 0;
		nl00Oi = 0;
		nl00Ol = 0;
		nl00OO = 0;
		nl01ii = 0;
		nl01il = 0;
		nl01iO = 0;
		nl01li = 0;
		nl0i0i = 0;
		nl0i0l = 0;
		nl0i0O = 0;
		nl0i1i = 0;
		nl0i1l = 0;
		nl0i1O = 0;
		nl0iii = 0;
		nl0iil = 0;
		nl0iiO = 0;
		nl0ili = 0;
		nl0ill = 0;
		nl0ilO = 0;
		nl0iOi = 0;
		nl0iOl = 0;
		nl0iOO = 0;
		nl0l0i = 0;
		nl0l0l = 0;
		nl0l0O = 0;
		nl0l1i = 0;
		nl0l1l = 0;
		nl0l1O = 0;
		nl0lii = 0;
		nl0lil = 0;
		nl0liO = 0;
		nl0lli = 0;
		nl0lll = 0;
		nl0llO = 0;
		nl10i = 0;
		nl10l = 0;
		nl10O = 0;
		nl11i = 0;
		nl11l = 0;
		nl11O = 0;
		nl1ii = 0;
		nl1il = 0;
		nl1lll = 0;
		nl1llO = 0;
		nl1lOi = 0;
		nl1lOl = 0;
		nl1lOO = 0;
		nl1O0i = 0;
		nl1O0l = 0;
		nl1O0O = 0;
		nl1O1i = 0;
		nl1O1l = 0;
		nl1O1O = 0;
		nlil0i = 0;
		nlil0l = 0;
		nlil0O = 0;
		nlil1l = 0;
		nlil1O = 0;
		nlilii = 0;
		nlilil = 0;
		nliliO = 0;
		nlilli = 0;
		nlilll = 0;
		nlillO = 0;
		nlilOi = 0;
		nlilOl = 0;
		nlilOO = 0;
		nliO0i = 0;
		nliO0l = 0;
		nliO0O = 0;
		nliO1i = 0;
		nliO1l = 0;
		nliO1O = 0;
		nliOii = 0;
		nll0O = 0;
		nllii = 0;
		nlliiO = 0;
		nllil = 0;
		nllill = 0;
		nllilO = 0;
		nlliO = 0;
		nlliOi = 0;
		nlliOl = 0;
		nlliOO = 0;
		nlll0i = 0;
		nlll0l = 0;
		nlll0O = 0;
		nlll1i = 0;
		nlll1l = 0;
		nlll1O = 0;
		nllli = 0;
		nlllii = 0;
		nlllil = 0;
		nllliO = 0;
		nllll = 0;
		nlllO = 0;
		nllOi = 0;
		nllOl = 0;
		nllOO = 0;
		nlO01i = 0;
		nlO01l = 0;
		nlO0i = 0;
		nlO1i = 0;
		nlO1il = 0;
		nlO1iO = 0;
		nlO1l = 0;
		nlO1li = 0;
		nlO1ll = 0;
		nlO1lO = 0;
		nlO1O = 0;
		nlO1Oi = 0;
		nlO1Ol = 0;
		nlO1OO = 0;
		nlOl0O = 0;
		nlOlii = 0;
		nlOlil = 0;
		nlOliO = 0;
		nlOlli = 0;
		nlOlll = 0;
		nlOllO = 0;
		nlOlOi = 0;
		nlOlOl = 0;
		nlOlOO = 0;
		nlOO0i = 0;
		nlOO0l = 0;
		nlOO0O = 0;
		nlOO1i = 0;
		nlOO1l = 0;
		nlOO1O = 0;
		nlOOii = 0;
		nlOOil = 0;
		nlOOiO = 0;
		nlOOli = 0;
		nlOOll = 0;
		nlOOlO = 0;
		nlOOOi = 0;
		nlOOOl = 0;
		nlOOOO = 0;
	end
	always @ (clk or wire_n0iO_PRN or wire_n0iO_CLRN)
	begin
		if (wire_n0iO_PRN == 1'b0) 
		begin
			n01O <= 1;
			n0li <= 1;
			n100i <= 1;
			n100l <= 1;
			n100O <= 1;
			n101i <= 1;
			n101l <= 1;
			n101O <= 1;
			n10ii <= 1;
			n10il <= 1;
			n10iO <= 1;
			n10li <= 1;
			n10ll <= 1;
			n10lO <= 1;
			n10Oi <= 1;
			n10Ol <= 1;
			n10OO <= 1;
			n110i <= 1;
			n110l <= 1;
			n110O <= 1;
			n111i <= 1;
			n111l <= 1;
			n111O <= 1;
			n11ii <= 1;
			n11il <= 1;
			n11iO <= 1;
			n11li <= 1;
			n11ll <= 1;
			n11lO <= 1;
			n11Oi <= 1;
			n11Ol <= 1;
			n11OO <= 1;
			n1i0i <= 1;
			n1i0l <= 1;
			n1i0O <= 1;
			n1i1i <= 1;
			n1i1l <= 1;
			n1i1O <= 1;
			n1iii <= 1;
			n1iil <= 1;
			n1iiO <= 1;
			n1ili <= 1;
			n1ill <= 1;
			n1ilO <= 1;
			n1iOi <= 1;
			n1iOl <= 1;
			n1iOO <= 1;
			n1l0i <= 1;
			n1l0l <= 1;
			n1l0O <= 1;
			n1l1i <= 1;
			n1l1l <= 1;
			n1l1O <= 1;
			n1lii <= 1;
			n1lil <= 1;
			n1liO <= 1;
			n1lli <= 1;
			niOil <= 1;
			niOll <= 1;
			niOlO <= 1;
			niOOi <= 1;
			niOOl <= 1;
			niOOO <= 1;
			nl00lO <= 1;
			nl00Oi <= 1;
			nl00Ol <= 1;
			nl00OO <= 1;
			nl01ii <= 1;
			nl01il <= 1;
			nl01iO <= 1;
			nl01li <= 1;
			nl0i0i <= 1;
			nl0i0l <= 1;
			nl0i0O <= 1;
			nl0i1i <= 1;
			nl0i1l <= 1;
			nl0i1O <= 1;
			nl0iii <= 1;
			nl0iil <= 1;
			nl0iiO <= 1;
			nl0ili <= 1;
			nl0ill <= 1;
			nl0ilO <= 1;
			nl0iOi <= 1;
			nl0iOl <= 1;
			nl0iOO <= 1;
			nl0l0i <= 1;
			nl0l0l <= 1;
			nl0l0O <= 1;
			nl0l1i <= 1;
			nl0l1l <= 1;
			nl0l1O <= 1;
			nl0lii <= 1;
			nl0lil <= 1;
			nl0liO <= 1;
			nl0lli <= 1;
			nl0lll <= 1;
			nl0llO <= 1;
			nl10i <= 1;
			nl10l <= 1;
			nl10O <= 1;
			nl11i <= 1;
			nl11l <= 1;
			nl11O <= 1;
			nl1ii <= 1;
			nl1il <= 1;
			nl1lll <= 1;
			nl1llO <= 1;
			nl1lOi <= 1;
			nl1lOl <= 1;
			nl1lOO <= 1;
			nl1O0i <= 1;
			nl1O0l <= 1;
			nl1O0O <= 1;
			nl1O1i <= 1;
			nl1O1l <= 1;
			nl1O1O <= 1;
			nlil0i <= 1;
			nlil0l <= 1;
			nlil0O <= 1;
			nlil1l <= 1;
			nlil1O <= 1;
			nlilii <= 1;
			nlilil <= 1;
			nliliO <= 1;
			nlilli <= 1;
			nlilll <= 1;
			nlillO <= 1;
			nlilOi <= 1;
			nlilOl <= 1;
			nlilOO <= 1;
			nliO0i <= 1;
			nliO0l <= 1;
			nliO0O <= 1;
			nliO1i <= 1;
			nliO1l <= 1;
			nliO1O <= 1;
			nliOii <= 1;
			nll0O <= 1;
			nllii <= 1;
			nlliiO <= 1;
			nllil <= 1;
			nllill <= 1;
			nllilO <= 1;
			nlliO <= 1;
			nlliOi <= 1;
			nlliOl <= 1;
			nlliOO <= 1;
			nlll0i <= 1;
			nlll0l <= 1;
			nlll0O <= 1;
			nlll1i <= 1;
			nlll1l <= 1;
			nlll1O <= 1;
			nllli <= 1;
			nlllii <= 1;
			nlllil <= 1;
			nllliO <= 1;
			nllll <= 1;
			nlllO <= 1;
			nllOi <= 1;
			nllOl <= 1;
			nllOO <= 1;
			nlO01i <= 1;
			nlO01l <= 1;
			nlO0i <= 1;
			nlO1i <= 1;
			nlO1il <= 1;
			nlO1iO <= 1;
			nlO1l <= 1;
			nlO1li <= 1;
			nlO1ll <= 1;
			nlO1lO <= 1;
			nlO1O <= 1;
			nlO1Oi <= 1;
			nlO1Ol <= 1;
			nlO1OO <= 1;
			nlOl0O <= 1;
			nlOlii <= 1;
			nlOlil <= 1;
			nlOliO <= 1;
			nlOlli <= 1;
			nlOlll <= 1;
			nlOllO <= 1;
			nlOlOi <= 1;
			nlOlOl <= 1;
			nlOlOO <= 1;
			nlOO0i <= 1;
			nlOO0l <= 1;
			nlOO0O <= 1;
			nlOO1i <= 1;
			nlOO1l <= 1;
			nlOO1O <= 1;
			nlOOii <= 1;
			nlOOil <= 1;
			nlOOiO <= 1;
			nlOOli <= 1;
			nlOOll <= 1;
			nlOOlO <= 1;
			nlOOOi <= 1;
			nlOOOl <= 1;
			nlOOOO <= 1;
		end
		else if  (wire_n0iO_CLRN == 1'b0) 
		begin
			n01O <= 0;
			n0li <= 0;
			n100i <= 0;
			n100l <= 0;
			n100O <= 0;
			n101i <= 0;
			n101l <= 0;
			n101O <= 0;
			n10ii <= 0;
			n10il <= 0;
			n10iO <= 0;
			n10li <= 0;
			n10ll <= 0;
			n10lO <= 0;
			n10Oi <= 0;
			n10Ol <= 0;
			n10OO <= 0;
			n110i <= 0;
			n110l <= 0;
			n110O <= 0;
			n111i <= 0;
			n111l <= 0;
			n111O <= 0;
			n11ii <= 0;
			n11il <= 0;
			n11iO <= 0;
			n11li <= 0;
			n11ll <= 0;
			n11lO <= 0;
			n11Oi <= 0;
			n11Ol <= 0;
			n11OO <= 0;
			n1i0i <= 0;
			n1i0l <= 0;
			n1i0O <= 0;
			n1i1i <= 0;
			n1i1l <= 0;
			n1i1O <= 0;
			n1iii <= 0;
			n1iil <= 0;
			n1iiO <= 0;
			n1ili <= 0;
			n1ill <= 0;
			n1ilO <= 0;
			n1iOi <= 0;
			n1iOl <= 0;
			n1iOO <= 0;
			n1l0i <= 0;
			n1l0l <= 0;
			n1l0O <= 0;
			n1l1i <= 0;
			n1l1l <= 0;
			n1l1O <= 0;
			n1lii <= 0;
			n1lil <= 0;
			n1liO <= 0;
			n1lli <= 0;
			niOil <= 0;
			niOll <= 0;
			niOlO <= 0;
			niOOi <= 0;
			niOOl <= 0;
			niOOO <= 0;
			nl00lO <= 0;
			nl00Oi <= 0;
			nl00Ol <= 0;
			nl00OO <= 0;
			nl01ii <= 0;
			nl01il <= 0;
			nl01iO <= 0;
			nl01li <= 0;
			nl0i0i <= 0;
			nl0i0l <= 0;
			nl0i0O <= 0;
			nl0i1i <= 0;
			nl0i1l <= 0;
			nl0i1O <= 0;
			nl0iii <= 0;
			nl0iil <= 0;
			nl0iiO <= 0;
			nl0ili <= 0;
			nl0ill <= 0;
			nl0ilO <= 0;
			nl0iOi <= 0;
			nl0iOl <= 0;
			nl0iOO <= 0;
			nl0l0i <= 0;
			nl0l0l <= 0;
			nl0l0O <= 0;
			nl0l1i <= 0;
			nl0l1l <= 0;
			nl0l1O <= 0;
			nl0lii <= 0;
			nl0lil <= 0;
			nl0liO <= 0;
			nl0lli <= 0;
			nl0lll <= 0;
			nl0llO <= 0;
			nl10i <= 0;
			nl10l <= 0;
			nl10O <= 0;
			nl11i <= 0;
			nl11l <= 0;
			nl11O <= 0;
			nl1ii <= 0;
			nl1il <= 0;
			nl1lll <= 0;
			nl1llO <= 0;
			nl1lOi <= 0;
			nl1lOl <= 0;
			nl1lOO <= 0;
			nl1O0i <= 0;
			nl1O0l <= 0;
			nl1O0O <= 0;
			nl1O1i <= 0;
			nl1O1l <= 0;
			nl1O1O <= 0;
			nlil0i <= 0;
			nlil0l <= 0;
			nlil0O <= 0;
			nlil1l <= 0;
			nlil1O <= 0;
			nlilii <= 0;
			nlilil <= 0;
			nliliO <= 0;
			nlilli <= 0;
			nlilll <= 0;
			nlillO <= 0;
			nlilOi <= 0;
			nlilOl <= 0;
			nlilOO <= 0;
			nliO0i <= 0;
			nliO0l <= 0;
			nliO0O <= 0;
			nliO1i <= 0;
			nliO1l <= 0;
			nliO1O <= 0;
			nliOii <= 0;
			nll0O <= 0;
			nllii <= 0;
			nlliiO <= 0;
			nllil <= 0;
			nllill <= 0;
			nllilO <= 0;
			nlliO <= 0;
			nlliOi <= 0;
			nlliOl <= 0;
			nlliOO <= 0;
			nlll0i <= 0;
			nlll0l <= 0;
			nlll0O <= 0;
			nlll1i <= 0;
			nlll1l <= 0;
			nlll1O <= 0;
			nllli <= 0;
			nlllii <= 0;
			nlllil <= 0;
			nllliO <= 0;
			nllll <= 0;
			nlllO <= 0;
			nllOi <= 0;
			nllOl <= 0;
			nllOO <= 0;
			nlO01i <= 0;
			nlO01l <= 0;
			nlO0i <= 0;
			nlO1i <= 0;
			nlO1il <= 0;
			nlO1iO <= 0;
			nlO1l <= 0;
			nlO1li <= 0;
			nlO1ll <= 0;
			nlO1lO <= 0;
			nlO1O <= 0;
			nlO1Oi <= 0;
			nlO1Ol <= 0;
			nlO1OO <= 0;
			nlOl0O <= 0;
			nlOlii <= 0;
			nlOlil <= 0;
			nlOliO <= 0;
			nlOlli <= 0;
			nlOlll <= 0;
			nlOllO <= 0;
			nlOlOi <= 0;
			nlOlOl <= 0;
			nlOlOO <= 0;
			nlOO0i <= 0;
			nlOO0l <= 0;
			nlOO0O <= 0;
			nlOO1i <= 0;
			nlOO1l <= 0;
			nlOO1O <= 0;
			nlOOii <= 0;
			nlOOil <= 0;
			nlOOiO <= 0;
			nlOOli <= 0;
			nlOOll <= 0;
			nlOOlO <= 0;
			nlOOOi <= 0;
			nlOOOl <= 0;
			nlOOOO <= 0;
		end
		else 
		if (clk != n0iO_clk_prev && clk == 1'b1) 
		begin
			n01O <= wire_nlO0l_dataout;
			n0li <= wire_n00O_dataout;
			n100i <= wire_n001O_dataout;
			n100l <= wire_n001l_dataout;
			n100O <= wire_n001i_dataout;
			n101i <= wire_n000O_dataout;
			n101l <= wire_n000l_dataout;
			n101O <= wire_n000i_dataout;
			n10ii <= wire_n01OO_dataout;
			n10il <= wire_n01Ol_dataout;
			n10iO <= wire_n01Oi_dataout;
			n10li <= wire_n01lO_dataout;
			n10ll <= wire_n01ll_dataout;
			n10lO <= wire_n01li_dataout;
			n10Oi <= wire_n01iO_dataout;
			n10Ol <= wire_n01il_dataout;
			n10OO <= wire_n01ii_dataout;
			n110i <= wire_n0i1O_dataout;
			n110l <= wire_n0i1l_dataout;
			n110O <= wire_n0i1i_dataout;
			n111i <= wire_n0i0O_dataout;
			n111l <= wire_n0i0l_dataout;
			n111O <= wire_n0i0i_dataout;
			n11ii <= wire_n00OO_dataout;
			n11il <= wire_n00Ol_dataout;
			n11iO <= wire_n00Oi_dataout;
			n11li <= wire_n00lO_dataout;
			n11ll <= wire_n00ll_dataout;
			n11lO <= wire_n00li_dataout;
			n11Oi <= wire_n00iO_dataout;
			n11Ol <= wire_n00il_dataout;
			n11OO <= wire_n00ii_dataout;
			n1i0i <= wire_n011O_dataout;
			n1i0l <= wire_n011l_dataout;
			n1i0O <= wire_n011i_dataout;
			n1i1i <= wire_n010O_dataout;
			n1i1l <= wire_n010l_dataout;
			n1i1O <= wire_n010i_dataout;
			n1iii <= wire_n1OOO_dataout;
			n1iil <= wire_n1OOl_dataout;
			n1iiO <= wire_n1OOi_dataout;
			n1ili <= wire_n1OlO_dataout;
			n1ill <= wire_n1Oll_dataout;
			n1ilO <= wire_n1Oli_dataout;
			n1iOi <= wire_n1OiO_dataout;
			n1iOl <= wire_n1Oil_dataout;
			n1iOO <= wire_n1Oii_dataout;
			n1l0i <= wire_n1O1O_dataout;
			n1l0l <= wire_n1O1l_dataout;
			n1l0O <= wire_n1O1i_dataout;
			n1l1i <= wire_n1O0O_dataout;
			n1l1l <= wire_n1O0l_dataout;
			n1l1O <= wire_n1O0i_dataout;
			n1lii <= wire_n1lOO_dataout;
			n1lil <= wire_n1lOl_dataout;
			n1liO <= wire_n1lOi_dataout;
			n1lli <= wire_n1llO_dataout;
			niOil <= wire_n1lll_dataout;
			niOll <= wire_nl0ii_dataout;
			niOlO <= wire_nl00O_dataout;
			niOOi <= wire_nl00l_dataout;
			niOOl <= wire_nl00i_dataout;
			niOOO <= wire_nl01O_dataout;
			nl00lO <= wire_nli1Ol_dataout;
			nl00Oi <= wire_nli1Oi_dataout;
			nl00Ol <= wire_nli1lO_dataout;
			nl00OO <= wire_nli1ll_dataout;
			nl01ii <= wire_nl011O_dataout;
			nl01il <= wire_nl010i_dataout;
			nl01iO <= wire_nl010l_dataout;
			nl01li <= wire_nl010O_dataout;
			nl0i0i <= wire_nli1ii_dataout;
			nl0i0l <= wire_nli10O_dataout;
			nl0i0O <= wire_nli10l_dataout;
			nl0i1i <= wire_nli1li_dataout;
			nl0i1l <= wire_nli1iO_dataout;
			nl0i1O <= wire_nli1il_dataout;
			nl0iii <= wire_nli10i_dataout;
			nl0iil <= wire_nli11O_dataout;
			nl0iiO <= wire_nli11l_dataout;
			nl0ili <= wire_nli11i_dataout;
			nl0ill <= wire_nl0OOO_dataout;
			nl0ilO <= wire_nl0OOl_dataout;
			nl0iOi <= wire_nl0OOi_dataout;
			nl0iOl <= wire_nl0OlO_dataout;
			nl0iOO <= wire_nl0Oll_dataout;
			nl0l0i <= wire_nl0Oii_dataout;
			nl0l0l <= wire_nl0O0O_dataout;
			nl0l0O <= wire_nl0O0l_dataout;
			nl0l1i <= wire_nl0Oli_dataout;
			nl0l1l <= wire_nl0OiO_dataout;
			nl0l1O <= wire_nl0Oil_dataout;
			nl0lii <= wire_nl0O0i_dataout;
			nl0lil <= wire_nl0O1O_dataout;
			nl0liO <= wire_nl0O1l_dataout;
			nl0lli <= wire_nl0O1i_dataout;
			nl0lll <= wire_nl0lOO_dataout;
			nl0llO <= wire_nl0lOl_dataout;
			nl10i <= wire_nl1Ol_dataout;
			nl10l <= wire_nl1Oi_dataout;
			nl10O <= wire_nl1lO_dataout;
			nl11i <= wire_nl01l_dataout;
			nl11l <= wire_nl01i_dataout;
			nl11O <= wire_nl1OO_dataout;
			nl1ii <= wire_nl1ll_dataout;
			nl1il <= wire_nl1li_dataout;
			nl1lll <= wire_nl1Oii_dataout;
			nl1llO <= wire_nl1Oil_dataout;
			nl1lOi <= wire_nl1OiO_dataout;
			nl1lOl <= wire_nl1Oli_dataout;
			nl1lOO <= wire_nl1Oll_dataout;
			nl1O0i <= wire_nl1OOO_dataout;
			nl1O0l <= wire_nl011i_dataout;
			nl1O0O <= wire_nl011l_dataout;
			nl1O1i <= wire_nl1OlO_dataout;
			nl1O1l <= wire_nl1OOi_dataout;
			nl1O1O <= wire_nl1OOl_dataout;
			nlil0i <= wire_nll1lO_dataout;
			nlil0l <= wire_nll1ll_dataout;
			nlil0O <= wire_nll1li_dataout;
			nlil1l <= wire_nl0lOi_dataout;
			nlil1O <= wire_nll1Oi_dataout;
			nlilii <= wire_nll1iO_dataout;
			nlilil <= wire_nll1il_dataout;
			nliliO <= wire_nll1ii_dataout;
			nlilli <= wire_nll10O_dataout;
			nlilll <= wire_nll10l_dataout;
			nlillO <= wire_nll10i_dataout;
			nlilOi <= wire_nll11O_dataout;
			nlilOl <= wire_nll11l_dataout;
			nlilOO <= wire_nll11i_dataout;
			nliO0i <= wire_nliOlO_dataout;
			nliO0l <= wire_nliOll_dataout;
			nliO0O <= wire_nliOli_dataout;
			nliO1i <= wire_nliOOO_dataout;
			nliO1l <= wire_nliOOl_dataout;
			nliO1O <= wire_nliOOi_dataout;
			nliOii <= wire_nliOiO_dataout;
			nll0O <= wire_nl1iO_dataout;
			nllii <= wire_n11O_dataout;
			nlliiO <= wire_nliOil_dataout;
			nllil <= wire_n11l_dataout;
			nllill <= wire_nllOil_dataout;
			nllilO <= wire_nllOii_dataout;
			nlliO <= wire_n11i_dataout;
			nlliOi <= wire_nllO0O_dataout;
			nlliOl <= wire_nllO0l_dataout;
			nlliOO <= wire_nllO0i_dataout;
			nlll0i <= wire_nlllOO_dataout;
			nlll0l <= wire_nlllOl_dataout;
			nlll0O <= wire_nlllOi_dataout;
			nlll1i <= wire_nllO1O_dataout;
			nlll1l <= wire_nllO1l_dataout;
			nlll1O <= wire_nllO1i_dataout;
			nllli <= wire_nlOOO_dataout;
			nlllii <= wire_nllllO_dataout;
			nlllil <= wire_nlllll_dataout;
			nllliO <= wire_nlllli_dataout;
			nllll <= wire_nlOOl_dataout;
			nlllO <= wire_nlOOi_dataout;
			nllOi <= wire_nlOlO_dataout;
			nllOl <= wire_nlOll_dataout;
			nllOO <= wire_nlOli_dataout;
			nlO01i <= wire_nlO00l_dataout;
			nlO01l <= wire_nlO00i_dataout;
			nlO0i <= wire_nlO0O_dataout;
			nlO1i <= wire_nlOiO_dataout;
			nlO1il <= wire_nlO0Oi_dataout;
			nlO1iO <= wire_nlO0lO_dataout;
			nlO1l <= wire_nlOil_dataout;
			nlO1li <= wire_nlO0ll_dataout;
			nlO1ll <= wire_nlO0li_dataout;
			nlO1lO <= wire_nlO0iO_dataout;
			nlO1O <= wire_nlOii_dataout;
			nlO1Oi <= wire_nlO0il_dataout;
			nlO1Ol <= wire_nlO0ii_dataout;
			nlO1OO <= wire_nlO00O_dataout;
			nlOl0O <= wire_nlO01O_dataout;
			nlOlii <= wire_n0lOO_dataout;
			nlOlil <= wire_n0lOl_dataout;
			nlOliO <= wire_n0lOi_dataout;
			nlOlli <= wire_n0llO_dataout;
			nlOlll <= wire_n0lll_dataout;
			nlOllO <= wire_n0lli_dataout;
			nlOlOi <= wire_n0liO_dataout;
			nlOlOl <= wire_n0lil_dataout;
			nlOlOO <= wire_n0lii_dataout;
			nlOO0i <= wire_n0l1O_dataout;
			nlOO0l <= wire_n0l1l_dataout;
			nlOO0O <= wire_n0l1i_dataout;
			nlOO1i <= wire_n0l0O_dataout;
			nlOO1l <= wire_n0l0l_dataout;
			nlOO1O <= wire_n0l0i_dataout;
			nlOOii <= wire_n0iOO_dataout;
			nlOOil <= wire_n0iOl_dataout;
			nlOOiO <= wire_n0iOi_dataout;
			nlOOli <= wire_n0ilO_dataout;
			nlOOll <= wire_n0ill_dataout;
			nlOOlO <= wire_n0ili_dataout;
			nlOOOi <= wire_n0iiO_dataout;
			nlOOOl <= wire_n0iil_dataout;
			nlOOOO <= wire_n0iii_dataout;
		end
		n0iO_clk_prev <= clk;
	end
	assign
		wire_n0iO_CLRN = (nl1lli2 ^ nl1lli1),
		wire_n0iO_PRN = (nl1liO4 ^ nl1liO3);
	event n01O_event;
	event n0li_event;
	event n100i_event;
	event n100l_event;
	event n100O_event;
	event n101i_event;
	event n101l_event;
	event n101O_event;
	event n10ii_event;
	event n10il_event;
	event n10iO_event;
	event n10li_event;
	event n10ll_event;
	event n10lO_event;
	event n10Oi_event;
	event n10Ol_event;
	event n10OO_event;
	event n110i_event;
	event n110l_event;
	event n110O_event;
	event n111i_event;
	event n111l_event;
	event n111O_event;
	event n11ii_event;
	event n11il_event;
	event n11iO_event;
	event n11li_event;
	event n11ll_event;
	event n11lO_event;
	event n11Oi_event;
	event n11Ol_event;
	event n11OO_event;
	event n1i0i_event;
	event n1i0l_event;
	event n1i0O_event;
	event n1i1i_event;
	event n1i1l_event;
	event n1i1O_event;
	event n1iii_event;
	event n1iil_event;
	event n1iiO_event;
	event n1ili_event;
	event n1ill_event;
	event n1ilO_event;
	event n1iOi_event;
	event n1iOl_event;
	event n1iOO_event;
	event n1l0i_event;
	event n1l0l_event;
	event n1l0O_event;
	event n1l1i_event;
	event n1l1l_event;
	event n1l1O_event;
	event n1lii_event;
	event n1lil_event;
	event n1liO_event;
	event n1lli_event;
	event niOil_event;
	event niOll_event;
	event niOlO_event;
	event niOOi_event;
	event niOOl_event;
	event niOOO_event;
	event nl00lO_event;
	event nl00Oi_event;
	event nl00Ol_event;
	event nl00OO_event;
	event nl01ii_event;
	event nl01il_event;
	event nl01iO_event;
	event nl01li_event;
	event nl0i0i_event;
	event nl0i0l_event;
	event nl0i0O_event;
	event nl0i1i_event;
	event nl0i1l_event;
	event nl0i1O_event;
	event nl0iii_event;
	event nl0iil_event;
	event nl0iiO_event;
	event nl0ili_event;
	event nl0ill_event;
	event nl0ilO_event;
	event nl0iOi_event;
	event nl0iOl_event;
	event nl0iOO_event;
	event nl0l0i_event;
	event nl0l0l_event;
	event nl0l0O_event;
	event nl0l1i_event;
	event nl0l1l_event;
	event nl0l1O_event;
	event nl0lii_event;
	event nl0lil_event;
	event nl0liO_event;
	event nl0lli_event;
	event nl0lll_event;
	event nl0llO_event;
	event nl10i_event;
	event nl10l_event;
	event nl10O_event;
	event nl11i_event;
	event nl11l_event;
	event nl11O_event;
	event nl1ii_event;
	event nl1il_event;
	event nl1lll_event;
	event nl1llO_event;
	event nl1lOi_event;
	event nl1lOl_event;
	event nl1lOO_event;
	event nl1O0i_event;
	event nl1O0l_event;
	event nl1O0O_event;
	event nl1O1i_event;
	event nl1O1l_event;
	event nl1O1O_event;
	event nlil0i_event;
	event nlil0l_event;
	event nlil0O_event;
	event nlil1l_event;
	event nlil1O_event;
	event nlilii_event;
	event nlilil_event;
	event nliliO_event;
	event nlilli_event;
	event nlilll_event;
	event nlillO_event;
	event nlilOi_event;
	event nlilOl_event;
	event nlilOO_event;
	event nliO0i_event;
	event nliO0l_event;
	event nliO0O_event;
	event nliO1i_event;
	event nliO1l_event;
	event nliO1O_event;
	event nliOii_event;
	event nll0O_event;
	event nllii_event;
	event nlliiO_event;
	event nllil_event;
	event nllill_event;
	event nllilO_event;
	event nlliO_event;
	event nlliOi_event;
	event nlliOl_event;
	event nlliOO_event;
	event nlll0i_event;
	event nlll0l_event;
	event nlll0O_event;
	event nlll1i_event;
	event nlll1l_event;
	event nlll1O_event;
	event nllli_event;
	event nlllii_event;
	event nlllil_event;
	event nllliO_event;
	event nllll_event;
	event nlllO_event;
	event nllOi_event;
	event nllOl_event;
	event nllOO_event;
	event nlO01i_event;
	event nlO01l_event;
	event nlO0i_event;
	event nlO1i_event;
	event nlO1il_event;
	event nlO1iO_event;
	event nlO1l_event;
	event nlO1li_event;
	event nlO1ll_event;
	event nlO1lO_event;
	event nlO1O_event;
	event nlO1Oi_event;
	event nlO1Ol_event;
	event nlO1OO_event;
	event nlOl0O_event;
	event nlOlii_event;
	event nlOlil_event;
	event nlOliO_event;
	event nlOlli_event;
	event nlOlll_event;
	event nlOllO_event;
	event nlOlOi_event;
	event nlOlOl_event;
	event nlOlOO_event;
	event nlOO0i_event;
	event nlOO0l_event;
	event nlOO0O_event;
	event nlOO1i_event;
	event nlOO1l_event;
	event nlOO1O_event;
	event nlOOii_event;
	event nlOOil_event;
	event nlOOiO_event;
	event nlOOli_event;
	event nlOOll_event;
	event nlOOlO_event;
	event nlOOOi_event;
	event nlOOOl_event;
	event nlOOOO_event;
	initial
		#1 ->n01O_event;
	initial
		#1 ->n0li_event;
	initial
		#1 ->n100i_event;
	initial
		#1 ->n100l_event;
	initial
		#1 ->n100O_event;
	initial
		#1 ->n101i_event;
	initial
		#1 ->n101l_event;
	initial
		#1 ->n101O_event;
	initial
		#1 ->n10ii_event;
	initial
		#1 ->n10il_event;
	initial
		#1 ->n10iO_event;
	initial
		#1 ->n10li_event;
	initial
		#1 ->n10ll_event;
	initial
		#1 ->n10lO_event;
	initial
		#1 ->n10Oi_event;
	initial
		#1 ->n10Ol_event;
	initial
		#1 ->n10OO_event;
	initial
		#1 ->n110i_event;
	initial
		#1 ->n110l_event;
	initial
		#1 ->n110O_event;
	initial
		#1 ->n111i_event;
	initial
		#1 ->n111l_event;
	initial
		#1 ->n111O_event;
	initial
		#1 ->n11ii_event;
	initial
		#1 ->n11il_event;
	initial
		#1 ->n11iO_event;
	initial
		#1 ->n11li_event;
	initial
		#1 ->n11ll_event;
	initial
		#1 ->n11lO_event;
	initial
		#1 ->n11Oi_event;
	initial
		#1 ->n11Ol_event;
	initial
		#1 ->n11OO_event;
	initial
		#1 ->n1i0i_event;
	initial
		#1 ->n1i0l_event;
	initial
		#1 ->n1i0O_event;
	initial
		#1 ->n1i1i_event;
	initial
		#1 ->n1i1l_event;
	initial
		#1 ->n1i1O_event;
	initial
		#1 ->n1iii_event;
	initial
		#1 ->n1iil_event;
	initial
		#1 ->n1iiO_event;
	initial
		#1 ->n1ili_event;
	initial
		#1 ->n1ill_event;
	initial
		#1 ->n1ilO_event;
	initial
		#1 ->n1iOi_event;
	initial
		#1 ->n1iOl_event;
	initial
		#1 ->n1iOO_event;
	initial
		#1 ->n1l0i_event;
	initial
		#1 ->n1l0l_event;
	initial
		#1 ->n1l0O_event;
	initial
		#1 ->n1l1i_event;
	initial
		#1 ->n1l1l_event;
	initial
		#1 ->n1l1O_event;
	initial
		#1 ->n1lii_event;
	initial
		#1 ->n1lil_event;
	initial
		#1 ->n1liO_event;
	initial
		#1 ->n1lli_event;
	initial
		#1 ->niOil_event;
	initial
		#1 ->niOll_event;
	initial
		#1 ->niOlO_event;
	initial
		#1 ->niOOi_event;
	initial
		#1 ->niOOl_event;
	initial
		#1 ->niOOO_event;
	initial
		#1 ->nl00lO_event;
	initial
		#1 ->nl00Oi_event;
	initial
		#1 ->nl00Ol_event;
	initial
		#1 ->nl00OO_event;
	initial
		#1 ->nl01ii_event;
	initial
		#1 ->nl01il_event;
	initial
		#1 ->nl01iO_event;
	initial
		#1 ->nl01li_event;
	initial
		#1 ->nl0i0i_event;
	initial
		#1 ->nl0i0l_event;
	initial
		#1 ->nl0i0O_event;
	initial
		#1 ->nl0i1i_event;
	initial
		#1 ->nl0i1l_event;
	initial
		#1 ->nl0i1O_event;
	initial
		#1 ->nl0iii_event;
	initial
		#1 ->nl0iil_event;
	initial
		#1 ->nl0iiO_event;
	initial
		#1 ->nl0ili_event;
	initial
		#1 ->nl0ill_event;
	initial
		#1 ->nl0ilO_event;
	initial
		#1 ->nl0iOi_event;
	initial
		#1 ->nl0iOl_event;
	initial
		#1 ->nl0iOO_event;
	initial
		#1 ->nl0l0i_event;
	initial
		#1 ->nl0l0l_event;
	initial
		#1 ->nl0l0O_event;
	initial
		#1 ->nl0l1i_event;
	initial
		#1 ->nl0l1l_event;
	initial
		#1 ->nl0l1O_event;
	initial
		#1 ->nl0lii_event;
	initial
		#1 ->nl0lil_event;
	initial
		#1 ->nl0liO_event;
	initial
		#1 ->nl0lli_event;
	initial
		#1 ->nl0lll_event;
	initial
		#1 ->nl0llO_event;
	initial
		#1 ->nl10i_event;
	initial
		#1 ->nl10l_event;
	initial
		#1 ->nl10O_event;
	initial
		#1 ->nl11i_event;
	initial
		#1 ->nl11l_event;
	initial
		#1 ->nl11O_event;
	initial
		#1 ->nl1ii_event;
	initial
		#1 ->nl1il_event;
	initial
		#1 ->nl1lll_event;
	initial
		#1 ->nl1llO_event;
	initial
		#1 ->nl1lOi_event;
	initial
		#1 ->nl1lOl_event;
	initial
		#1 ->nl1lOO_event;
	initial
		#1 ->nl1O0i_event;
	initial
		#1 ->nl1O0l_event;
	initial
		#1 ->nl1O0O_event;
	initial
		#1 ->nl1O1i_event;
	initial
		#1 ->nl1O1l_event;
	initial
		#1 ->nl1O1O_event;
	initial
		#1 ->nlil0i_event;
	initial
		#1 ->nlil0l_event;
	initial
		#1 ->nlil0O_event;
	initial
		#1 ->nlil1l_event;
	initial
		#1 ->nlil1O_event;
	initial
		#1 ->nlilii_event;
	initial
		#1 ->nlilil_event;
	initial
		#1 ->nliliO_event;
	initial
		#1 ->nlilli_event;
	initial
		#1 ->nlilll_event;
	initial
		#1 ->nlillO_event;
	initial
		#1 ->nlilOi_event;
	initial
		#1 ->nlilOl_event;
	initial
		#1 ->nlilOO_event;
	initial
		#1 ->nliO0i_event;
	initial
		#1 ->nliO0l_event;
	initial
		#1 ->nliO0O_event;
	initial
		#1 ->nliO1i_event;
	initial
		#1 ->nliO1l_event;
	initial
		#1 ->nliO1O_event;
	initial
		#1 ->nliOii_event;
	initial
		#1 ->nll0O_event;
	initial
		#1 ->nllii_event;
	initial
		#1 ->nlliiO_event;
	initial
		#1 ->nllil_event;
	initial
		#1 ->nllill_event;
	initial
		#1 ->nllilO_event;
	initial
		#1 ->nlliO_event;
	initial
		#1 ->nlliOi_event;
	initial
		#1 ->nlliOl_event;
	initial
		#1 ->nlliOO_event;
	initial
		#1 ->nlll0i_event;
	initial
		#1 ->nlll0l_event;
	initial
		#1 ->nlll0O_event;
	initial
		#1 ->nlll1i_event;
	initial
		#1 ->nlll1l_event;
	initial
		#1 ->nlll1O_event;
	initial
		#1 ->nllli_event;
	initial
		#1 ->nlllii_event;
	initial
		#1 ->nlllil_event;
	initial
		#1 ->nllliO_event;
	initial
		#1 ->nllll_event;
	initial
		#1 ->nlllO_event;
	initial
		#1 ->nllOi_event;
	initial
		#1 ->nllOl_event;
	initial
		#1 ->nllOO_event;
	initial
		#1 ->nlO01i_event;
	initial
		#1 ->nlO01l_event;
	initial
		#1 ->nlO0i_event;
	initial
		#1 ->nlO1i_event;
	initial
		#1 ->nlO1il_event;
	initial
		#1 ->nlO1iO_event;
	initial
		#1 ->nlO1l_event;
	initial
		#1 ->nlO1li_event;
	initial
		#1 ->nlO1ll_event;
	initial
		#1 ->nlO1lO_event;
	initial
		#1 ->nlO1O_event;
	initial
		#1 ->nlO1Oi_event;
	initial
		#1 ->nlO1Ol_event;
	initial
		#1 ->nlO1OO_event;
	initial
		#1 ->nlOl0O_event;
	initial
		#1 ->nlOlii_event;
	initial
		#1 ->nlOlil_event;
	initial
		#1 ->nlOliO_event;
	initial
		#1 ->nlOlli_event;
	initial
		#1 ->nlOlll_event;
	initial
		#1 ->nlOllO_event;
	initial
		#1 ->nlOlOi_event;
	initial
		#1 ->nlOlOl_event;
	initial
		#1 ->nlOlOO_event;
	initial
		#1 ->nlOO0i_event;
	initial
		#1 ->nlOO0l_event;
	initial
		#1 ->nlOO0O_event;
	initial
		#1 ->nlOO1i_event;
	initial
		#1 ->nlOO1l_event;
	initial
		#1 ->nlOO1O_event;
	initial
		#1 ->nlOOii_event;
	initial
		#1 ->nlOOil_event;
	initial
		#1 ->nlOOiO_event;
	initial
		#1 ->nlOOli_event;
	initial
		#1 ->nlOOll_event;
	initial
		#1 ->nlOOlO_event;
	initial
		#1 ->nlOOOi_event;
	initial
		#1 ->nlOOOl_event;
	initial
		#1 ->nlOOOO_event;
	always @(n01O_event)
		n01O <= 1;
	always @(n0li_event)
		n0li <= 1;
	always @(n100i_event)
		n100i <= 1;
	always @(n100l_event)
		n100l <= 1;
	always @(n100O_event)
		n100O <= 1;
	always @(n101i_event)
		n101i <= 1;
	always @(n101l_event)
		n101l <= 1;
	always @(n101O_event)
		n101O <= 1;
	always @(n10ii_event)
		n10ii <= 1;
	always @(n10il_event)
		n10il <= 1;
	always @(n10iO_event)
		n10iO <= 1;
	always @(n10li_event)
		n10li <= 1;
	always @(n10ll_event)
		n10ll <= 1;
	always @(n10lO_event)
		n10lO <= 1;
	always @(n10Oi_event)
		n10Oi <= 1;
	always @(n10Ol_event)
		n10Ol <= 1;
	always @(n10OO_event)
		n10OO <= 1;
	always @(n110i_event)
		n110i <= 1;
	always @(n110l_event)
		n110l <= 1;
	always @(n110O_event)
		n110O <= 1;
	always @(n111i_event)
		n111i <= 1;
	always @(n111l_event)
		n111l <= 1;
	always @(n111O_event)
		n111O <= 1;
	always @(n11ii_event)
		n11ii <= 1;
	always @(n11il_event)
		n11il <= 1;
	always @(n11iO_event)
		n11iO <= 1;
	always @(n11li_event)
		n11li <= 1;
	always @(n11ll_event)
		n11ll <= 1;
	always @(n11lO_event)
		n11lO <= 1;
	always @(n11Oi_event)
		n11Oi <= 1;
	always @(n11Ol_event)
		n11Ol <= 1;
	always @(n11OO_event)
		n11OO <= 1;
	always @(n1i0i_event)
		n1i0i <= 1;
	always @(n1i0l_event)
		n1i0l <= 1;
	always @(n1i0O_event)
		n1i0O <= 1;
	always @(n1i1i_event)
		n1i1i <= 1;
	always @(n1i1l_event)
		n1i1l <= 1;
	always @(n1i1O_event)
		n1i1O <= 1;
	always @(n1iii_event)
		n1iii <= 1;
	always @(n1iil_event)
		n1iil <= 1;
	always @(n1iiO_event)
		n1iiO <= 1;
	always @(n1ili_event)
		n1ili <= 1;
	always @(n1ill_event)
		n1ill <= 1;
	always @(n1ilO_event)
		n1ilO <= 1;
	always @(n1iOi_event)
		n1iOi <= 1;
	always @(n1iOl_event)
		n1iOl <= 1;
	always @(n1iOO_event)
		n1iOO <= 1;
	always @(n1l0i_event)
		n1l0i <= 1;
	always @(n1l0l_event)
		n1l0l <= 1;
	always @(n1l0O_event)
		n1l0O <= 1;
	always @(n1l1i_event)
		n1l1i <= 1;
	always @(n1l1l_event)
		n1l1l <= 1;
	always @(n1l1O_event)
		n1l1O <= 1;
	always @(n1lii_event)
		n1lii <= 1;
	always @(n1lil_event)
		n1lil <= 1;
	always @(n1liO_event)
		n1liO <= 1;
	always @(n1lli_event)
		n1lli <= 1;
	always @(niOil_event)
		niOil <= 1;
	always @(niOll_event)
		niOll <= 1;
	always @(niOlO_event)
		niOlO <= 1;
	always @(niOOi_event)
		niOOi <= 1;
	always @(niOOl_event)
		niOOl <= 1;
	always @(niOOO_event)
		niOOO <= 1;
	always @(nl00lO_event)
		nl00lO <= 1;
	always @(nl00Oi_event)
		nl00Oi <= 1;
	always @(nl00Ol_event)
		nl00Ol <= 1;
	always @(nl00OO_event)
		nl00OO <= 1;
	always @(nl01ii_event)
		nl01ii <= 1;
	always @(nl01il_event)
		nl01il <= 1;
	always @(nl01iO_event)
		nl01iO <= 1;
	always @(nl01li_event)
		nl01li <= 1;
	always @(nl0i0i_event)
		nl0i0i <= 1;
	always @(nl0i0l_event)
		nl0i0l <= 1;
	always @(nl0i0O_event)
		nl0i0O <= 1;
	always @(nl0i1i_event)
		nl0i1i <= 1;
	always @(nl0i1l_event)
		nl0i1l <= 1;
	always @(nl0i1O_event)
		nl0i1O <= 1;
	always @(nl0iii_event)
		nl0iii <= 1;
	always @(nl0iil_event)
		nl0iil <= 1;
	always @(nl0iiO_event)
		nl0iiO <= 1;
	always @(nl0ili_event)
		nl0ili <= 1;
	always @(nl0ill_event)
		nl0ill <= 1;
	always @(nl0ilO_event)
		nl0ilO <= 1;
	always @(nl0iOi_event)
		nl0iOi <= 1;
	always @(nl0iOl_event)
		nl0iOl <= 1;
	always @(nl0iOO_event)
		nl0iOO <= 1;
	always @(nl0l0i_event)
		nl0l0i <= 1;
	always @(nl0l0l_event)
		nl0l0l <= 1;
	always @(nl0l0O_event)
		nl0l0O <= 1;
	always @(nl0l1i_event)
		nl0l1i <= 1;
	always @(nl0l1l_event)
		nl0l1l <= 1;
	always @(nl0l1O_event)
		nl0l1O <= 1;
	always @(nl0lii_event)
		nl0lii <= 1;
	always @(nl0lil_event)
		nl0lil <= 1;
	always @(nl0liO_event)
		nl0liO <= 1;
	always @(nl0lli_event)
		nl0lli <= 1;
	always @(nl0lll_event)
		nl0lll <= 1;
	always @(nl0llO_event)
		nl0llO <= 1;
	always @(nl10i_event)
		nl10i <= 1;
	always @(nl10l_event)
		nl10l <= 1;
	always @(nl10O_event)
		nl10O <= 1;
	always @(nl11i_event)
		nl11i <= 1;
	always @(nl11l_event)
		nl11l <= 1;
	always @(nl11O_event)
		nl11O <= 1;
	always @(nl1ii_event)
		nl1ii <= 1;
	always @(nl1il_event)
		nl1il <= 1;
	always @(nl1lll_event)
		nl1lll <= 1;
	always @(nl1llO_event)
		nl1llO <= 1;
	always @(nl1lOi_event)
		nl1lOi <= 1;
	always @(nl1lOl_event)
		nl1lOl <= 1;
	always @(nl1lOO_event)
		nl1lOO <= 1;
	always @(nl1O0i_event)
		nl1O0i <= 1;
	always @(nl1O0l_event)
		nl1O0l <= 1;
	always @(nl1O0O_event)
		nl1O0O <= 1;
	always @(nl1O1i_event)
		nl1O1i <= 1;
	always @(nl1O1l_event)
		nl1O1l <= 1;
	always @(nl1O1O_event)
		nl1O1O <= 1;
	always @(nlil0i_event)
		nlil0i <= 1;
	always @(nlil0l_event)
		nlil0l <= 1;
	always @(nlil0O_event)
		nlil0O <= 1;
	always @(nlil1l_event)
		nlil1l <= 1;
	always @(nlil1O_event)
		nlil1O <= 1;
	always @(nlilii_event)
		nlilii <= 1;
	always @(nlilil_event)
		nlilil <= 1;
	always @(nliliO_event)
		nliliO <= 1;
	always @(nlilli_event)
		nlilli <= 1;
	always @(nlilll_event)
		nlilll <= 1;
	always @(nlillO_event)
		nlillO <= 1;
	always @(nlilOi_event)
		nlilOi <= 1;
	always @(nlilOl_event)
		nlilOl <= 1;
	always @(nlilOO_event)
		nlilOO <= 1;
	always @(nliO0i_event)
		nliO0i <= 1;
	always @(nliO0l_event)
		nliO0l <= 1;
	always @(nliO0O_event)
		nliO0O <= 1;
	always @(nliO1i_event)
		nliO1i <= 1;
	always @(nliO1l_event)
		nliO1l <= 1;
	always @(nliO1O_event)
		nliO1O <= 1;
	always @(nliOii_event)
		nliOii <= 1;
	always @(nll0O_event)
		nll0O <= 1;
	always @(nllii_event)
		nllii <= 1;
	always @(nlliiO_event)
		nlliiO <= 1;
	always @(nllil_event)
		nllil <= 1;
	always @(nllill_event)
		nllill <= 1;
	always @(nllilO_event)
		nllilO <= 1;
	always @(nlliO_event)
		nlliO <= 1;
	always @(nlliOi_event)
		nlliOi <= 1;
	always @(nlliOl_event)
		nlliOl <= 1;
	always @(nlliOO_event)
		nlliOO <= 1;
	always @(nlll0i_event)
		nlll0i <= 1;
	always @(nlll0l_event)
		nlll0l <= 1;
	always @(nlll0O_event)
		nlll0O <= 1;
	always @(nlll1i_event)
		nlll1i <= 1;
	always @(nlll1l_event)
		nlll1l <= 1;
	always @(nlll1O_event)
		nlll1O <= 1;
	always @(nllli_event)
		nllli <= 1;
	always @(nlllii_event)
		nlllii <= 1;
	always @(nlllil_event)
		nlllil <= 1;
	always @(nllliO_event)
		nllliO <= 1;
	always @(nllll_event)
		nllll <= 1;
	always @(nlllO_event)
		nlllO <= 1;
	always @(nllOi_event)
		nllOi <= 1;
	always @(nllOl_event)
		nllOl <= 1;
	always @(nllOO_event)
		nllOO <= 1;
	always @(nlO01i_event)
		nlO01i <= 1;
	always @(nlO01l_event)
		nlO01l <= 1;
	always @(nlO0i_event)
		nlO0i <= 1;
	always @(nlO1i_event)
		nlO1i <= 1;
	always @(nlO1il_event)
		nlO1il <= 1;
	always @(nlO1iO_event)
		nlO1iO <= 1;
	always @(nlO1l_event)
		nlO1l <= 1;
	always @(nlO1li_event)
		nlO1li <= 1;
	always @(nlO1ll_event)
		nlO1ll <= 1;
	always @(nlO1lO_event)
		nlO1lO <= 1;
	always @(nlO1O_event)
		nlO1O <= 1;
	always @(nlO1Oi_event)
		nlO1Oi <= 1;
	always @(nlO1Ol_event)
		nlO1Ol <= 1;
	always @(nlO1OO_event)
		nlO1OO <= 1;
	always @(nlOl0O_event)
		nlOl0O <= 1;
	always @(nlOlii_event)
		nlOlii <= 1;
	always @(nlOlil_event)
		nlOlil <= 1;
	always @(nlOliO_event)
		nlOliO <= 1;
	always @(nlOlli_event)
		nlOlli <= 1;
	always @(nlOlll_event)
		nlOlll <= 1;
	always @(nlOllO_event)
		nlOllO <= 1;
	always @(nlOlOi_event)
		nlOlOi <= 1;
	always @(nlOlOl_event)
		nlOlOl <= 1;
	always @(nlOlOO_event)
		nlOlOO <= 1;
	always @(nlOO0i_event)
		nlOO0i <= 1;
	always @(nlOO0l_event)
		nlOO0l <= 1;
	always @(nlOO0O_event)
		nlOO0O <= 1;
	always @(nlOO1i_event)
		nlOO1i <= 1;
	always @(nlOO1l_event)
		nlOO1l <= 1;
	always @(nlOO1O_event)
		nlOO1O <= 1;
	always @(nlOOii_event)
		nlOOii <= 1;
	always @(nlOOil_event)
		nlOOil <= 1;
	always @(nlOOiO_event)
		nlOOiO <= 1;
	always @(nlOOli_event)
		nlOOli <= 1;
	always @(nlOOll_event)
		nlOOll <= 1;
	always @(nlOOlO_event)
		nlOOlO <= 1;
	always @(nlOOOi_event)
		nlOOOi <= 1;
	always @(nlOOOl_event)
		nlOOOl <= 1;
	always @(nlOOOO_event)
		nlOOOO <= 1;
	lpm_add_sub   nl00ll
	( 
	.aclr((~ reset_n)),
	.clken(clken),
	.clock(clk),
	.cout(),
	.dataa({nl00lO, nl00Oi, nl00Ol, nl00OO, nl0i1i, nl0i1l, nl0i1O, nl0i0i, nl0i0l, nl0i0O, nl0iii, nl0iil, nl0iiO, nl0ili, nl0ill, nl0ilO, nl0iOi, nl0iOl, nl0iOO, nl0l1i, nl0l1l, nl0l1O, nl0l0i, nl0l0l, nl0l0O, nl0lii, nl0lil, nl0liO, nl0lli, nl0lll, nl0llO, nlil1l}),
	.datab({wire_nl00ll_result[31:0]}),
	.overflow(),
	.result(wire_nl00ll_result),
	.add_sub(),
	.cin()
	);
	defparam
		nl00ll.lpm_direction = "ADD",
		nl00ll.lpm_pipeline = 1,
		nl00ll.lpm_representation = "UNSIGNED",
		nl00ll.lpm_width = 32;
	lpm_add_sub   nllili
	( 
	.aclr((~ reset_n)),
	.clken(clken),
	.clock(clk),
	.cout(),
	.dataa({wire_nl00ll_result[31:13]}),
	.datab({{15{nliO0i}}, nliO0l, nliO0O, nliOii, nlliiO}),
	.overflow(),
	.result(wire_nllili_result),
	.add_sub(),
	.cin()
	);
	defparam
		nllili.lpm_direction = "ADD",
		nllili.lpm_pipeline = 1,
		nllili.lpm_representation = "SIGNED",
		nllili.lpm_width = 19;
	lpm_counter   n00i
	( 
	.aclr((~ reset_n)),
	.clk_en(clken),
	.clock(clk),
	.cout(),
	.q(wire_n00i_q),
	.aload(),
	.aset(),
	.cin(),
	.cnt_en(),
	.data(),
	.sclr(),
	.sload(),
	.sset(),
	.updown()
	);
	defparam
		n00i.lpm_direction = "UP",
		n00i.lpm_modulus = 0,
		n00i.lpm_port_updown = "PORT_CONNECTIVITY",
		n00i.lpm_width = 4;
	and(wire_n000i_dataout, wire_ni0iO_dataout, ~((~ reset_n)));
	and(wire_n000l_dataout, wire_ni0li_dataout, ~((~ reset_n)));
	and(wire_n000O_dataout, wire_ni0ll_dataout, ~((~ reset_n)));
	and(wire_n001i_dataout, wire_ni00O_dataout, ~((~ reset_n)));
	and(wire_n001l_dataout, wire_ni0ii_dataout, ~((~ reset_n)));
	and(wire_n001O_dataout, wire_ni0il_dataout, ~((~ reset_n)));
	and(wire_n00ii_dataout, wire_ni0lO_dataout, ~((~ reset_n)));
	and(wire_n00il_dataout, wire_ni0Oi_dataout, ~((~ reset_n)));
	and(wire_n00iO_dataout, wire_ni0Ol_dataout, ~((~ reset_n)));
	and(wire_n00li_dataout, wire_ni0OO_dataout, ~((~ reset_n)));
	and(wire_n00ll_dataout, wire_nii1i_dataout, ~((~ reset_n)));
	and(wire_n00lO_dataout, wire_nii1l_dataout, ~((~ reset_n)));
	and(wire_n00O_dataout, wire_n0ii_dataout, ~((~ reset_n)));
	and(wire_n00Oi_dataout, wire_nii1O_dataout, ~((~ reset_n)));
	and(wire_n00Ol_dataout, wire_nii0i_dataout, ~((~ reset_n)));
	and(wire_n00OO_dataout, wire_nii0l_dataout, ~((~ reset_n)));
	and(wire_n010i_dataout, wire_ni1iO_dataout, ~((~ reset_n)));
	and(wire_n010l_dataout, wire_ni1li_dataout, ~((~ reset_n)));
	and(wire_n010O_dataout, wire_ni1ll_dataout, ~((~ reset_n)));
	and(wire_n011i_dataout, wire_ni10O_dataout, ~((~ reset_n)));
	and(wire_n011l_dataout, wire_ni1ii_dataout, ~((~ reset_n)));
	and(wire_n011O_dataout, wire_ni1il_dataout, ~((~ reset_n)));
	assign		wire_n01i_dataout = (clken === 1'b1) ? niOlO : nllil;
	and(wire_n01ii_dataout, wire_ni1lO_dataout, ~((~ reset_n)));
	and(wire_n01il_dataout, wire_ni1Oi_dataout, ~((~ reset_n)));
	and(wire_n01iO_dataout, wire_ni1Ol_dataout, ~((~ reset_n)));
	assign		wire_n01l_dataout = (clken === 1'b1) ? niOll : nllii;
	and(wire_n01li_dataout, wire_ni1OO_dataout, ~((~ reset_n)));
	and(wire_n01ll_dataout, wire_ni01i_dataout, ~((~ reset_n)));
	and(wire_n01lO_dataout, wire_ni01l_dataout, ~((~ reset_n)));
	and(wire_n01Oi_dataout, wire_ni01O_dataout, ~((~ reset_n)));
	and(wire_n01Ol_dataout, wire_ni00i_dataout, ~((~ reset_n)));
	and(wire_n01OO_dataout, wire_ni00l_dataout, ~((~ reset_n)));
	and(wire_n0i0i_dataout, wire_niiiO_dataout, ~((~ reset_n)));
	and(wire_n0i0l_dataout, wire_niili_dataout, ~((~ reset_n)));
	and(wire_n0i0O_dataout, wire_niill_dataout, ~((~ reset_n)));
	and(wire_n0i1i_dataout, wire_nii0O_dataout, ~((~ reset_n)));
	and(wire_n0i1l_dataout, wire_niiii_dataout, ~((~ reset_n)));
	and(wire_n0i1O_dataout, wire_niiil_dataout, ~((~ reset_n)));
	or(wire_n0ii_dataout, n0li, (clken & ((((wire_n00i_q[0] & wire_n00i_q[3]) & (~ wire_n00i_q[1])) & (~ wire_n00i_q[2])) & (nl1l0i6 ^ nl1l0i5))));
	and(wire_n0iii_dataout, wire_niilO_dataout, ~((~ reset_n)));
	and(wire_n0iil_dataout, wire_niiOi_dataout, ~((~ reset_n)));
	and(wire_n0iiO_dataout, wire_niiOl_dataout, ~((~ reset_n)));
	and(wire_n0ili_dataout, wire_niiOO_dataout, ~((~ reset_n)));
	and(wire_n0ill_dataout, wire_nil1i_dataout, ~((~ reset_n)));
	and(wire_n0ilO_dataout, wire_nil1l_dataout, ~((~ reset_n)));
	and(wire_n0iOi_dataout, wire_nil1O_dataout, ~((~ reset_n)));
	and(wire_n0iOl_dataout, wire_nil0i_dataout, ~((~ reset_n)));
	and(wire_n0iOO_dataout, wire_nil0l_dataout, ~((~ reset_n)));
	and(wire_n0l0i_dataout, wire_niliO_dataout, ~((~ reset_n)));
	and(wire_n0l0l_dataout, wire_nilli_dataout, ~((~ reset_n)));
	and(wire_n0l0O_dataout, wire_nilll_dataout, ~((~ reset_n)));
	and(wire_n0l1i_dataout, wire_nil0O_dataout, ~((~ reset_n)));
	and(wire_n0l1l_dataout, wire_nilii_dataout, ~((~ reset_n)));
	and(wire_n0l1O_dataout, wire_nilil_dataout, ~((~ reset_n)));
	and(wire_n0lii_dataout, wire_nillO_dataout, ~((~ reset_n)));
	and(wire_n0lil_dataout, wire_nilOi_dataout, ~((~ reset_n)));
	and(wire_n0liO_dataout, wire_nilOl_dataout, ~((~ reset_n)));
	and(wire_n0lli_dataout, wire_nilOO_dataout, ~((~ reset_n)));
	and(wire_n0lll_dataout, wire_niO1i_dataout, ~((~ reset_n)));
	and(wire_n0llO_dataout, wire_niO1l_dataout, ~((~ reset_n)));
	and(wire_n0lOi_dataout, wire_niO1O_dataout, ~((~ reset_n)));
	and(wire_n0lOl_dataout, wire_niO0i_dataout, ~((~ reset_n)));
	and(wire_n0lOO_dataout, wire_niO0l_dataout, ~((~ reset_n)));
	assign		wire_n0O0i_dataout = (clken === 1'b1) ? nlOOOl : n1lil;
	assign		wire_n0O0l_dataout = (clken === 1'b1) ? nlOOOi : n1lii;
	assign		wire_n0O0O_dataout = (clken === 1'b1) ? nlOOlO : n1l0O;
	assign		wire_n0O1i_dataout = (clken === 1'b1) ? n111l : niOil;
	assign		wire_n0O1l_dataout = (clken === 1'b1) ? n111i : n1lli;
	assign		wire_n0O1O_dataout = (clken === 1'b1) ? nlOOOO : n1liO;
	assign		wire_n0Oii_dataout = (clken === 1'b1) ? nlOOll : n1l0l;
	assign		wire_n0Oil_dataout = (clken === 1'b1) ? nlOOli : n1l0i;
	assign		wire_n0OiO_dataout = (clken === 1'b1) ? nlOOiO : n1l1O;
	assign		wire_n0Oli_dataout = (clken === 1'b1) ? nlOOil : n1l1l;
	assign		wire_n0Oll_dataout = (clken === 1'b1) ? nlOOii : n1l1i;
	assign		wire_n0OlO_dataout = (clken === 1'b1) ? nlOO0O : n1iOO;
	assign		wire_n0OOi_dataout = (clken === 1'b1) ? nlOO0l : n1iOl;
	assign		wire_n0OOl_dataout = (clken === 1'b1) ? nlOO0i : n1iOi;
	assign		wire_n0OOO_dataout = (clken === 1'b1) ? nlOO1O : n1ilO;
	assign		wire_n10i_dataout = (clken === 1'b1) ? nll0O : n01O;
	assign		wire_n10l_dataout = (clken === 1'b1) ? nl1il : nlO0i;
	assign		wire_n10O_dataout = (clken === 1'b1) ? nl1ii : nlO1O;
	and(wire_n11i_dataout, wire_n1OO_dataout, ~((~ reset_n)));
	and(wire_n11l_dataout, wire_n01i_dataout, ~((~ reset_n)));
	and(wire_n11O_dataout, wire_n01l_dataout, ~((~ reset_n)));
	assign		wire_n1ii_dataout = (clken === 1'b1) ? nl10O : nlO1l;
	assign		wire_n1il_dataout = (clken === 1'b1) ? nl10l : nlO1i;
	assign		wire_n1iO_dataout = (clken === 1'b1) ? nl10i : nllOO;
	assign		wire_n1li_dataout = (clken === 1'b1) ? nl11O : nllOl;
	assign		wire_n1ll_dataout = (clken === 1'b1) ? nl11l : nllOi;
	and(wire_n1lll_dataout, wire_n0O1i_dataout, ~((~ reset_n)));
	and(wire_n1llO_dataout, wire_n0O1l_dataout, ~((~ reset_n)));
	assign		wire_n1lO_dataout = (clken === 1'b1) ? nl11i : nlllO;
	and(wire_n1lOi_dataout, wire_n0O1O_dataout, ~((~ reset_n)));
	and(wire_n1lOl_dataout, wire_n0O0i_dataout, ~((~ reset_n)));
	and(wire_n1lOO_dataout, wire_n0O0l_dataout, ~((~ reset_n)));
	and(wire_n1O0i_dataout, wire_n0OiO_dataout, ~((~ reset_n)));
	and(wire_n1O0l_dataout, wire_n0Oli_dataout, ~((~ reset_n)));
	and(wire_n1O0O_dataout, wire_n0Oll_dataout, ~((~ reset_n)));
	and(wire_n1O1i_dataout, wire_n0O0O_dataout, ~((~ reset_n)));
	and(wire_n1O1l_dataout, wire_n0Oii_dataout, ~((~ reset_n)));
	and(wire_n1O1O_dataout, wire_n0Oil_dataout, ~((~ reset_n)));
	assign		wire_n1Oi_dataout = (clken === 1'b1) ? niOOO : nllll;
	and(wire_n1Oii_dataout, wire_n0OlO_dataout, ~((~ reset_n)));
	and(wire_n1Oil_dataout, wire_n0OOi_dataout, ~((~ reset_n)));
	and(wire_n1OiO_dataout, wire_n0OOl_dataout, ~((~ reset_n)));
	assign		wire_n1Ol_dataout = (clken === 1'b1) ? niOOl : nllli;
	and(wire_n1Oli_dataout, wire_n0OOO_dataout, ~((~ reset_n)));
	and(wire_n1Oll_dataout, wire_ni11i_dataout, ~((~ reset_n)));
	and(wire_n1OlO_dataout, wire_ni11l_dataout, ~((~ reset_n)));
	assign		wire_n1OO_dataout = (clken === 1'b1) ? niOOi : nlliO;
	and(wire_n1OOi_dataout, wire_ni11O_dataout, ~((~ reset_n)));
	and(wire_n1OOl_dataout, wire_ni10i_dataout, ~((~ reset_n)));
	and(wire_n1OOO_dataout, wire_ni10l_dataout, ~((~ reset_n)));
	assign		wire_ni00i_dataout = (clken === 1'b1) ? wire_niO0O_o[7] : n10il;
	assign		wire_ni00l_dataout = (clken === 1'b1) ? wire_niO0O_o[8] : n10ii;
	assign		wire_ni00O_dataout = (clken === 1'b1) ? wire_niO0O_o[9] : n100O;
	assign		wire_ni01i_dataout = (clken === 1'b1) ? wire_niO0O_o[4] : n10ll;
	assign		wire_ni01l_dataout = (clken === 1'b1) ? wire_niO0O_o[5] : n10li;
	assign		wire_ni01O_dataout = (clken === 1'b1) ? wire_niO0O_o[6] : n10iO;
	assign		wire_ni0ii_dataout = (clken === 1'b1) ? wire_niO0O_o[10] : n100l;
	assign		wire_ni0il_dataout = (clken === 1'b1) ? wire_niO0O_o[11] : n100i;
	assign		wire_ni0iO_dataout = (clken === 1'b1) ? wire_niO0O_o[12] : n101O;
	assign		wire_ni0li_dataout = (clken === 1'b1) ? (~ wire_niO0O_o[13]) : n101l;
	assign		wire_ni0ll_dataout = (clken === 1'b1) ? wire_niOii_o[0] : n101i;
	assign		wire_ni0lO_dataout = (clken === 1'b1) ? wire_niOii_o[1] : n11OO;
	assign		wire_ni0Oi_dataout = (clken === 1'b1) ? wire_niOii_o[2] : n11Ol;
	assign		wire_ni0Ol_dataout = (clken === 1'b1) ? wire_niOii_o[3] : n11Oi;
	assign		wire_ni0OO_dataout = (clken === 1'b1) ? wire_niOii_o[4] : n11lO;
	assign		wire_ni10i_dataout = (clken === 1'b1) ? nlOlOl : n1iil;
	assign		wire_ni10l_dataout = (clken === 1'b1) ? nlOlOi : n1iii;
	assign		wire_ni10O_dataout = (clken === 1'b1) ? nlOllO : n1i0O;
	assign		wire_ni11i_dataout = (clken === 1'b1) ? nlOO1l : n1ill;
	assign		wire_ni11l_dataout = (clken === 1'b1) ? nlOO1i : n1ili;
	assign		wire_ni11O_dataout = (clken === 1'b1) ? nlOlOO : n1iiO;
	assign		wire_ni1ii_dataout = (clken === 1'b1) ? nlOlll : n1i0l;
	assign		wire_ni1il_dataout = (clken === 1'b1) ? nlOlli : n1i0i;
	assign		wire_ni1iO_dataout = (clken === 1'b1) ? nlOliO : n1i1O;
	assign		wire_ni1li_dataout = (clken === 1'b1) ? nlOlil : n1i1l;
	assign		wire_ni1ll_dataout = (clken === 1'b1) ? nlOlii : n1i1i;
	assign		wire_ni1lO_dataout = (clken === 1'b1) ? wire_niO0O_o[0] : n10OO;
	assign		wire_ni1Oi_dataout = (clken === 1'b1) ? wire_niO0O_o[1] : n10Ol;
	assign		wire_ni1Ol_dataout = (clken === 1'b1) ? wire_niO0O_o[2] : n10Oi;
	assign		wire_ni1OO_dataout = (clken === 1'b1) ? wire_niO0O_o[3] : n10lO;
	assign		wire_nii0i_dataout = (clken === 1'b1) ? wire_niOii_o[8] : n11il;
	assign		wire_nii0l_dataout = (clken === 1'b1) ? wire_niOii_o[9] : n11ii;
	assign		wire_nii0O_dataout = (clken === 1'b1) ? wire_niOii_o[10] : n110O;
	assign		wire_nii1i_dataout = (clken === 1'b1) ? wire_niOii_o[5] : n11ll;
	assign		wire_nii1l_dataout = (clken === 1'b1) ? wire_niOii_o[6] : n11li;
	assign		wire_nii1O_dataout = (clken === 1'b1) ? wire_niOii_o[7] : n11iO;
	assign		wire_niiii_dataout = (clken === 1'b1) ? wire_niOii_o[11] : n110l;
	assign		wire_niiil_dataout = (clken === 1'b1) ? wire_niOii_o[12] : n110i;
	assign		wire_niiiO_dataout = (clken === 1'b1) ? (~ wire_niOii_o[13]) : n111O;
	assign		wire_niili_dataout = (clken === 1'b1) ? wire_niOli_q_a[0] : n111l;
	assign		wire_niill_dataout = (clken === 1'b1) ? wire_niOli_q_a[1] : n111i;
	assign		wire_niilO_dataout = (clken === 1'b1) ? wire_niOli_q_a[2] : nlOOOO;
	assign		wire_niiOi_dataout = (clken === 1'b1) ? wire_niOli_q_a[3] : nlOOOl;
	assign		wire_niiOl_dataout = (clken === 1'b1) ? wire_niOli_q_a[4] : nlOOOi;
	assign		wire_niiOO_dataout = (clken === 1'b1) ? wire_niOli_q_a[5] : nlOOlO;
	assign		wire_nil0i_dataout = (clken === 1'b1) ? wire_niOli_q_a[9] : nlOOil;
	assign		wire_nil0l_dataout = (clken === 1'b1) ? wire_niOli_q_a[10] : nlOOii;
	assign		wire_nil0O_dataout = (clken === 1'b1) ? wire_niOli_q_a[11] : nlOO0O;
	assign		wire_nil1i_dataout = (clken === 1'b1) ? wire_niOli_q_a[6] : nlOOll;
	assign		wire_nil1l_dataout = (clken === 1'b1) ? wire_niOli_q_a[7] : nlOOli;
	assign		wire_nil1O_dataout = (clken === 1'b1) ? wire_niOli_q_a[8] : nlOOiO;
	assign		wire_nilii_dataout = (clken === 1'b1) ? wire_niOli_q_a[12] : nlOO0l;
	assign		wire_nilil_dataout = (clken === 1'b1) ? wire_niOiO_q_a[0] : nlOO0i;
	assign		wire_niliO_dataout = (clken === 1'b1) ? wire_niOiO_q_a[1] : nlOO1O;
	assign		wire_nilli_dataout = (clken === 1'b1) ? wire_niOiO_q_a[2] : nlOO1l;
	assign		wire_nilll_dataout = (clken === 1'b1) ? wire_niOiO_q_a[3] : nlOO1i;
	assign		wire_nillO_dataout = (clken === 1'b1) ? wire_niOiO_q_a[4] : nlOlOO;
	assign		wire_nilOi_dataout = (clken === 1'b1) ? wire_niOiO_q_a[5] : nlOlOl;
	assign		wire_nilOl_dataout = (clken === 1'b1) ? wire_niOiO_q_a[6] : nlOlOi;
	assign		wire_nilOO_dataout = (clken === 1'b1) ? wire_niOiO_q_a[7] : nlOllO;
	assign		wire_niO0i_dataout = (clken === 1'b1) ? wire_niOiO_q_a[11] : nlOlil;
	assign		wire_niO0l_dataout = (clken === 1'b1) ? wire_niOiO_q_a[12] : nlOlii;
	assign		wire_niO1i_dataout = (clken === 1'b1) ? wire_niOiO_q_a[8] : nlOlll;
	assign		wire_niO1l_dataout = (clken === 1'b1) ? wire_niOiO_q_a[9] : nlOlli;
	assign		wire_niO1O_dataout = (clken === 1'b1) ? wire_niOiO_q_a[10] : nlOliO;
	assign		wire_nl000i_dataout = (clken === 1'b1) ? nl1O1i : nl1O0i;
	assign		wire_nl000l_dataout = (clken === 1'b1) ? nl1O1l : nl1O0l;
	assign		wire_nl000O_dataout = (clken === 1'b1) ? nl1O1O : nl1O0O;
	assign		wire_nl001i_dataout = (clken === 1'b1) ? nllill : nl1O1i;
	assign		wire_nl001l_dataout = (clken === 1'b1) ? nl1lOl : nl1O1l;
	assign		wire_nl001O_dataout = (clken === 1'b1) ? nl1lOO : nl1O1O;
	and(wire_nl00i_dataout, wire_nli1O_dataout, ~((~ reset_n)));
	assign		wire_nl00ii_dataout = (clken === 1'b1) ? nl1O0i : nl01ii;
	assign		wire_nl00il_dataout = (clken === 1'b1) ? nl1O0l : nl01il;
	assign		wire_nl00iO_dataout = (clken === 1'b1) ? nl1O0O : nl01iO;
	and(wire_nl00l_dataout, wire_nli0i_dataout, ~((~ reset_n)));
	assign		wire_nl00li_dataout = (clken === 1'b1) ? nl01ii : nl01li;
	and(wire_nl00O_dataout, wire_nli0l_dataout, ~((~ reset_n)));
	and(wire_nl010i_dataout, wire_nl00il_dataout, ~((~ reset_n)));
	and(wire_nl010l_dataout, wire_nl00iO_dataout, ~((~ reset_n)));
	and(wire_nl010O_dataout, wire_nl00li_dataout, ~((~ reset_n)));
	and(wire_nl011i_dataout, wire_nl000l_dataout, ~((~ reset_n)));
	and(wire_nl011l_dataout, wire_nl000O_dataout, ~((~ reset_n)));
	and(wire_nl011O_dataout, wire_nl00ii_dataout, ~((~ reset_n)));
	and(wire_nl01i_dataout, wire_nl0OO_dataout, ~((~ reset_n)));
	and(wire_nl01l_dataout, wire_nli1i_dataout, ~((~ reset_n)));
	assign		wire_nl01ll_dataout = (clken === 1'b1) ? nl01il : nl1lll;
	assign		wire_nl01lO_dataout = (clken === 1'b1) ? nl01iO : nl1llO;
	and(wire_nl01O_dataout, wire_nli1l_dataout, ~((~ reset_n)));
	assign		wire_nl01Oi_dataout = (clken === 1'b1) ? nl01li : nl1lOi;
	assign		wire_nl01Ol_dataout = (clken === 1'b1) ? nlliOi : nl1lOl;
	assign		wire_nl01OO_dataout = (clken === 1'b1) ? nllilO : nl1lOO;
	and(wire_nl0ii_dataout, wire_nli0O_dataout, ~((~ reset_n)));
	assign		wire_nl0il_dataout = (clken === 1'b1) ? wire_nliii_o : nll0O;
	assign		wire_nl0iO_dataout = (clken === 1'b1) ? wire_nliil_o : nl1il;
	assign		wire_nl0li_dataout = (clken === 1'b1) ? wire_nliiO_o : nl1ii;
	assign		wire_nl0ll_dataout = (clken === 1'b1) ? wire_nlili_o : nl10O;
	assign		wire_nl0lO_dataout = (clken === 1'b1) ? wire_nlill_o : nl10l;
	and(wire_nl0lOi_dataout, wire_nli1OO_dataout, ~((~ reset_n)));
	and(wire_nl0lOl_dataout, wire_nli01i_dataout, ~((~ reset_n)));
	and(wire_nl0lOO_dataout, wire_nli01l_dataout, ~((~ reset_n)));
	and(wire_nl0O0i_dataout, wire_nli00O_dataout, ~((~ reset_n)));
	and(wire_nl0O0l_dataout, wire_nli0ii_dataout, ~((~ reset_n)));
	and(wire_nl0O0O_dataout, wire_nli0il_dataout, ~((~ reset_n)));
	and(wire_nl0O1i_dataout, wire_nli01O_dataout, ~((~ reset_n)));
	and(wire_nl0O1l_dataout, wire_nli00i_dataout, ~((~ reset_n)));
	and(wire_nl0O1O_dataout, wire_nli00l_dataout, ~((~ reset_n)));
	assign		wire_nl0Oi_dataout = (clken === 1'b1) ? wire_nlilO_o : nl10i;
	and(wire_nl0Oii_dataout, wire_nli0iO_dataout, ~((~ reset_n)));
	and(wire_nl0Oil_dataout, wire_nli0li_dataout, ~((~ reset_n)));
	and(wire_nl0OiO_dataout, wire_nli0ll_dataout, ~((~ reset_n)));
	assign		wire_nl0Ol_dataout = (clken === 1'b1) ? wire_nliOi_o : nl11O;
	and(wire_nl0Oli_dataout, wire_nli0lO_dataout, ~((~ reset_n)));
	and(wire_nl0Oll_dataout, wire_nli0Oi_dataout, ~((~ reset_n)));
	and(wire_nl0OlO_dataout, wire_nli0Ol_dataout, ~((~ reset_n)));
	assign		wire_nl0OO_dataout = (clken === 1'b1) ? wire_nliOl_o : nl11l;
	and(wire_nl0OOi_dataout, wire_nli0OO_dataout, ~((~ reset_n)));
	and(wire_nl0OOl_dataout, wire_nlii1i_dataout, ~((~ reset_n)));
	and(wire_nl0OOO_dataout, wire_nlii1l_dataout, ~((~ reset_n)));
	and(wire_nl1iO_dataout, wire_nl0il_dataout, ~((~ reset_n)));
	and(wire_nl1li_dataout, wire_nl0iO_dataout, ~((~ reset_n)));
	and(wire_nl1ll_dataout, wire_nl0li_dataout, ~((~ reset_n)));
	and(wire_nl1lO_dataout, wire_nl0ll_dataout, ~((~ reset_n)));
	and(wire_nl1Oi_dataout, wire_nl0lO_dataout, ~((~ reset_n)));
	and(wire_nl1Oii_dataout, wire_nl01ll_dataout, ~((~ reset_n)));
	and(wire_nl1Oil_dataout, wire_nl01lO_dataout, ~((~ reset_n)));
	and(wire_nl1OiO_dataout, wire_nl01Oi_dataout, ~((~ reset_n)));
	and(wire_nl1Ol_dataout, wire_nl0Oi_dataout, ~((~ reset_n)));
	and(wire_nl1Oli_dataout, wire_nl01Ol_dataout, ~((~ reset_n)));
	and(wire_nl1Oll_dataout, wire_nl01OO_dataout, ~((~ reset_n)));
	and(wire_nl1OlO_dataout, wire_nl001i_dataout, ~((~ reset_n)));
	and(wire_nl1OO_dataout, wire_nl0Ol_dataout, ~((~ reset_n)));
	and(wire_nl1OOi_dataout, wire_nl001l_dataout, ~((~ reset_n)));
	and(wire_nl1OOl_dataout, wire_nl001O_dataout, ~((~ reset_n)));
	and(wire_nl1OOO_dataout, wire_nl000i_dataout, ~((~ reset_n)));
	assign		wire_nli00i_dataout = (clken === 1'b1) ? phi_inc_i[4] : nl0liO;
	assign		wire_nli00l_dataout = (clken === 1'b1) ? phi_inc_i[5] : nl0lil;
	assign		wire_nli00O_dataout = (clken === 1'b1) ? phi_inc_i[6] : nl0lii;
	assign		wire_nli01i_dataout = (clken === 1'b1) ? phi_inc_i[1] : nl0llO;
	assign		wire_nli01l_dataout = (clken === 1'b1) ? phi_inc_i[2] : nl0lll;
	assign		wire_nli01O_dataout = (clken === 1'b1) ? phi_inc_i[3] : nl0lli;
	assign		wire_nli0i_dataout = (clken === 1'b1) ? wire_nll1O_o : niOOi;
	assign		wire_nli0ii_dataout = (clken === 1'b1) ? phi_inc_i[7] : nl0l0O;
	assign		wire_nli0il_dataout = (clken === 1'b1) ? phi_inc_i[8] : nl0l0l;
	assign		wire_nli0iO_dataout = (clken === 1'b1) ? phi_inc_i[9] : nl0l0i;
	assign		wire_nli0l_dataout = (clken === 1'b1) ? wire_nll0i_o : niOlO;
	assign		wire_nli0li_dataout = (clken === 1'b1) ? phi_inc_i[10] : nl0l1O;
	assign		wire_nli0ll_dataout = (clken === 1'b1) ? phi_inc_i[11] : nl0l1l;
	assign		wire_nli0lO_dataout = (clken === 1'b1) ? phi_inc_i[12] : nl0l1i;
	assign		wire_nli0O_dataout = (clken === 1'b1) ? wire_nll0l_o : niOll;
	assign		wire_nli0Oi_dataout = (clken === 1'b1) ? phi_inc_i[13] : nl0iOO;
	assign		wire_nli0Ol_dataout = (clken === 1'b1) ? phi_inc_i[14] : nl0iOl;
	assign		wire_nli0OO_dataout = (clken === 1'b1) ? phi_inc_i[15] : nl0iOi;
	and(wire_nli10i_dataout, wire_nlii0O_dataout, ~((~ reset_n)));
	and(wire_nli10l_dataout, wire_nliiii_dataout, ~((~ reset_n)));
	and(wire_nli10O_dataout, wire_nliiil_dataout, ~((~ reset_n)));
	and(wire_nli11i_dataout, wire_nlii1O_dataout, ~((~ reset_n)));
	and(wire_nli11l_dataout, wire_nlii0i_dataout, ~((~ reset_n)));
	and(wire_nli11O_dataout, wire_nlii0l_dataout, ~((~ reset_n)));
	assign		wire_nli1i_dataout = (clken === 1'b1) ? wire_nliOO_o : nl11i;
	and(wire_nli1ii_dataout, wire_nliiiO_dataout, ~((~ reset_n)));
	and(wire_nli1il_dataout, wire_nliili_dataout, ~((~ reset_n)));
	and(wire_nli1iO_dataout, wire_nliill_dataout, ~((~ reset_n)));
	assign		wire_nli1l_dataout = (clken === 1'b1) ? wire_nll1i_o : niOOO;
	and(wire_nli1li_dataout, wire_nliilO_dataout, ~((~ reset_n)));
	and(wire_nli1ll_dataout, wire_nliiOi_dataout, ~((~ reset_n)));
	and(wire_nli1lO_dataout, wire_nliiOl_dataout, ~((~ reset_n)));
	assign		wire_nli1O_dataout = (clken === 1'b1) ? wire_nll1l_o : niOOl;
	and(wire_nli1Oi_dataout, wire_nliiOO_dataout, ~((~ reset_n)));
	and(wire_nli1Ol_dataout, wire_nlil1i_dataout, ~((~ reset_n)));
	assign		wire_nli1OO_dataout = (clken === 1'b1) ? phi_inc_i[0] : nlil1l;
	assign		wire_nlii0i_dataout = (clken === 1'b1) ? phi_inc_i[19] : nl0iiO;
	assign		wire_nlii0l_dataout = (clken === 1'b1) ? phi_inc_i[20] : nl0iil;
	assign		wire_nlii0O_dataout = (clken === 1'b1) ? phi_inc_i[21] : nl0iii;
	assign		wire_nlii1i_dataout = (clken === 1'b1) ? phi_inc_i[16] : nl0ilO;
	assign		wire_nlii1l_dataout = (clken === 1'b1) ? phi_inc_i[17] : nl0ill;
	assign		wire_nlii1O_dataout = (clken === 1'b1) ? phi_inc_i[18] : nl0ili;
	assign		wire_nliiii_dataout = (clken === 1'b1) ? phi_inc_i[22] : nl0i0O;
	assign		wire_nliiil_dataout = (clken === 1'b1) ? phi_inc_i[23] : nl0i0l;
	assign		wire_nliiiO_dataout = (clken === 1'b1) ? phi_inc_i[24] : nl0i0i;
	assign		wire_nliili_dataout = (clken === 1'b1) ? phi_inc_i[25] : nl0i1O;
	assign		wire_nliill_dataout = (clken === 1'b1) ? phi_inc_i[26] : nl0i1l;
	assign		wire_nliilO_dataout = (clken === 1'b1) ? phi_inc_i[27] : nl0i1i;
	assign		wire_nliiOi_dataout = (clken === 1'b1) ? phi_inc_i[28] : nl00OO;
	assign		wire_nliiOl_dataout = (clken === 1'b1) ? phi_inc_i[29] : nl00Ol;
	assign		wire_nliiOO_dataout = (clken === 1'b1) ? phi_inc_i[30] : nl00Oi;
	assign		wire_nlil1i_dataout = (clken === 1'b1) ? phi_inc_i[31] : nl00lO;
	and(wire_nliOil_dataout, wire_nll1Ol_dataout, ~((~ reset_n)));
	and(wire_nliOiO_dataout, wire_nll1OO_dataout, ~((~ reset_n)));
	and(wire_nliOli_dataout, wire_nll01i_dataout, ~((~ reset_n)));
	and(wire_nliOll_dataout, wire_nll01l_dataout, ~((~ reset_n)));
	and(wire_nliOlO_dataout, wire_nll01O_dataout, ~((~ reset_n)));
	or(wire_nliOOi_dataout, wire_nll00i_dataout, (~ reset_n));
	and(wire_nliOOl_dataout, wire_nll00l_dataout, ~((~ reset_n)));
	or(wire_nliOOO_dataout, wire_nll00O_dataout, (~ reset_n));
	assign		wire_nll00i_dataout = (clken === 1'b1) ? ((nlil0i ^ nlil1O) ^ (nlilOO ^ nlil0O)) : nliO1O;
	assign		wire_nll00l_dataout = (clken === 1'b1) ? nliO1O : nliO1l;
	assign		wire_nll00O_dataout = (clken === 1'b1) ? nliO1l : nliO1i;
	assign		wire_nll01i_dataout = (clken === 1'b1) ? wire_nlli0l_o[2] : nliO0O;
	assign		wire_nll01l_dataout = (clken === 1'b1) ? wire_nlli0l_o[3] : nliO0l;
	assign		wire_nll01O_dataout = (clken === 1'b1) ? wire_nlli0l_o[4] : nliO0i;
	assign		wire_nll0ii_dataout = (clken === 1'b1) ? nliO1i : nlilOO;
	assign		wire_nll0il_dataout = (clken === 1'b1) ? nlilOO : nlilOl;
	assign		wire_nll0iO_dataout = (clken === 1'b1) ? nlilOl : nlilOi;
	assign		wire_nll0li_dataout = (clken === 1'b1) ? nlilOi : nlillO;
	assign		wire_nll0ll_dataout = (clken === 1'b1) ? nlillO : nlilll;
	assign		wire_nll0lO_dataout = (clken === 1'b1) ? nlilll : nlilli;
	assign		wire_nll0Oi_dataout = (clken === 1'b1) ? nlilli : nliliO;
	assign		wire_nll0Ol_dataout = (clken === 1'b1) ? nliliO : nlilil;
	assign		wire_nll0OO_dataout = (clken === 1'b1) ? nlilil : nlilii;
	or(wire_nll10i_dataout, wire_nll0li_dataout, (~ reset_n));
	or(wire_nll10l_dataout, wire_nll0ll_dataout, (~ reset_n));
	and(wire_nll10O_dataout, wire_nll0lO_dataout, ~((~ reset_n)));
	or(wire_nll11i_dataout, wire_nll0ii_dataout, (~ reset_n));
	or(wire_nll11l_dataout, wire_nll0il_dataout, (~ reset_n));
	and(wire_nll11O_dataout, wire_nll0iO_dataout, ~((~ reset_n)));
	or(wire_nll1ii_dataout, wire_nll0Oi_dataout, (~ reset_n));
	and(wire_nll1il_dataout, wire_nll0Ol_dataout, ~((~ reset_n)));
	or(wire_nll1iO_dataout, wire_nll0OO_dataout, (~ reset_n));
	or(wire_nll1li_dataout, wire_nlli1i_dataout, (~ reset_n));
	and(wire_nll1ll_dataout, wire_nlli1l_dataout, ~((~ reset_n)));
	and(wire_nll1lO_dataout, wire_nlli1O_dataout, ~((~ reset_n)));
	or(wire_nll1Oi_dataout, wire_nlli0i_dataout, (~ reset_n));
	assign		wire_nll1Ol_dataout = (clken === 1'b1) ? wire_nlli0l_o[0] : nlliiO;
	assign		wire_nll1OO_dataout = (clken === 1'b1) ? wire_nlli0l_o[1] : nliOii;
	assign		wire_nlli0i_dataout = (clken === 1'b1) ? nlil0i : nlil1O;
	assign		wire_nlli1i_dataout = (clken === 1'b1) ? nlilii : nlil0O;
	assign		wire_nlli1l_dataout = (clken === 1'b1) ? nlil0O : nlil0l;
	assign		wire_nlli1O_dataout = (clken === 1'b1) ? nlil0l : nlil0i;
	and(wire_nlllli_dataout, wire_nllOiO_dataout, ~((~ reset_n)));
	and(wire_nlllll_dataout, wire_nllOli_dataout, ~((~ reset_n)));
	and(wire_nllllO_dataout, wire_nllOll_dataout, ~((~ reset_n)));
	and(wire_nlllOi_dataout, wire_nllOlO_dataout, ~((~ reset_n)));
	and(wire_nlllOl_dataout, wire_nllOOi_dataout, ~((~ reset_n)));
	and(wire_nlllOO_dataout, wire_nllOOl_dataout, ~((~ reset_n)));
	and(wire_nllO0i_dataout, wire_nlO11O_dataout, ~((~ reset_n)));
	and(wire_nllO0l_dataout, wire_nlO10i_dataout, ~((~ reset_n)));
	and(wire_nllO0O_dataout, wire_nlO10l_dataout, ~((~ reset_n)));
	and(wire_nllO1i_dataout, wire_nllOOO_dataout, ~((~ reset_n)));
	and(wire_nllO1l_dataout, wire_nlO11i_dataout, ~((~ reset_n)));
	and(wire_nllO1O_dataout, wire_nlO11l_dataout, ~((~ reset_n)));
	and(wire_nllOii_dataout, wire_nlO10O_dataout, ~((~ reset_n)));
	and(wire_nllOil_dataout, wire_nlO1ii_dataout, ~((~ reset_n)));
	assign		wire_nllOiO_dataout = (clken === 1'b1) ? wire_nllili_result[5] : nllliO;
	assign		wire_nllOli_dataout = (clken === 1'b1) ? wire_nllili_result[6] : nlllil;
	assign		wire_nllOll_dataout = (clken === 1'b1) ? wire_nllili_result[7] : nlllii;
	assign		wire_nllOlO_dataout = (clken === 1'b1) ? wire_nllili_result[8] : nlll0O;
	assign		wire_nllOOi_dataout = (clken === 1'b1) ? wire_nllili_result[9] : nlll0l;
	assign		wire_nllOOl_dataout = (clken === 1'b1) ? wire_nllili_result[10] : nlll0i;
	assign		wire_nllOOO_dataout = (clken === 1'b1) ? wire_nllili_result[11] : nlll1O;
	and(wire_nlO00i_dataout, wire_nlO0OO_dataout, ~((~ reset_n)));
	and(wire_nlO00l_dataout, wire_nlOi1i_dataout, ~((~ reset_n)));
	and(wire_nlO00O_dataout, wire_nlOi1l_dataout, ~((~ reset_n)));
	and(wire_nlO01O_dataout, wire_nlO0Ol_dataout, ~((~ reset_n)));
	and(wire_nlO0ii_dataout, wire_nlOi1O_dataout, ~((~ reset_n)));
	and(wire_nlO0il_dataout, wire_nlOi0i_dataout, ~((~ reset_n)));
	and(wire_nlO0iO_dataout, wire_nlOi0l_dataout, ~((~ reset_n)));
	and(wire_nlO0l_dataout, wire_n10i_dataout, ~((~ reset_n)));
	and(wire_nlO0li_dataout, wire_nlOi0O_dataout, ~((~ reset_n)));
	and(wire_nlO0ll_dataout, wire_nlOiii_dataout, ~((~ reset_n)));
	and(wire_nlO0lO_dataout, wire_nlOiil_dataout, ~((~ reset_n)));
	and(wire_nlO0O_dataout, wire_n10l_dataout, ~((~ reset_n)));
	and(wire_nlO0Oi_dataout, wire_nlOiiO_dataout, ~((~ reset_n)));
	assign		wire_nlO0Ol_dataout = (clken === 1'b1) ? wire_nlOili_dataout : nlOl0O;
	assign		wire_nlO0OO_dataout = (clken === 1'b1) ? wire_nlOill_dataout : nlO01l;
	assign		wire_nlO10i_dataout = (clken === 1'b1) ? wire_nllili_result[15] : nlliOl;
	assign		wire_nlO10l_dataout = (clken === 1'b1) ? wire_nllili_result[16] : nlliOi;
	assign		wire_nlO10O_dataout = (clken === 1'b1) ? wire_nllili_result[17] : nllilO;
	assign		wire_nlO11i_dataout = (clken === 1'b1) ? wire_nllili_result[12] : nlll1l;
	assign		wire_nlO11l_dataout = (clken === 1'b1) ? wire_nllili_result[13] : nlll1i;
	assign		wire_nlO11O_dataout = (clken === 1'b1) ? wire_nllili_result[14] : nlliOO;
	assign		wire_nlO1ii_dataout = (clken === 1'b1) ? wire_nllili_result[18] : nllill;
	assign		wire_nlOi0i_dataout = (clken === 1'b1) ? wire_nlOiOO_dataout : nlO1Oi;
	assign		wire_nlOi0l_dataout = (clken === 1'b1) ? wire_nlOl1i_dataout : nlO1lO;
	assign		wire_nlOi0O_dataout = (clken === 1'b1) ? wire_nlOl1l_dataout : nlO1ll;
	assign		wire_nlOi1i_dataout = (clken === 1'b1) ? wire_nlOilO_dataout : nlO01i;
	assign		wire_nlOi1l_dataout = (clken === 1'b1) ? wire_nlOiOi_dataout : nlO1OO;
	assign		wire_nlOi1O_dataout = (clken === 1'b1) ? wire_nlOiOl_dataout : nlO1Ol;
	and(wire_nlOii_dataout, wire_n10O_dataout, ~((~ reset_n)));
	assign		wire_nlOiii_dataout = (clken === 1'b1) ? wire_nlOl1O_dataout : nlO1li;
	assign		wire_nlOiil_dataout = (clken === 1'b1) ? wire_nlOl0i_dataout : nlO1iO;
	assign		wire_nlOiiO_dataout = (clken === 1'b1) ? wire_nlOl0l_dataout : nlO1il;
	and(wire_nlOil_dataout, wire_n1ii_dataout, ~((~ reset_n)));
	assign		wire_nlOili_dataout = ((~ nlliOi) === 1'b1) ? nllliO : (~ nllliO);
	assign		wire_nlOill_dataout = ((~ nlliOi) === 1'b1) ? nlllil : (~ nlllil);
	assign		wire_nlOilO_dataout = ((~ nlliOi) === 1'b1) ? nlllii : (~ nlllii);
	and(wire_nlOiO_dataout, wire_n1il_dataout, ~((~ reset_n)));
	assign		wire_nlOiOi_dataout = ((~ nlliOi) === 1'b1) ? nlll0O : (~ nlll0O);
	assign		wire_nlOiOl_dataout = ((~ nlliOi) === 1'b1) ? nlll0l : (~ nlll0l);
	assign		wire_nlOiOO_dataout = ((~ nlliOi) === 1'b1) ? nlll0i : (~ nlll0i);
	assign		wire_nlOl0i_dataout = ((~ nlliOi) === 1'b1) ? nlliOO : (~ nlliOO);
	assign		wire_nlOl0l_dataout = ((~ nlliOi) === 1'b1) ? nlliOl : (~ nlliOl);
	assign		wire_nlOl1i_dataout = ((~ nlliOi) === 1'b1) ? nlll1O : (~ nlll1O);
	assign		wire_nlOl1l_dataout = ((~ nlliOi) === 1'b1) ? nlll1l : (~ nlll1l);
	assign		wire_nlOl1O_dataout = ((~ nlliOi) === 1'b1) ? nlll1i : (~ nlll1i);
	and(wire_nlOli_dataout, wire_n1iO_dataout, ~((~ reset_n)));
	and(wire_nlOll_dataout, wire_n1li_dataout, ~((~ reset_n)));
	and(wire_nlOlO_dataout, wire_n1ll_dataout, ~((~ reset_n)));
	and(wire_nlOOi_dataout, wire_n1lO_dataout, ~((~ reset_n)));
	and(wire_nlOOl_dataout, wire_n1Oi_dataout, ~((~ reset_n)));
	and(wire_nlOOO_dataout, wire_n1Ol_dataout, ~((~ reset_n)));
	oper_add   niO0O
	( 
	.a({1'b0, (~ nlOO0l), (~ nlOO0O), (~ nlOOii), (~ nlOOil), (~ nlOOiO), (~ nlOOli), (~ nlOOll), (~ nlOOlO), (~ nlOOOi), (~ nlOOOl), (~ nlOOOO), (~ n111i), (~ n111l)}),
	.b({{13{1'b0}}, 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_niO0O_o));
	defparam
		niO0O.sgate_representation = 0,
		niO0O.width_a = 14,
		niO0O.width_b = 14,
		niO0O.width_o = 14;
	oper_add   niOii
	( 
	.a({1'b0, (~ nlOlii), (~ nlOlil), (~ nlOliO), (~ nlOlli), (~ nlOlll), (~ nlOllO), (~ nlOlOi), (~ nlOlOl), (~ nlOlOO), (~ nlOO1i), (~ nlOO1l), (~ nlOO1O), (~ nlOO0i)}),
	.b({{13{1'b0}}, 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_niOii_o));
	defparam
		niOii.sgate_representation = 0,
		niOii.width_a = 14,
		niOii.width_b = 14,
		niOii.width_o = 14;
	oper_add   nlli0l
	( 
	.a({nlil1O, nlil0i, nlil0l, nlil0O, nlilii}),
	.b({{4{1'b0}}, nlil1O}),
	.cin(1'b0),
	.cout(),
	.o(wire_nlli0l_o));
	defparam
		nlli0l.sgate_representation = 0,
		nlli0l.width_a = 5,
		nlli0l.width_b = 5,
		nlli0l.width_o = 5;
	oper_mux   nliii
	( 
	.data({n101i, {2{n10OO}}, n101i, n1iOi, {2{niOil}}, n1iOi}),
	.o(wire_nliii_o),
	.sel({nl1lOi, nl1llO, nl1lll}));
	defparam
		nliii.width_data = 8,
		nliii.width_sel = 3;
	oper_mux   nliil
	( 
	.data({n11OO, {2{n10Ol}}, n11OO, n1ilO, {2{n1lli}}, n1ilO}),
	.o(wire_nliil_o),
	.sel({nl1lOi, nl1llO, nl1lll}));
	defparam
		nliil.width_data = 8,
		nliil.width_sel = 3;
	oper_mux   nliiO
	( 
	.data({n11Ol, {2{n10Oi}}, n11Ol, n1ill, {2{n1liO}}, n1ill}),
	.o(wire_nliiO_o),
	.sel({nl1lOi, nl1llO, nl1lll}));
	defparam
		nliiO.width_data = 8,
		nliiO.width_sel = 3;
	oper_mux   nlili
	( 
	.data({n11Oi, {2{n10lO}}, n11Oi, n1ili, {2{n1lil}}, ((nl10OO44 ^ nl10OO43) & n1ili)}),
	.o(wire_nlili_o),
	.sel({((nl1i1i42 ^ nl1i1i41) & nl1lOi), nl1llO, nl1lll}));
	defparam
		nlili.width_data = 8,
		nlili.width_sel = 3;
	oper_mux   nlill
	( 
	.data({n11lO, {2{n10ll}}, n11lO, n1iiO, n1lii, ((nl1i1l40 ^ nl1i1l39) & n1lii), n1iiO}),
	.o(wire_nlill_o),
	.sel({nl1lOi, ((nl1i1O38 ^ nl1i1O37) & nl1llO), nl1lll}));
	defparam
		nlill.width_data = 8,
		nlill.width_sel = 3;
	oper_mux   nlilO
	( 
	.data({n11ll, n10li, ((nl1i0i36 ^ nl1i0i35) & n10li), n11ll, n1iil, {2{n1l0O}}, n1iil}),
	.o(wire_nlilO_o),
	.sel({nl1lOi, nl1llO, nl1lll}));
	defparam
		nlilO.width_data = 8,
		nlilO.width_sel = 3;
	oper_mux   nliOi
	( 
	.data({n11li, ((nl1i0l34 ^ nl1i0l33) & n10iO), n10iO, ((nl1i0O32 ^ nl1i0O31) & n11li), n1iii, {2{n1l0l}}, n1iii}),
	.o(wire_nliOi_o),
	.sel({nl1lOi, nl1llO, nl1lll}));
	defparam
		nliOi.width_data = 8,
		nliOi.width_sel = 3;
	oper_mux   nliOl
	( 
	.data({n11iO, {2{n10il}}, n11iO, n1i0O, {2{n1l0i}}, n1i0O}),
	.o(wire_nliOl_o),
	.sel({nl1lOi, ((nl1iii30 ^ nl1iii29) & nl1llO), nl1lll}));
	defparam
		nliOl.width_data = 8,
		nliOl.width_sel = 3;
	oper_mux   nliOO
	( 
	.data({n11il, {2{n10ii}}, n11il, n1i0l, {2{n1l1O}}, n1i0l}),
	.o(wire_nliOO_o),
	.sel({nl1lOi, nl1llO, nl1lll}));
	defparam
		nliOO.width_data = 8,
		nliOO.width_sel = 3;
	oper_mux   nll0i
	( 
	.data({n110i, {2{n101O}}, n110i, n1i1i, {2{n1iOl}}, n1i1i}),
	.o(wire_nll0i_o),
	.sel({((nl1l1l10 ^ nl1l1l9) & nl1lOi), nl1llO, nl1lll}));
	defparam
		nll0i.width_data = 8,
		nll0i.width_sel = 3;
	oper_mux   nll0l
	( 
	.data({n111O, {2{n101l}}, n111O, {4{1'b0}}}),
	.o(wire_nll0l_o),
	.sel({((nl1l1O8 ^ nl1l1O7) & nl1lOi), nl1llO, nl1lll}));
	defparam
		nll0l.width_data = 8,
		nll0l.width_sel = 3;
	oper_mux   nll1i
	( 
	.data({((nl1iil28 ^ nl1iil27) & n11ii), ((nl1iiO26 ^ nl1iiO25) & n100O), n100O, ((nl1ili24 ^ nl1ili23) & n11ii), n1i0i, {2{n1l1l}}, n1i0i}),
	.o(wire_nll1i_o),
	.sel({nl1lOi, ((nl1ill22 ^ nl1ill21) & nl1llO), nl1lll}));
	defparam
		nll1i.width_data = 8,
		nll1i.width_sel = 3;
	oper_mux   nll1l
	( 
	.data({((nl1ilO20 ^ nl1ilO19) & n110O), {2{n100l}}, n110O, n1i1O, {2{n1l1i}}, n1i1O}),
	.o(wire_nll1l_o),
	.sel({nl1lOi, nl1llO, nl1lll}));
	defparam
		nll1l.width_data = 8,
		nll1l.width_sel = 3;
	oper_mux   nll1O
	( 
	.data({((nl1iOi18 ^ nl1iOi17) & n110l), {2{n100i}}, n110l, n1i1l, ((nl1iOl16 ^ nl1iOl15) & n1iOO), n1iOO, ((nl1iOO14 ^ nl1iOO13) & n1i1l)}),
	.o(wire_nll1O_o),
	.sel({nl1lOi, ((nl1l1i12 ^ nl1l1i11) & nl1llO), nl1lll}));
	defparam
		nll1O.width_data = 8,
		nll1O.width_sel = 3;
	assign
		fsin_o = {nllii, nllil, nlliO, nllli, nllll, nlllO, nllOi, nllOl, nllOO, nlO1i, nlO1l, nlO1O, nlO0i, n01O},
		nl1lii = 1'b1,
		out_valid = n0li;
endmodule //dds
//synopsys translate_on
//VALID FILE
