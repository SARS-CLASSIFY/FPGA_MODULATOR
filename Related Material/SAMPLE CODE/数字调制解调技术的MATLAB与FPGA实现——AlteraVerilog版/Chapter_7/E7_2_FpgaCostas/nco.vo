//IP Functional Simulation Model
//VERSION_BEGIN 12.1 cbx_mgl 2012:11:07:18:06:30:SJ cbx_simgen 2012:11:07:18:03:51:SJ  VERSION_END
// synthesis VERILOG_INPUT_VERSION VERILOG_2001
// altera message_off 10463



// Copyright (C) 1991-2012 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// You may only use these simulation model output files for simulation
// purposes and expressly not for synthesis or any other purposes (in which
// event Altera disclaims all warranties of any kind).


//synopsys translate_off

//synthesis_resources = altsyncram 2 lpm_add_sub 3 lpm_counter 1 lut 222 mux21 367 oper_add 3 oper_mux 20 
`timescale 1 ps / 1 ps
module  nco
	( 
	clk,
	clken,
	fcos_o,
	freq_mod_i,
	fsin_o,
	out_valid,
	phi_inc_i,
	reset_n) /* synthesis synthesis_clearbox=1 */;
	input   clk;
	input   clken;
	output   [9:0]  fcos_o;
	input   [29:0]  freq_mod_i;
	output   [9:0]  fsin_o;
	output   out_valid;
	input   [29:0]  phi_inc_i;
	input   reset_n;

	wire  [8:0]   wire_n0Oil_q_a;
	wire  [8:0]   wire_n0OiO_q_a;
	reg	nl010i3;
	reg	nl010i4;
	reg	nl011i10;
	reg	nl011i9;
	reg	nl011l7;
	reg	nl011l8;
	reg	nl011O5;
	reg	nl011O6;
	reg	nl01iO1;
	reg	nl01iO2;
	reg	nl1lOO41;
	reg	nl1lOO42;
	reg	nl1O0i33;
	reg	nl1O0i34;
	reg	nl1O0l31;
	reg	nl1O0l32;
	reg	nl1O0O29;
	reg	nl1O0O30;
	reg	nl1O1i39;
	reg	nl1O1i40;
	reg	nl1O1l37;
	reg	nl1O1l38;
	reg	nl1O1O35;
	reg	nl1O1O36;
	reg	nl1Oii27;
	reg	nl1Oii28;
	reg	nl1Oil25;
	reg	nl1Oil26;
	reg	nl1OiO23;
	reg	nl1OiO24;
	reg	nl1Oli21;
	reg	nl1Oli22;
	reg	nl1Oll19;
	reg	nl1Oll20;
	reg	nl1OlO17;
	reg	nl1OlO18;
	reg	nl1OOi15;
	reg	nl1OOi16;
	reg	nl1OOl13;
	reg	nl1OOl14;
	reg	nl1OOO11;
	reg	nl1OOO12;
	reg	n0Oii;
	reg	n0Oli;
	reg	n0Oll;
	reg	n0OlO;
	reg	n0OOi;
	reg	n0OOl;
	reg	n0OOO;
	reg	n100i;
	reg	n100l;
	reg	n100O;
	reg	n101i;
	reg	n101l;
	reg	n101O;
	reg	n10ii;
	reg	n10il;
	reg	n10iO;
	reg	n10li;
	reg	n10ll;
	reg	n10lO;
	reg	n110i;
	reg	n110l;
	reg	n110O;
	reg	n111i;
	reg	n111l;
	reg	n111O;
	reg	n11ii;
	reg	n11il;
	reg	n11iO;
	reg	n11li;
	reg	n11ll;
	reg	n11lO;
	reg	n11Oi;
	reg	n11Ol;
	reg	n11OO;
	reg	ni10i;
	reg	ni10l;
	reg	ni10O;
	reg	ni11i;
	reg	ni11l;
	reg	ni11O;
	reg	ni1ii;
	reg	ni1il;
	reg	ni1iO;
	reg	ni1li;
	reg	ni1ll;
	reg	ni1lO;
	reg	ni1Oi;
	reg	niOOl;
	reg	niOOO;
	reg	nl000i;
	reg	nl000l;
	reg	nl001i;
	reg	nl001l;
	reg	nl001O;
	reg	nl01li;
	reg	nl01ll;
	reg	nl01lO;
	reg	nl01Oi;
	reg	nl01Ol;
	reg	nl01OO;
	reg	nl0i0O;
	reg	nl0iii;
	reg	nl0iil;
	reg	nl0iiO;
	reg	nl0llO;
	reg	nl0lOi;
	reg	nl0lOl;
	reg	nl0lOO;
	reg	nl0O0i;
	reg	nl0O0l;
	reg	nl0O0O;
	reg	nl0O1i;
	reg	nl0O1l;
	reg	nl0O1O;
	reg	nl0Oii;
	reg	nl0Oil;
	reg	nl0OiO;
	reg	nl0Ol;
	reg	nl0Oli;
	reg	nl0Oll;
	reg	nl0OlO;
	reg	nl0OO;
	reg	nl0OOi;
	reg	nl0OOl;
	reg	nl0OOO;
	reg	nl10i;
	reg	nl10l;
	reg	nl10O;
	reg	nl11i;
	reg	nl11l;
	reg	nl11O;
	reg	nl1ii;
	reg	nl1il;
	reg	nli0i;
	reg	nli0l;
	reg	nli0O;
	reg	nli10i;
	reg	nli10l;
	reg	nli10O;
	reg	nli11i;
	reg	nli11l;
	reg	nli11O;
	reg	nli1i;
	reg	nli1ii;
	reg	nli1il;
	reg	nli1iO;
	reg	nli1l;
	reg	nli1li;
	reg	nli1O;
	reg	nliii;
	reg	nliil;
	reg	nliOll;
	reg	nliOlO;
	reg	nliOOi;
	reg	nliOOl;
	reg	nliOOO;
	reg	nll01i;
	reg	nll10i;
	reg	nll10l;
	reg	nll10O;
	reg	nll11i;
	reg	nll11l;
	reg	nll11O;
	reg	nll1ii;
	reg	nll1il;
	reg	nll1iO;
	reg	nll1li;
	reg	nll1ll;
	reg	nll1lO;
	reg	nll1Oi;
	reg	nll1Ol;
	reg	nll1OO;
	reg	nllO0l;
	reg	nllO0O;
	reg	nllO1O;
	reg	nllOii;
	reg	nllOil;
	reg	nllOiO;
	reg	nllOl;
	reg	nllOli;
	reg	nllOll;
	reg	nllOlO;
	reg	nllOOi;
	reg	nllOOl;
	reg	nlO00l;
	reg	nlO00O;
	reg	nlO0ii;
	reg	nlO0il;
	reg	nlO0iO;
	reg	nlO0li;
	reg	nlO0O;
	reg	nlOl0i;
	reg	nlOl0l;
	reg	nlOl0O;
	reg	nlOl1l;
	reg	nlOl1O;
	reg	nlOlii;
	reg	nlOlil;
	reg	nlOliO;
	reg	nlOlli;
	reg	nlOlll;
	reg	nlOllO;
	reg	nlOlOi;
	reg	nlOlOl;
	reg	nlOlOO;
	reg	nlOO0i;
	reg	nlOO0l;
	reg	nlOO0O;
	reg	nlOO1i;
	reg	nlOO1l;
	reg	nlOO1O;
	reg	nlOOii;
	reg	nlOOil;
	reg	nlOOiO;
	reg	nlOOli;
	reg	nlOOll;
	reg	nlOOlO;
	reg	nlOOOi;
	reg	nlOOOl;
	reg	nlOOOO;
	wire	wire_nlO0l_CLRN;
	wire  [29:0]   wire_nl0lli_result;
	wire  [29:0]   wire_nl0lll_result;
	wire  [14:0]   wire_nllO0i_result;
	wire  [3:0]   wire_nllOO_q;
	wire	wire_n000i_dataout;
	wire	wire_n000l_dataout;
	wire	wire_n000O_dataout;
	wire	wire_n001i_dataout;
	wire	wire_n001l_dataout;
	wire	wire_n001O_dataout;
	wire	wire_n00ii_dataout;
	wire	wire_n00il_dataout;
	wire	wire_n00iO_dataout;
	wire	wire_n00li_dataout;
	wire	wire_n00ll_dataout;
	wire	wire_n00lO_dataout;
	wire	wire_n00Oi_dataout;
	wire	wire_n00Ol_dataout;
	wire	wire_n00OO_dataout;
	wire	wire_n010i_dataout;
	wire	wire_n010l_dataout;
	wire	wire_n010O_dataout;
	wire	wire_n011i_dataout;
	wire	wire_n011l_dataout;
	wire	wire_n011O_dataout;
	wire	wire_n01ii_dataout;
	wire	wire_n01il_dataout;
	wire	wire_n01iO_dataout;
	wire	wire_n01li_dataout;
	wire	wire_n01ll_dataout;
	wire	wire_n01lO_dataout;
	wire	wire_n01Oi_dataout;
	wire	wire_n01Ol_dataout;
	wire	wire_n01OO_dataout;
	wire	wire_n0i0i_dataout;
	wire	wire_n0i0l_dataout;
	wire	wire_n0i0O_dataout;
	wire	wire_n0i1i_dataout;
	wire	wire_n0i1l_dataout;
	wire	wire_n0i1O_dataout;
	wire	wire_n0iii_dataout;
	wire	wire_n0iil_dataout;
	wire	wire_n0iiO_dataout;
	wire	wire_n0ili_dataout;
	wire	wire_n0ill_dataout;
	wire	wire_n0ilO_dataout;
	wire	wire_n0iOi_dataout;
	wire	wire_n0iOl_dataout;
	wire	wire_n0iOO_dataout;
	wire	wire_n0l0i_dataout;
	wire	wire_n0l0l_dataout;
	wire	wire_n0l0O_dataout;
	wire	wire_n0l1i_dataout;
	wire	wire_n0l1l_dataout;
	wire	wire_n0l1O_dataout;
	wire	wire_n0lii_dataout;
	wire	wire_n0lil_dataout;
	wire	wire_n0liO_dataout;
	wire	wire_n0lli_dataout;
	wire	wire_n0lll_dataout;
	wire	wire_n0llO_dataout;
	wire	wire_n0lOi_dataout;
	wire	wire_n0lOl_dataout;
	wire	wire_n0lOO_dataout;
	wire	wire_n0O0i_dataout;
	wire	wire_n0O1i_dataout;
	wire	wire_n0O1l_dataout;
	wire	wire_n0O1O_dataout;
	wire	wire_n10Oi_dataout;
	wire	wire_n10Ol_dataout;
	wire	wire_n10OO_dataout;
	wire	wire_n1i0i_dataout;
	wire	wire_n1i0l_dataout;
	wire	wire_n1i0O_dataout;
	wire	wire_n1i1i_dataout;
	wire	wire_n1i1l_dataout;
	wire	wire_n1i1O_dataout;
	wire	wire_n1iii_dataout;
	wire	wire_n1iil_dataout;
	wire	wire_n1iiO_dataout;
	wire	wire_n1ili_dataout;
	wire	wire_n1ill_dataout;
	wire	wire_n1ilO_dataout;
	wire	wire_n1iOi_dataout;
	wire	wire_n1iOl_dataout;
	wire	wire_n1iOO_dataout;
	wire	wire_n1l0i_dataout;
	wire	wire_n1l0l_dataout;
	wire	wire_n1l0O_dataout;
	wire	wire_n1l1i_dataout;
	wire	wire_n1l1l_dataout;
	wire	wire_n1l1O_dataout;
	wire	wire_n1lii_dataout;
	wire	wire_n1lil_dataout;
	wire	wire_n1liO_dataout;
	wire	wire_n1lli_dataout;
	wire	wire_n1lll_dataout;
	wire	wire_n1llO_dataout;
	wire	wire_n1lOi_dataout;
	wire	wire_n1lOl_dataout;
	wire	wire_n1lOO_dataout;
	wire	wire_n1O0i_dataout;
	wire	wire_n1O0l_dataout;
	wire	wire_n1O0O_dataout;
	wire	wire_n1O1i_dataout;
	wire	wire_n1O1l_dataout;
	wire	wire_n1O1O_dataout;
	wire	wire_n1Oii_dataout;
	wire	wire_n1Oil_dataout;
	wire	wire_n1OiO_dataout;
	wire	wire_n1Oli_dataout;
	wire	wire_n1Oll_dataout;
	wire	wire_n1OlO_dataout;
	wire	wire_n1OOi_dataout;
	wire	wire_n1OOl_dataout;
	wire	wire_n1OOO_dataout;
	wire	wire_ni00i_dataout;
	wire	wire_ni00l_dataout;
	wire	wire_ni00O_dataout;
	wire	wire_ni01i_dataout;
	wire	wire_ni01l_dataout;
	wire	wire_ni01O_dataout;
	wire	wire_ni0ii_dataout;
	wire	wire_ni0il_dataout;
	wire	wire_ni0iO_dataout;
	wire	wire_ni0li_dataout;
	wire	wire_ni0ll_dataout;
	wire	wire_ni0lO_dataout;
	wire	wire_ni0Oi_dataout;
	wire	wire_ni0Ol_dataout;
	wire	wire_ni0OO_dataout;
	wire	wire_ni1Ol_dataout;
	wire	wire_ni1OO_dataout;
	wire	wire_nii0i_dataout;
	wire	wire_nii0l_dataout;
	wire	wire_nii0O_dataout;
	wire	wire_nii1i_dataout;
	wire	wire_nii1l_dataout;
	wire	wire_nii1O_dataout;
	wire	wire_niiii_dataout;
	wire	wire_niiil_dataout;
	wire	wire_niiiO_dataout;
	wire	wire_niili_dataout;
	wire	wire_niill_dataout;
	wire	wire_niilO_dataout;
	wire	wire_niiOi_dataout;
	wire	wire_niiOl_dataout;
	wire	wire_niiOO_dataout;
	wire	wire_nil0i_dataout;
	wire	wire_nil0l_dataout;
	wire	wire_nil0O_dataout;
	wire	wire_nil1i_dataout;
	wire	wire_nil1l_dataout;
	wire	wire_nil1O_dataout;
	wire	wire_nilii_dataout;
	wire	wire_nilil_dataout;
	wire	wire_nl000O_dataout;
	wire	wire_nl00i_dataout;
	wire	wire_nl00ii_dataout;
	wire	wire_nl00il_dataout;
	wire	wire_nl00iO_dataout;
	wire	wire_nl00l_dataout;
	wire	wire_nl00li_dataout;
	wire	wire_nl00ll_dataout;
	wire	wire_nl00lO_dataout;
	wire	wire_nl00O_dataout;
	wire	wire_nl00Oi_dataout;
	wire	wire_nl00Ol_dataout;
	wire	wire_nl00OO_dataout;
	wire	wire_nl01i_dataout;
	wire	wire_nl01l_dataout;
	wire	wire_nl01O_dataout;
	wire	wire_nl0i0i_dataout;
	wire	wire_nl0i0l_dataout;
	wire	wire_nl0i1i_dataout;
	wire	wire_nl0i1l_dataout;
	wire	wire_nl0i1O_dataout;
	wire	wire_nl0ii_dataout;
	wire	wire_nl0il_dataout;
	wire	wire_nl0ili_dataout;
	wire	wire_nl0ill_dataout;
	wire	wire_nl0ilO_dataout;
	wire	wire_nl0iO_dataout;
	wire	wire_nl0iOi_dataout;
	wire	wire_nl0iOl_dataout;
	wire	wire_nl0iOO_dataout;
	wire	wire_nl0l0i_dataout;
	wire	wire_nl0l0l_dataout;
	wire	wire_nl0l0O_dataout;
	wire	wire_nl0l1i_dataout;
	wire	wire_nl0l1l_dataout;
	wire	wire_nl0l1O_dataout;
	wire	wire_nl0li_dataout;
	wire	wire_nl0lii_dataout;
	wire	wire_nl0lil_dataout;
	wire	wire_nl0liO_dataout;
	wire	wire_nl0ll_dataout;
	wire	wire_nl0lO_dataout;
	wire	wire_nl0Oi_dataout;
	wire	wire_nl1iO_dataout;
	wire	wire_nl1li_dataout;
	wire	wire_nl1ll_dataout;
	wire	wire_nl1lO_dataout;
	wire	wire_nl1Oi_dataout;
	wire	wire_nl1Ol_dataout;
	wire	wire_nl1OO_dataout;
	wire	wire_nli00i_dataout;
	wire	wire_nli00l_dataout;
	wire	wire_nli00O_dataout;
	wire	wire_nli01i_dataout;
	wire	wire_nli01l_dataout;
	wire	wire_nli01O_dataout;
	wire	wire_nli0ii_dataout;
	wire	wire_nli0il_dataout;
	wire	wire_nli0iO_dataout;
	wire	wire_nli0li_dataout;
	wire	wire_nli0ll_dataout;
	wire	wire_nli0lO_dataout;
	wire	wire_nli0Oi_dataout;
	wire	wire_nli0Ol_dataout;
	wire	wire_nli0OO_dataout;
	wire	wire_nli1ll_dataout;
	wire	wire_nli1lO_dataout;
	wire	wire_nli1Oi_dataout;
	wire	wire_nli1Ol_dataout;
	wire	wire_nli1OO_dataout;
	wire	wire_nlii0i_dataout;
	wire	wire_nlii0l_dataout;
	wire	wire_nlii0O_dataout;
	wire	wire_nlii1i_dataout;
	wire	wire_nlii1l_dataout;
	wire	wire_nlii1O_dataout;
	wire	wire_nliiii_dataout;
	wire	wire_nliiil_dataout;
	wire	wire_nliiiO_dataout;
	wire	wire_nliili_dataout;
	wire	wire_nliill_dataout;
	wire	wire_nliilO_dataout;
	wire	wire_nliiO_dataout;
	wire	wire_nliiOi_dataout;
	wire	wire_nliiOl_dataout;
	wire	wire_nliiOO_dataout;
	wire	wire_nlil0i_dataout;
	wire	wire_nlil0l_dataout;
	wire	wire_nlil0O_dataout;
	wire	wire_nlil1i_dataout;
	wire	wire_nlil1l_dataout;
	wire	wire_nlil1O_dataout;
	wire	wire_nlili_dataout;
	wire	wire_nlilii_dataout;
	wire	wire_nlilil_dataout;
	wire	wire_nliliO_dataout;
	wire	wire_nlill_dataout;
	wire	wire_nlilli_dataout;
	wire	wire_nlilll_dataout;
	wire	wire_nlillO_dataout;
	wire	wire_nlilO_dataout;
	wire	wire_nlilOi_dataout;
	wire	wire_nlilOl_dataout;
	wire	wire_nlilOO_dataout;
	wire	wire_nliO0i_dataout;
	wire	wire_nliO0l_dataout;
	wire	wire_nliO0O_dataout;
	wire	wire_nliO1i_dataout;
	wire	wire_nliO1l_dataout;
	wire	wire_nliO1O_dataout;
	wire	wire_nliOi_dataout;
	wire	wire_nliOii_dataout;
	wire	wire_nliOil_dataout;
	wire	wire_nliOiO_dataout;
	wire	wire_nliOl_dataout;
	wire	wire_nliOli_dataout;
	wire	wire_nliOO_dataout;
	wire	wire_nll00i_dataout;
	wire	wire_nll00l_dataout;
	wire	wire_nll00O_dataout;
	wire	wire_nll01l_dataout;
	wire	wire_nll01O_dataout;
	wire	wire_nll0i_dataout;
	wire	wire_nll0ii_dataout;
	wire	wire_nll0il_dataout;
	wire	wire_nll0iO_dataout;
	wire	wire_nll0l_dataout;
	wire	wire_nll0li_dataout;
	wire	wire_nll0ll_dataout;
	wire	wire_nll0lO_dataout;
	wire	wire_nll0O_dataout;
	wire	wire_nll0Oi_dataout;
	wire	wire_nll0Ol_dataout;
	wire	wire_nll0OO_dataout;
	wire	wire_nll1i_dataout;
	wire	wire_nll1l_dataout;
	wire	wire_nll1O_dataout;
	wire	wire_nlli0i_dataout;
	wire	wire_nlli0l_dataout;
	wire	wire_nlli0O_dataout;
	wire	wire_nlli1i_dataout;
	wire	wire_nlli1l_dataout;
	wire	wire_nlli1O_dataout;
	wire	wire_nllii_dataout;
	wire	wire_nlliii_dataout;
	wire	wire_nlliil_dataout;
	wire	wire_nlliiO_dataout;
	wire	wire_nllil_dataout;
	wire	wire_nllili_dataout;
	wire	wire_nllill_dataout;
	wire	wire_nllilO_dataout;
	wire	wire_nlliO_dataout;
	wire	wire_nlliOi_dataout;
	wire	wire_nlliOl_dataout;
	wire	wire_nlliOO_dataout;
	wire	wire_nlll0i_dataout;
	wire	wire_nlll0l_dataout;
	wire	wire_nlll0O_dataout;
	wire	wire_nlll1i_dataout;
	wire	wire_nlll1l_dataout;
	wire	wire_nlll1O_dataout;
	wire	wire_nllli_dataout;
	wire	wire_nlllii_dataout;
	wire	wire_nlllil_dataout;
	wire	wire_nllliO_dataout;
	wire	wire_nllll_dataout;
	wire	wire_nlllli_dataout;
	wire	wire_nlllll_dataout;
	wire	wire_nllllO_dataout;
	wire	wire_nlllO_dataout;
	wire	wire_nlllOi_dataout;
	wire	wire_nllOi_dataout;
	wire	wire_nllOOO_dataout;
	wire	wire_nlO00i_dataout;
	wire	wire_nlO01i_dataout;
	wire	wire_nlO01l_dataout;
	wire	wire_nlO01O_dataout;
	wire	wire_nlO0ll_dataout;
	wire	wire_nlO0lO_dataout;
	wire	wire_nlO0Oi_dataout;
	wire	wire_nlO0Ol_dataout;
	wire	wire_nlO0OO_dataout;
	wire	wire_nlO10i_dataout;
	wire	wire_nlO10l_dataout;
	wire	wire_nlO10O_dataout;
	wire	wire_nlO11i_dataout;
	wire	wire_nlO11l_dataout;
	wire	wire_nlO11O_dataout;
	wire	wire_nlO1ii_dataout;
	wire	wire_nlO1il_dataout;
	wire	wire_nlO1iO_dataout;
	wire	wire_nlO1l_dataout;
	wire	wire_nlO1li_dataout;
	wire	wire_nlO1ll_dataout;
	wire	wire_nlO1lO_dataout;
	wire	wire_nlO1O_dataout;
	wire	wire_nlO1Oi_dataout;
	wire	wire_nlO1Ol_dataout;
	wire	wire_nlO1OO_dataout;
	wire	wire_nlOi0i_dataout;
	wire	wire_nlOi0l_dataout;
	wire	wire_nlOi0O_dataout;
	wire	wire_nlOi1i_dataout;
	wire	wire_nlOi1l_dataout;
	wire	wire_nlOi1O_dataout;
	wire	wire_nlOiii_dataout;
	wire	wire_nlOiil_dataout;
	wire	wire_nlOiiO_dataout;
	wire	wire_nlOili_dataout;
	wire	wire_nlOill_dataout;
	wire	wire_nlOilO_dataout;
	wire	wire_nlOiOi_dataout;
	wire	wire_nlOiOl_dataout;
	wire	wire_nlOiOO_dataout;
	wire	wire_nlOl1i_dataout;
	wire  [9:0]   wire_n0O0l_o;
	wire  [9:0]   wire_n0O0O_o;
	wire  [4:0]   wire_nlllOl_o;
	wire  wire_niliO_o;
	wire  wire_nilli_o;
	wire  wire_nilll_o;
	wire  wire_nillO_o;
	wire  wire_nilOi_o;
	wire  wire_nilOl_o;
	wire  wire_nilOO_o;
	wire  wire_niO0i_o;
	wire  wire_niO0l_o;
	wire  wire_niO0O_o;
	wire  wire_niO1i_o;
	wire  wire_niO1l_o;
	wire  wire_niO1O_o;
	wire  wire_niOii_o;
	wire  wire_niOil_o;
	wire  wire_niOiO_o;
	wire  wire_niOli_o;
	wire  wire_niOll_o;
	wire  wire_niOlO_o;
	wire  wire_niOOi_o;
	wire  nl01ii;

	altsyncram   n0Oil
	( 
	.address_a({nlO00l, nlO00O, nlO0ii, nlO0il, nlO0iO, nlO0li, nlOl1l}),
	.clock0(clk),
	.clocken0(clken),
	.eccstatus(),
	.q_a(wire_n0Oil_q_a),
	.q_b(),
	.aclr0(),
	.aclr1(),
	.address_b(),
	.addressstall_a(),
	.addressstall_b(),
	.byteena_a(),
	.byteena_b(),
	.clock1(),
	.clocken1(),
	.clocken2(),
	.clocken3(),
	.data_a(),
	.data_b(),
	.rden_a(),
	.rden_b(),
	.wren_a(),
	.wren_b()
	);
	defparam
		n0Oil.address_aclr_a = "NONE",
		n0Oil.address_aclr_b = "NONE",
		n0Oil.address_reg_b = "CLOCK1",
		n0Oil.byte_size = 8,
		n0Oil.byteena_aclr_a = "NONE",
		n0Oil.byteena_aclr_b = "NONE",
		n0Oil.byteena_reg_b = "CLOCK1",
		n0Oil.clock_enable_core_a = "USE_INPUT_CLKEN",
		n0Oil.clock_enable_core_b = "USE_INPUT_CLKEN",
		n0Oil.clock_enable_input_a = "NORMAL",
		n0Oil.clock_enable_input_b = "NORMAL",
		n0Oil.clock_enable_output_a = "NORMAL",
		n0Oil.clock_enable_output_b = "NORMAL",
		n0Oil.ecc_pipeline_stage_enabled = "FALSE",
		n0Oil.enable_ecc = "FALSE",
		n0Oil.indata_aclr_a = "NONE",
		n0Oil.indata_aclr_b = "NONE",
		n0Oil.indata_reg_b = "CLOCK1",
		n0Oil.init_file = "nco_sin.hex",
		n0Oil.init_file_layout = "PORT_A",
		n0Oil.intended_device_family = "Cyclone IV E",
		n0Oil.numwords_a = 128,
		n0Oil.numwords_b = 1,
		n0Oil.operation_mode = "ROM",
		n0Oil.outdata_aclr_a = "NONE",
		n0Oil.outdata_aclr_b = "NONE",
		n0Oil.outdata_reg_a = "CLOCK0",
		n0Oil.outdata_reg_b = "UNREGISTERED",
		n0Oil.ram_block_type = "AUTO",
		n0Oil.rdcontrol_aclr_b = "NONE",
		n0Oil.rdcontrol_reg_b = "CLOCK1",
		n0Oil.read_during_write_mode_mixed_ports = "DONT_CARE",
		n0Oil.read_during_write_mode_port_a = "NEW_DATA_NO_NBE_READ",
		n0Oil.read_during_write_mode_port_b = "NEW_DATA_NO_NBE_READ",
		n0Oil.width_a = 9,
		n0Oil.width_b = 1,
		n0Oil.width_byteena_a = 1,
		n0Oil.width_byteena_b = 1,
		n0Oil.width_eccstatus = 3,
		n0Oil.widthad_a = 7,
		n0Oil.widthad_b = 1,
		n0Oil.wrcontrol_aclr_a = "NONE",
		n0Oil.wrcontrol_aclr_b = "NONE",
		n0Oil.wrcontrol_wraddress_reg_b = "CLOCK1",
		n0Oil.lpm_hint = "WIDTH_BYTEENA=1";
	altsyncram   n0OiO
	( 
	.address_a({nlO00l, nlO00O, nlO0ii, nlO0il, nlO0iO, nlO0li, nlOl1l}),
	.clock0(clk),
	.clocken0(clken),
	.eccstatus(),
	.q_a(wire_n0OiO_q_a),
	.q_b(),
	.aclr0(),
	.aclr1(),
	.address_b(),
	.addressstall_a(),
	.addressstall_b(),
	.byteena_a(),
	.byteena_b(),
	.clock1(),
	.clocken1(),
	.clocken2(),
	.clocken3(),
	.data_a(),
	.data_b(),
	.rden_a(),
	.rden_b(),
	.wren_a(),
	.wren_b()
	);
	defparam
		n0OiO.address_aclr_a = "NONE",
		n0OiO.address_aclr_b = "NONE",
		n0OiO.address_reg_b = "CLOCK1",
		n0OiO.byte_size = 8,
		n0OiO.byteena_aclr_a = "NONE",
		n0OiO.byteena_aclr_b = "NONE",
		n0OiO.byteena_reg_b = "CLOCK1",
		n0OiO.clock_enable_core_a = "USE_INPUT_CLKEN",
		n0OiO.clock_enable_core_b = "USE_INPUT_CLKEN",
		n0OiO.clock_enable_input_a = "NORMAL",
		n0OiO.clock_enable_input_b = "NORMAL",
		n0OiO.clock_enable_output_a = "NORMAL",
		n0OiO.clock_enable_output_b = "NORMAL",
		n0OiO.ecc_pipeline_stage_enabled = "FALSE",
		n0OiO.enable_ecc = "FALSE",
		n0OiO.indata_aclr_a = "NONE",
		n0OiO.indata_aclr_b = "NONE",
		n0OiO.indata_reg_b = "CLOCK1",
		n0OiO.init_file = "nco_cos.hex",
		n0OiO.init_file_layout = "PORT_A",
		n0OiO.intended_device_family = "Cyclone IV E",
		n0OiO.numwords_a = 128,
		n0OiO.numwords_b = 1,
		n0OiO.operation_mode = "ROM",
		n0OiO.outdata_aclr_a = "NONE",
		n0OiO.outdata_aclr_b = "NONE",
		n0OiO.outdata_reg_a = "CLOCK0",
		n0OiO.outdata_reg_b = "UNREGISTERED",
		n0OiO.ram_block_type = "AUTO",
		n0OiO.rdcontrol_aclr_b = "NONE",
		n0OiO.rdcontrol_reg_b = "CLOCK1",
		n0OiO.read_during_write_mode_mixed_ports = "DONT_CARE",
		n0OiO.read_during_write_mode_port_a = "NEW_DATA_NO_NBE_READ",
		n0OiO.read_during_write_mode_port_b = "NEW_DATA_NO_NBE_READ",
		n0OiO.width_a = 9,
		n0OiO.width_b = 1,
		n0OiO.width_byteena_a = 1,
		n0OiO.width_byteena_b = 1,
		n0OiO.width_eccstatus = 3,
		n0OiO.widthad_a = 7,
		n0OiO.widthad_b = 1,
		n0OiO.wrcontrol_aclr_a = "NONE",
		n0OiO.wrcontrol_aclr_b = "NONE",
		n0OiO.wrcontrol_wraddress_reg_b = "CLOCK1",
		n0OiO.lpm_hint = "WIDTH_BYTEENA=1";
	initial
		nl010i3 = 0;
	always @ ( posedge clk)
		  nl010i3 <= nl010i4;
	event nl010i3_event;
	initial
		#1 ->nl010i3_event;
	always @(nl010i3_event)
		nl010i3 <= {1{1'b1}};
	initial
		nl010i4 = 0;
	always @ ( posedge clk)
		  nl010i4 <= nl010i3;
	initial
		nl011i10 = 0;
	always @ ( posedge clk)
		  nl011i10 <= nl011i9;
	initial
		nl011i9 = 0;
	always @ ( posedge clk)
		  nl011i9 <= nl011i10;
	event nl011i9_event;
	initial
		#1 ->nl011i9_event;
	always @(nl011i9_event)
		nl011i9 <= {1{1'b1}};
	initial
		nl011l7 = 0;
	always @ ( posedge clk)
		  nl011l7 <= nl011l8;
	event nl011l7_event;
	initial
		#1 ->nl011l7_event;
	always @(nl011l7_event)
		nl011l7 <= {1{1'b1}};
	initial
		nl011l8 = 0;
	always @ ( posedge clk)
		  nl011l8 <= nl011l7;
	initial
		nl011O5 = 0;
	always @ ( posedge clk)
		  nl011O5 <= nl011O6;
	event nl011O5_event;
	initial
		#1 ->nl011O5_event;
	always @(nl011O5_event)
		nl011O5 <= {1{1'b1}};
	initial
		nl011O6 = 0;
	always @ ( posedge clk)
		  nl011O6 <= nl011O5;
	initial
		nl01iO1 = 0;
	always @ ( posedge clk)
		  nl01iO1 <= nl01iO2;
	event nl01iO1_event;
	initial
		#1 ->nl01iO1_event;
	always @(nl01iO1_event)
		nl01iO1 <= {1{1'b1}};
	initial
		nl01iO2 = 0;
	always @ ( posedge clk)
		  nl01iO2 <= nl01iO1;
	initial
		nl1lOO41 = 0;
	always @ ( posedge clk)
		  nl1lOO41 <= nl1lOO42;
	event nl1lOO41_event;
	initial
		#1 ->nl1lOO41_event;
	always @(nl1lOO41_event)
		nl1lOO41 <= {1{1'b1}};
	initial
		nl1lOO42 = 0;
	always @ ( posedge clk)
		  nl1lOO42 <= nl1lOO41;
	initial
		nl1O0i33 = 0;
	always @ ( posedge clk)
		  nl1O0i33 <= nl1O0i34;
	event nl1O0i33_event;
	initial
		#1 ->nl1O0i33_event;
	always @(nl1O0i33_event)
		nl1O0i33 <= {1{1'b1}};
	initial
		nl1O0i34 = 0;
	always @ ( posedge clk)
		  nl1O0i34 <= nl1O0i33;
	initial
		nl1O0l31 = 0;
	always @ ( posedge clk)
		  nl1O0l31 <= nl1O0l32;
	event nl1O0l31_event;
	initial
		#1 ->nl1O0l31_event;
	always @(nl1O0l31_event)
		nl1O0l31 <= {1{1'b1}};
	initial
		nl1O0l32 = 0;
	always @ ( posedge clk)
		  nl1O0l32 <= nl1O0l31;
	initial
		nl1O0O29 = 0;
	always @ ( posedge clk)
		  nl1O0O29 <= nl1O0O30;
	event nl1O0O29_event;
	initial
		#1 ->nl1O0O29_event;
	always @(nl1O0O29_event)
		nl1O0O29 <= {1{1'b1}};
	initial
		nl1O0O30 = 0;
	always @ ( posedge clk)
		  nl1O0O30 <= nl1O0O29;
	initial
		nl1O1i39 = 0;
	always @ ( posedge clk)
		  nl1O1i39 <= nl1O1i40;
	event nl1O1i39_event;
	initial
		#1 ->nl1O1i39_event;
	always @(nl1O1i39_event)
		nl1O1i39 <= {1{1'b1}};
	initial
		nl1O1i40 = 0;
	always @ ( posedge clk)
		  nl1O1i40 <= nl1O1i39;
	initial
		nl1O1l37 = 0;
	always @ ( posedge clk)
		  nl1O1l37 <= nl1O1l38;
	event nl1O1l37_event;
	initial
		#1 ->nl1O1l37_event;
	always @(nl1O1l37_event)
		nl1O1l37 <= {1{1'b1}};
	initial
		nl1O1l38 = 0;
	always @ ( posedge clk)
		  nl1O1l38 <= nl1O1l37;
	initial
		nl1O1O35 = 0;
	always @ ( posedge clk)
		  nl1O1O35 <= nl1O1O36;
	event nl1O1O35_event;
	initial
		#1 ->nl1O1O35_event;
	always @(nl1O1O35_event)
		nl1O1O35 <= {1{1'b1}};
	initial
		nl1O1O36 = 0;
	always @ ( posedge clk)
		  nl1O1O36 <= nl1O1O35;
	initial
		nl1Oii27 = 0;
	always @ ( posedge clk)
		  nl1Oii27 <= nl1Oii28;
	event nl1Oii27_event;
	initial
		#1 ->nl1Oii27_event;
	always @(nl1Oii27_event)
		nl1Oii27 <= {1{1'b1}};
	initial
		nl1Oii28 = 0;
	always @ ( posedge clk)
		  nl1Oii28 <= nl1Oii27;
	initial
		nl1Oil25 = 0;
	always @ ( posedge clk)
		  nl1Oil25 <= nl1Oil26;
	event nl1Oil25_event;
	initial
		#1 ->nl1Oil25_event;
	always @(nl1Oil25_event)
		nl1Oil25 <= {1{1'b1}};
	initial
		nl1Oil26 = 0;
	always @ ( posedge clk)
		  nl1Oil26 <= nl1Oil25;
	initial
		nl1OiO23 = 0;
	always @ ( posedge clk)
		  nl1OiO23 <= nl1OiO24;
	event nl1OiO23_event;
	initial
		#1 ->nl1OiO23_event;
	always @(nl1OiO23_event)
		nl1OiO23 <= {1{1'b1}};
	initial
		nl1OiO24 = 0;
	always @ ( posedge clk)
		  nl1OiO24 <= nl1OiO23;
	initial
		nl1Oli21 = 0;
	always @ ( posedge clk)
		  nl1Oli21 <= nl1Oli22;
	event nl1Oli21_event;
	initial
		#1 ->nl1Oli21_event;
	always @(nl1Oli21_event)
		nl1Oli21 <= {1{1'b1}};
	initial
		nl1Oli22 = 0;
	always @ ( posedge clk)
		  nl1Oli22 <= nl1Oli21;
	initial
		nl1Oll19 = 0;
	always @ ( posedge clk)
		  nl1Oll19 <= nl1Oll20;
	event nl1Oll19_event;
	initial
		#1 ->nl1Oll19_event;
	always @(nl1Oll19_event)
		nl1Oll19 <= {1{1'b1}};
	initial
		nl1Oll20 = 0;
	always @ ( posedge clk)
		  nl1Oll20 <= nl1Oll19;
	initial
		nl1OlO17 = 0;
	always @ ( posedge clk)
		  nl1OlO17 <= nl1OlO18;
	event nl1OlO17_event;
	initial
		#1 ->nl1OlO17_event;
	always @(nl1OlO17_event)
		nl1OlO17 <= {1{1'b1}};
	initial
		nl1OlO18 = 0;
	always @ ( posedge clk)
		  nl1OlO18 <= nl1OlO17;
	initial
		nl1OOi15 = 0;
	always @ ( posedge clk)
		  nl1OOi15 <= nl1OOi16;
	event nl1OOi15_event;
	initial
		#1 ->nl1OOi15_event;
	always @(nl1OOi15_event)
		nl1OOi15 <= {1{1'b1}};
	initial
		nl1OOi16 = 0;
	always @ ( posedge clk)
		  nl1OOi16 <= nl1OOi15;
	initial
		nl1OOl13 = 0;
	always @ ( posedge clk)
		  nl1OOl13 <= nl1OOl14;
	event nl1OOl13_event;
	initial
		#1 ->nl1OOl13_event;
	always @(nl1OOl13_event)
		nl1OOl13 <= {1{1'b1}};
	initial
		nl1OOl14 = 0;
	always @ ( posedge clk)
		  nl1OOl14 <= nl1OOl13;
	initial
		nl1OOO11 = 0;
	always @ ( posedge clk)
		  nl1OOO11 <= nl1OOO12;
	event nl1OOO11_event;
	initial
		#1 ->nl1OOO11_event;
	always @(nl1OOO11_event)
		nl1OOO11 <= {1{1'b1}};
	initial
		nl1OOO12 = 0;
	always @ ( posedge clk)
		  nl1OOO12 <= nl1OOO11;
	initial
	begin
		n0Oii = 0;
		n0Oli = 0;
		n0Oll = 0;
		n0OlO = 0;
		n0OOi = 0;
		n0OOl = 0;
		n0OOO = 0;
		n100i = 0;
		n100l = 0;
		n100O = 0;
		n101i = 0;
		n101l = 0;
		n101O = 0;
		n10ii = 0;
		n10il = 0;
		n10iO = 0;
		n10li = 0;
		n10ll = 0;
		n10lO = 0;
		n110i = 0;
		n110l = 0;
		n110O = 0;
		n111i = 0;
		n111l = 0;
		n111O = 0;
		n11ii = 0;
		n11il = 0;
		n11iO = 0;
		n11li = 0;
		n11ll = 0;
		n11lO = 0;
		n11Oi = 0;
		n11Ol = 0;
		n11OO = 0;
		ni10i = 0;
		ni10l = 0;
		ni10O = 0;
		ni11i = 0;
		ni11l = 0;
		ni11O = 0;
		ni1ii = 0;
		ni1il = 0;
		ni1iO = 0;
		ni1li = 0;
		ni1ll = 0;
		ni1lO = 0;
		ni1Oi = 0;
		niOOl = 0;
		niOOO = 0;
		nl000i = 0;
		nl000l = 0;
		nl001i = 0;
		nl001l = 0;
		nl001O = 0;
		nl01li = 0;
		nl01ll = 0;
		nl01lO = 0;
		nl01Oi = 0;
		nl01Ol = 0;
		nl01OO = 0;
		nl0i0O = 0;
		nl0iii = 0;
		nl0iil = 0;
		nl0iiO = 0;
		nl0llO = 0;
		nl0lOi = 0;
		nl0lOl = 0;
		nl0lOO = 0;
		nl0O0i = 0;
		nl0O0l = 0;
		nl0O0O = 0;
		nl0O1i = 0;
		nl0O1l = 0;
		nl0O1O = 0;
		nl0Oii = 0;
		nl0Oil = 0;
		nl0OiO = 0;
		nl0Ol = 0;
		nl0Oli = 0;
		nl0Oll = 0;
		nl0OlO = 0;
		nl0OO = 0;
		nl0OOi = 0;
		nl0OOl = 0;
		nl0OOO = 0;
		nl10i = 0;
		nl10l = 0;
		nl10O = 0;
		nl11i = 0;
		nl11l = 0;
		nl11O = 0;
		nl1ii = 0;
		nl1il = 0;
		nli0i = 0;
		nli0l = 0;
		nli0O = 0;
		nli10i = 0;
		nli10l = 0;
		nli10O = 0;
		nli11i = 0;
		nli11l = 0;
		nli11O = 0;
		nli1i = 0;
		nli1ii = 0;
		nli1il = 0;
		nli1iO = 0;
		nli1l = 0;
		nli1li = 0;
		nli1O = 0;
		nliii = 0;
		nliil = 0;
		nliOll = 0;
		nliOlO = 0;
		nliOOi = 0;
		nliOOl = 0;
		nliOOO = 0;
		nll01i = 0;
		nll10i = 0;
		nll10l = 0;
		nll10O = 0;
		nll11i = 0;
		nll11l = 0;
		nll11O = 0;
		nll1ii = 0;
		nll1il = 0;
		nll1iO = 0;
		nll1li = 0;
		nll1ll = 0;
		nll1lO = 0;
		nll1Oi = 0;
		nll1Ol = 0;
		nll1OO = 0;
		nllO0l = 0;
		nllO0O = 0;
		nllO1O = 0;
		nllOii = 0;
		nllOil = 0;
		nllOiO = 0;
		nllOl = 0;
		nllOli = 0;
		nllOll = 0;
		nllOlO = 0;
		nllOOi = 0;
		nllOOl = 0;
		nlO00l = 0;
		nlO00O = 0;
		nlO0ii = 0;
		nlO0il = 0;
		nlO0iO = 0;
		nlO0li = 0;
		nlO0O = 0;
		nlOl0i = 0;
		nlOl0l = 0;
		nlOl0O = 0;
		nlOl1l = 0;
		nlOl1O = 0;
		nlOlii = 0;
		nlOlil = 0;
		nlOliO = 0;
		nlOlli = 0;
		nlOlll = 0;
		nlOllO = 0;
		nlOlOi = 0;
		nlOlOl = 0;
		nlOlOO = 0;
		nlOO0i = 0;
		nlOO0l = 0;
		nlOO0O = 0;
		nlOO1i = 0;
		nlOO1l = 0;
		nlOO1O = 0;
		nlOOii = 0;
		nlOOil = 0;
		nlOOiO = 0;
		nlOOli = 0;
		nlOOll = 0;
		nlOOlO = 0;
		nlOOOi = 0;
		nlOOOl = 0;
		nlOOOO = 0;
	end
	always @ ( posedge clk or  negedge wire_nlO0l_CLRN)
	begin
		if (wire_nlO0l_CLRN == 1'b0) 
		begin
			n0Oii <= 0;
			n0Oli <= 0;
			n0Oll <= 0;
			n0OlO <= 0;
			n0OOi <= 0;
			n0OOl <= 0;
			n0OOO <= 0;
			n100i <= 0;
			n100l <= 0;
			n100O <= 0;
			n101i <= 0;
			n101l <= 0;
			n101O <= 0;
			n10ii <= 0;
			n10il <= 0;
			n10iO <= 0;
			n10li <= 0;
			n10ll <= 0;
			n10lO <= 0;
			n110i <= 0;
			n110l <= 0;
			n110O <= 0;
			n111i <= 0;
			n111l <= 0;
			n111O <= 0;
			n11ii <= 0;
			n11il <= 0;
			n11iO <= 0;
			n11li <= 0;
			n11ll <= 0;
			n11lO <= 0;
			n11Oi <= 0;
			n11Ol <= 0;
			n11OO <= 0;
			ni10i <= 0;
			ni10l <= 0;
			ni10O <= 0;
			ni11i <= 0;
			ni11l <= 0;
			ni11O <= 0;
			ni1ii <= 0;
			ni1il <= 0;
			ni1iO <= 0;
			ni1li <= 0;
			ni1ll <= 0;
			ni1lO <= 0;
			ni1Oi <= 0;
			niOOl <= 0;
			niOOO <= 0;
			nl000i <= 0;
			nl000l <= 0;
			nl001i <= 0;
			nl001l <= 0;
			nl001O <= 0;
			nl01li <= 0;
			nl01ll <= 0;
			nl01lO <= 0;
			nl01Oi <= 0;
			nl01Ol <= 0;
			nl01OO <= 0;
			nl0i0O <= 0;
			nl0iii <= 0;
			nl0iil <= 0;
			nl0iiO <= 0;
			nl0llO <= 0;
			nl0lOi <= 0;
			nl0lOl <= 0;
			nl0lOO <= 0;
			nl0O0i <= 0;
			nl0O0l <= 0;
			nl0O0O <= 0;
			nl0O1i <= 0;
			nl0O1l <= 0;
			nl0O1O <= 0;
			nl0Oii <= 0;
			nl0Oil <= 0;
			nl0OiO <= 0;
			nl0Ol <= 0;
			nl0Oli <= 0;
			nl0Oll <= 0;
			nl0OlO <= 0;
			nl0OO <= 0;
			nl0OOi <= 0;
			nl0OOl <= 0;
			nl0OOO <= 0;
			nl10i <= 0;
			nl10l <= 0;
			nl10O <= 0;
			nl11i <= 0;
			nl11l <= 0;
			nl11O <= 0;
			nl1ii <= 0;
			nl1il <= 0;
			nli0i <= 0;
			nli0l <= 0;
			nli0O <= 0;
			nli10i <= 0;
			nli10l <= 0;
			nli10O <= 0;
			nli11i <= 0;
			nli11l <= 0;
			nli11O <= 0;
			nli1i <= 0;
			nli1ii <= 0;
			nli1il <= 0;
			nli1iO <= 0;
			nli1l <= 0;
			nli1li <= 0;
			nli1O <= 0;
			nliii <= 0;
			nliil <= 0;
			nliOll <= 0;
			nliOlO <= 0;
			nliOOi <= 0;
			nliOOl <= 0;
			nliOOO <= 0;
			nll01i <= 0;
			nll10i <= 0;
			nll10l <= 0;
			nll10O <= 0;
			nll11i <= 0;
			nll11l <= 0;
			nll11O <= 0;
			nll1ii <= 0;
			nll1il <= 0;
			nll1iO <= 0;
			nll1li <= 0;
			nll1ll <= 0;
			nll1lO <= 0;
			nll1Oi <= 0;
			nll1Ol <= 0;
			nll1OO <= 0;
			nllO0l <= 0;
			nllO0O <= 0;
			nllO1O <= 0;
			nllOii <= 0;
			nllOil <= 0;
			nllOiO <= 0;
			nllOl <= 0;
			nllOli <= 0;
			nllOll <= 0;
			nllOlO <= 0;
			nllOOi <= 0;
			nllOOl <= 0;
			nlO00l <= 0;
			nlO00O <= 0;
			nlO0ii <= 0;
			nlO0il <= 0;
			nlO0iO <= 0;
			nlO0li <= 0;
			nlO0O <= 0;
			nlOl0i <= 0;
			nlOl0l <= 0;
			nlOl0O <= 0;
			nlOl1l <= 0;
			nlOl1O <= 0;
			nlOlii <= 0;
			nlOlil <= 0;
			nlOliO <= 0;
			nlOlli <= 0;
			nlOlll <= 0;
			nlOllO <= 0;
			nlOlOi <= 0;
			nlOlOl <= 0;
			nlOlOO <= 0;
			nlOO0i <= 0;
			nlOO0l <= 0;
			nlOO0O <= 0;
			nlOO1i <= 0;
			nlOO1l <= 0;
			nlOO1O <= 0;
			nlOOii <= 0;
			nlOOil <= 0;
			nlOOiO <= 0;
			nlOOli <= 0;
			nlOOll <= 0;
			nlOOlO <= 0;
			nlOOOi <= 0;
			nlOOOl <= 0;
			nlOOOO <= 0;
		end
		else 
		begin
			n0Oii <= wire_n10Oi_dataout;
			n0Oli <= wire_nii1O_dataout;
			n0Oll <= wire_nii1l_dataout;
			n0OlO <= wire_nii1i_dataout;
			n0OOi <= wire_ni0OO_dataout;
			n0OOl <= wire_ni0Ol_dataout;
			n0OOO <= wire_ni0Oi_dataout;
			n100i <= wire_n1iii_dataout;
			n100l <= wire_n1i0O_dataout;
			n100O <= wire_n1i0l_dataout;
			n101i <= wire_n1ili_dataout;
			n101l <= wire_n1iiO_dataout;
			n101O <= wire_n1iil_dataout;
			n10ii <= wire_n1i0i_dataout;
			n10il <= wire_n1i1O_dataout;
			n10iO <= wire_n1i1l_dataout;
			n10li <= wire_n1i1i_dataout;
			n10ll <= wire_n10OO_dataout;
			n10lO <= wire_n10Ol_dataout;
			n110i <= wire_n1lii_dataout;
			n110l <= wire_n1l0O_dataout;
			n110O <= wire_n1l0l_dataout;
			n111i <= wire_n1lli_dataout;
			n111l <= wire_n1liO_dataout;
			n111O <= wire_n1lil_dataout;
			n11ii <= wire_n1l0i_dataout;
			n11il <= wire_n1l1O_dataout;
			n11iO <= wire_n1l1l_dataout;
			n11li <= wire_n1l1i_dataout;
			n11ll <= wire_n1iOO_dataout;
			n11lO <= wire_n1iOl_dataout;
			n11Oi <= wire_n1iOi_dataout;
			n11Ol <= wire_n1ilO_dataout;
			n11OO <= wire_n1ill_dataout;
			ni10i <= wire_ni0iO_dataout;
			ni10l <= wire_ni0il_dataout;
			ni10O <= wire_ni0ii_dataout;
			ni11i <= wire_ni0lO_dataout;
			ni11l <= wire_ni0ll_dataout;
			ni11O <= wire_ni0li_dataout;
			ni1ii <= wire_ni00O_dataout;
			ni1il <= wire_ni00l_dataout;
			ni1iO <= wire_ni00i_dataout;
			ni1li <= wire_ni01O_dataout;
			ni1ll <= wire_ni01l_dataout;
			ni1lO <= wire_ni01i_dataout;
			ni1Oi <= wire_ni1OO_dataout;
			niOOl <= wire_ni1Ol_dataout;
			niOOO <= wire_nl01O_dataout;
			nl000i <= wire_nl00OO_dataout;
			nl000l <= wire_nl0i1i_dataout;
			nl001i <= wire_nl00lO_dataout;
			nl001l <= wire_nl00Oi_dataout;
			nl001O <= wire_nl00Ol_dataout;
			nl01li <= wire_nl000O_dataout;
			nl01ll <= wire_nl00ii_dataout;
			nl01lO <= wire_nl00il_dataout;
			nl01Oi <= wire_nl00iO_dataout;
			nl01Ol <= wire_nl00li_dataout;
			nl01OO <= wire_nl00ll_dataout;
			nl0i0O <= wire_nl0i1l_dataout;
			nl0iii <= wire_nl0i1O_dataout;
			nl0iil <= wire_nl0i0i_dataout;
			nl0iiO <= wire_nl0i0l_dataout;
			nl0llO <= wire_nliili_dataout;
			nl0lOi <= wire_nliiiO_dataout;
			nl0lOl <= wire_nliiil_dataout;
			nl0lOO <= wire_nliiii_dataout;
			nl0O0i <= wire_nlii1O_dataout;
			nl0O0l <= wire_nlii1l_dataout;
			nl0O0O <= wire_nlii1i_dataout;
			nl0O1i <= wire_nlii0O_dataout;
			nl0O1l <= wire_nlii0l_dataout;
			nl0O1O <= wire_nlii0i_dataout;
			nl0Oii <= wire_nli0OO_dataout;
			nl0Oil <= wire_nli0Ol_dataout;
			nl0OiO <= wire_nli0Oi_dataout;
			nl0Ol <= wire_nl1iO_dataout;
			nl0Oli <= wire_nli0lO_dataout;
			nl0Oll <= wire_nli0ll_dataout;
			nl0OlO <= wire_nli0li_dataout;
			nl0OO <= wire_nll1O_dataout;
			nl0OOi <= wire_nli0iO_dataout;
			nl0OOl <= wire_nli0il_dataout;
			nl0OOO <= wire_nli0ii_dataout;
			nl10i <= wire_nl1Ol_dataout;
			nl10l <= wire_nl1Oi_dataout;
			nl10O <= wire_nl1lO_dataout;
			nl11i <= wire_nl01l_dataout;
			nl11l <= wire_nl01i_dataout;
			nl11O <= wire_nl1OO_dataout;
			nl1ii <= wire_nl1ll_dataout;
			nl1il <= wire_nl1li_dataout;
			nli0i <= wire_nliOl_dataout;
			nli0l <= wire_nliOi_dataout;
			nli0O <= wire_nlilO_dataout;
			nli10i <= wire_nli01O_dataout;
			nli10l <= wire_nli01l_dataout;
			nli10O <= wire_nli01i_dataout;
			nli11i <= wire_nli00O_dataout;
			nli11l <= wire_nli00l_dataout;
			nli11O <= wire_nli00i_dataout;
			nli1i <= wire_nll1l_dataout;
			nli1ii <= wire_nli1OO_dataout;
			nli1il <= wire_nli1Ol_dataout;
			nli1iO <= wire_nli1Oi_dataout;
			nli1l <= wire_nll1i_dataout;
			nli1li <= wire_nli1lO_dataout;
			nli1O <= wire_nliOO_dataout;
			nliii <= wire_nlill_dataout;
			nliil <= wire_nlili_dataout;
			nliOll <= wire_nli1ll_dataout;
			nliOlO <= wire_nlliii_dataout;
			nliOOi <= wire_nlli0O_dataout;
			nliOOl <= wire_nlli0l_dataout;
			nliOOO <= wire_nlli0i_dataout;
			nll01i <= wire_nll01O_dataout;
			nll10i <= wire_nll0OO_dataout;
			nll10l <= wire_nll0Ol_dataout;
			nll10O <= wire_nll0Oi_dataout;
			nll11i <= wire_nlli1O_dataout;
			nll11l <= wire_nlli1l_dataout;
			nll11O <= wire_nlli1i_dataout;
			nll1ii <= wire_nll0lO_dataout;
			nll1il <= wire_nll0ll_dataout;
			nll1iO <= wire_nll0li_dataout;
			nll1li <= wire_nll0iO_dataout;
			nll1ll <= wire_nll0il_dataout;
			nll1lO <= wire_nll0ii_dataout;
			nll1Oi <= wire_nll00O_dataout;
			nll1Ol <= wire_nll00l_dataout;
			nll1OO <= wire_nll00i_dataout;
			nllO0l <= wire_nlO1iO_dataout;
			nllO0O <= wire_nlO1il_dataout;
			nllO1O <= wire_nll01l_dataout;
			nllOii <= wire_nlO1ii_dataout;
			nllOil <= wire_nlO10O_dataout;
			nllOiO <= wire_nlO10l_dataout;
			nllOl <= wire_nliiO_dataout;
			nllOli <= wire_nlO10i_dataout;
			nllOll <= wire_nlO11O_dataout;
			nllOlO <= wire_nlO11l_dataout;
			nllOOi <= wire_nlO11i_dataout;
			nllOOl <= wire_nllOOO_dataout;
			nlO00l <= wire_nlOi1l_dataout;
			nlO00O <= wire_nlOi1i_dataout;
			nlO0ii <= wire_nlO0OO_dataout;
			nlO0il <= wire_nlO0Ol_dataout;
			nlO0iO <= wire_nlO0Oi_dataout;
			nlO0li <= wire_nlO0lO_dataout;
			nlO0O <= wire_nlO1l_dataout;
			nlOl0i <= wire_n01ii_dataout;
			nlOl0l <= wire_n010O_dataout;
			nlOl0O <= wire_n010l_dataout;
			nlOl1l <= wire_nlO0ll_dataout;
			nlOl1O <= wire_n01il_dataout;
			nlOlii <= wire_n010i_dataout;
			nlOlil <= wire_n011O_dataout;
			nlOliO <= wire_n011l_dataout;
			nlOlli <= wire_n011i_dataout;
			nlOlll <= wire_n1OOO_dataout;
			nlOllO <= wire_n1OOl_dataout;
			nlOlOi <= wire_n1OOi_dataout;
			nlOlOl <= wire_n1OlO_dataout;
			nlOlOO <= wire_n1Oll_dataout;
			nlOO0i <= wire_n1Oii_dataout;
			nlOO0l <= wire_n1O0O_dataout;
			nlOO0O <= wire_n1O0l_dataout;
			nlOO1i <= wire_n1Oli_dataout;
			nlOO1l <= wire_n1OiO_dataout;
			nlOO1O <= wire_n1Oil_dataout;
			nlOOii <= wire_n1O0i_dataout;
			nlOOil <= wire_n1O1O_dataout;
			nlOOiO <= wire_n1O1l_dataout;
			nlOOli <= wire_n1O1i_dataout;
			nlOOll <= wire_n1lOO_dataout;
			nlOOlO <= wire_n1lOl_dataout;
			nlOOOi <= wire_n1lOi_dataout;
			nlOOOl <= wire_n1llO_dataout;
			nlOOOO <= wire_n1lll_dataout;
		end
	end
	assign
		wire_nlO0l_CLRN = (nl01iO2 ^ nl01iO1);
	lpm_add_sub   nl0lli
	( 
	.aclr((~ reset_n)),
	.add_sub(1'b1),
	.clken(clken),
	.clock(clk),
	.cout(),
	.dataa({phi_inc_i[29:0]}),
	.datab({freq_mod_i[29:0]}),
	.overflow(),
	.result(wire_nl0lli_result),
	.cin()
	);
	defparam
		nl0lli.lpm_pipeline = 1,
		nl0lli.lpm_representation = "SIGNED",
		nl0lli.lpm_width = 30;
	lpm_add_sub   nl0lll
	( 
	.aclr((~ reset_n)),
	.clken(clken),
	.clock(clk),
	.cout(),
	.dataa({nl0llO, nl0lOi, nl0lOl, nl0lOO, nl0O1i, nl0O1l, nl0O1O, nl0O0i, nl0O0l, nl0O0O, nl0Oii, nl0Oil, nl0OiO, nl0Oli, nl0Oll, nl0OlO, nl0OOi, nl0OOl, nl0OOO, nli11i, nli11l, nli11O, nli10i, nli10l, nli10O, nli1ii, nli1il, nli1iO, nli1li, nliOll}),
	.datab({wire_nl0lll_result[29:0]}),
	.overflow(),
	.result(wire_nl0lll_result),
	.add_sub(),
	.cin()
	);
	defparam
		nl0lll.lpm_direction = "ADD",
		nl0lll.lpm_pipeline = 1,
		nl0lll.lpm_representation = "UNSIGNED",
		nl0lll.lpm_width = 30;
	lpm_add_sub   nllO0i
	( 
	.aclr((~ reset_n)),
	.clken(clken),
	.clock(clk),
	.cout(),
	.dataa({wire_nl0lll_result[29:15]}),
	.datab({{11{nll1Oi}}, nll1Ol, nll1OO, nll01i, nllO1O}),
	.overflow(),
	.result(wire_nllO0i_result),
	.add_sub(),
	.cin()
	);
	defparam
		nllO0i.lpm_direction = "ADD",
		nllO0i.lpm_pipeline = 1,
		nllO0i.lpm_representation = "SIGNED",
		nllO0i.lpm_width = 15;
	lpm_counter   nllOO
	( 
	.aclr((~ reset_n)),
	.clk_en(clken),
	.clock(clk),
	.cout(),
	.q(wire_nllOO_q),
	.aload(),
	.aset(),
	.cin(),
	.cnt_en(),
	.data(),
	.sclr(),
	.sload(),
	.sset(),
	.updown()
	);
	defparam
		nllOO.lpm_direction = "UP",
		nllOO.lpm_modulus = 0,
		nllOO.lpm_port_updown = "PORT_CONNECTIVITY",
		nllOO.lpm_width = 4;
	assign		wire_n000i_dataout = (clken === 1'b1) ? nlOlli : n101O;
	assign		wire_n000l_dataout = (clken === 1'b1) ? nlOliO : n101l;
	assign		wire_n000O_dataout = (clken === 1'b1) ? nlOlil : n101i;
	assign		wire_n001i_dataout = (clken === 1'b1) ? nlOlOi : n100O;
	assign		wire_n001l_dataout = (clken === 1'b1) ? nlOllO : n100l;
	assign		wire_n001O_dataout = (clken === 1'b1) ? nlOlll : n100i;
	assign		wire_n00ii_dataout = (clken === 1'b1) ? nlOlii : n11OO;
	assign		wire_n00il_dataout = (clken === 1'b1) ? nlOl0O : n11Ol;
	assign		wire_n00iO_dataout = (clken === 1'b1) ? nlOl0l : n11Oi;
	assign		wire_n00li_dataout = (clken === 1'b1) ? nlOl0i : n11lO;
	assign		wire_n00ll_dataout = (clken === 1'b1) ? nlOl1O : n11ll;
	assign		wire_n00lO_dataout = (clken === 1'b1) ? wire_n0O0l_o[0] : n11li;
	assign		wire_n00Oi_dataout = (clken === 1'b1) ? wire_n0O0l_o[1] : n11iO;
	assign		wire_n00Ol_dataout = (clken === 1'b1) ? wire_n0O0l_o[2] : n11il;
	assign		wire_n00OO_dataout = (clken === 1'b1) ? wire_n0O0l_o[3] : n11ii;
	and(wire_n010i_dataout, wire_n0lOO_dataout, ~((~ reset_n)));
	and(wire_n010l_dataout, wire_n0O1i_dataout, ~((~ reset_n)));
	and(wire_n010O_dataout, wire_n0O1l_dataout, ~((~ reset_n)));
	and(wire_n011i_dataout, wire_n0llO_dataout, ~((~ reset_n)));
	and(wire_n011l_dataout, wire_n0lOi_dataout, ~((~ reset_n)));
	and(wire_n011O_dataout, wire_n0lOl_dataout, ~((~ reset_n)));
	and(wire_n01ii_dataout, wire_n0O1O_dataout, ~((~ reset_n)));
	and(wire_n01il_dataout, wire_n0O0i_dataout, ~((~ reset_n)));
	assign		wire_n01iO_dataout = (clken === 1'b1) ? nlOO0l : n0Oii;
	assign		wire_n01li_dataout = (clken === 1'b1) ? nlOO0i : n10lO;
	assign		wire_n01ll_dataout = (clken === 1'b1) ? nlOO1O : n10ll;
	assign		wire_n01lO_dataout = (clken === 1'b1) ? nlOO1l : n10li;
	assign		wire_n01Oi_dataout = (clken === 1'b1) ? nlOO1i : n10iO;
	assign		wire_n01Ol_dataout = (clken === 1'b1) ? nlOlOO : n10il;
	assign		wire_n01OO_dataout = (clken === 1'b1) ? nlOlOl : n10ii;
	assign		wire_n0i0i_dataout = (clken === 1'b1) ? wire_n0O0l_o[7] : n111O;
	assign		wire_n0i0l_dataout = (clken === 1'b1) ? wire_n0O0l_o[8] : n111l;
	assign		wire_n0i0O_dataout = (clken === 1'b1) ? (~ wire_n0O0l_o[9]) : n111i;
	assign		wire_n0i1i_dataout = (clken === 1'b1) ? wire_n0O0l_o[4] : n110O;
	assign		wire_n0i1l_dataout = (clken === 1'b1) ? wire_n0O0l_o[5] : n110l;
	assign		wire_n0i1O_dataout = (clken === 1'b1) ? wire_n0O0l_o[6] : n110i;
	assign		wire_n0iii_dataout = (clken === 1'b1) ? wire_n0O0O_o[0] : nlOOOO;
	assign		wire_n0iil_dataout = (clken === 1'b1) ? wire_n0O0O_o[1] : nlOOOl;
	assign		wire_n0iiO_dataout = (clken === 1'b1) ? wire_n0O0O_o[2] : nlOOOi;
	assign		wire_n0ili_dataout = (clken === 1'b1) ? wire_n0O0O_o[3] : nlOOlO;
	assign		wire_n0ill_dataout = (clken === 1'b1) ? wire_n0O0O_o[4] : nlOOll;
	assign		wire_n0ilO_dataout = (clken === 1'b1) ? wire_n0O0O_o[5] : nlOOli;
	assign		wire_n0iOi_dataout = (clken === 1'b1) ? wire_n0O0O_o[6] : nlOOiO;
	assign		wire_n0iOl_dataout = (clken === 1'b1) ? wire_n0O0O_o[7] : nlOOil;
	assign		wire_n0iOO_dataout = (clken === 1'b1) ? wire_n0O0O_o[8] : nlOOii;
	assign		wire_n0l0i_dataout = (clken === 1'b1) ? wire_n0OiO_q_a[2] : nlOO1O;
	assign		wire_n0l0l_dataout = (clken === 1'b1) ? wire_n0OiO_q_a[3] : nlOO1l;
	assign		wire_n0l0O_dataout = (clken === 1'b1) ? wire_n0OiO_q_a[4] : nlOO1i;
	assign		wire_n0l1i_dataout = (clken === 1'b1) ? (~ wire_n0O0O_o[9]) : nlOO0O;
	assign		wire_n0l1l_dataout = (clken === 1'b1) ? wire_n0OiO_q_a[0] : nlOO0l;
	assign		wire_n0l1O_dataout = (clken === 1'b1) ? wire_n0OiO_q_a[1] : nlOO0i;
	assign		wire_n0lii_dataout = (clken === 1'b1) ? wire_n0OiO_q_a[5] : nlOlOO;
	assign		wire_n0lil_dataout = (clken === 1'b1) ? wire_n0OiO_q_a[6] : nlOlOl;
	assign		wire_n0liO_dataout = (clken === 1'b1) ? wire_n0OiO_q_a[7] : nlOlOi;
	assign		wire_n0lli_dataout = (clken === 1'b1) ? wire_n0OiO_q_a[8] : nlOllO;
	assign		wire_n0lll_dataout = (clken === 1'b1) ? wire_n0Oil_q_a[0] : nlOlll;
	assign		wire_n0llO_dataout = (clken === 1'b1) ? wire_n0Oil_q_a[1] : nlOlli;
	assign		wire_n0lOi_dataout = (clken === 1'b1) ? wire_n0Oil_q_a[2] : nlOliO;
	assign		wire_n0lOl_dataout = (clken === 1'b1) ? wire_n0Oil_q_a[3] : nlOlil;
	assign		wire_n0lOO_dataout = (clken === 1'b1) ? wire_n0Oil_q_a[4] : nlOlii;
	assign		wire_n0O0i_dataout = (clken === 1'b1) ? wire_n0Oil_q_a[8] : nlOl1O;
	assign		wire_n0O1i_dataout = (clken === 1'b1) ? wire_n0Oil_q_a[5] : nlOl0O;
	assign		wire_n0O1l_dataout = (clken === 1'b1) ? wire_n0Oil_q_a[6] : nlOl0l;
	assign		wire_n0O1O_dataout = (clken === 1'b1) ? wire_n0Oil_q_a[7] : nlOl0i;
	and(wire_n10Oi_dataout, wire_n01iO_dataout, ~((~ reset_n)));
	and(wire_n10Ol_dataout, wire_n01li_dataout, ~((~ reset_n)));
	and(wire_n10OO_dataout, wire_n01ll_dataout, ~((~ reset_n)));
	and(wire_n1i0i_dataout, wire_n01OO_dataout, ~((~ reset_n)));
	and(wire_n1i0l_dataout, wire_n001i_dataout, ~((~ reset_n)));
	and(wire_n1i0O_dataout, wire_n001l_dataout, ~((~ reset_n)));
	and(wire_n1i1i_dataout, wire_n01lO_dataout, ~((~ reset_n)));
	and(wire_n1i1l_dataout, wire_n01Oi_dataout, ~((~ reset_n)));
	and(wire_n1i1O_dataout, wire_n01Ol_dataout, ~((~ reset_n)));
	and(wire_n1iii_dataout, wire_n001O_dataout, ~((~ reset_n)));
	and(wire_n1iil_dataout, wire_n000i_dataout, ~((~ reset_n)));
	and(wire_n1iiO_dataout, wire_n000l_dataout, ~((~ reset_n)));
	and(wire_n1ili_dataout, wire_n000O_dataout, ~((~ reset_n)));
	and(wire_n1ill_dataout, wire_n00ii_dataout, ~((~ reset_n)));
	and(wire_n1ilO_dataout, wire_n00il_dataout, ~((~ reset_n)));
	and(wire_n1iOi_dataout, wire_n00iO_dataout, ~((~ reset_n)));
	and(wire_n1iOl_dataout, wire_n00li_dataout, ~((~ reset_n)));
	and(wire_n1iOO_dataout, wire_n00ll_dataout, ~((~ reset_n)));
	and(wire_n1l0i_dataout, wire_n00OO_dataout, ~((~ reset_n)));
	and(wire_n1l0l_dataout, wire_n0i1i_dataout, ~((~ reset_n)));
	and(wire_n1l0O_dataout, wire_n0i1l_dataout, ~((~ reset_n)));
	and(wire_n1l1i_dataout, wire_n00lO_dataout, ~((~ reset_n)));
	and(wire_n1l1l_dataout, wire_n00Oi_dataout, ~((~ reset_n)));
	and(wire_n1l1O_dataout, wire_n00Ol_dataout, ~((~ reset_n)));
	and(wire_n1lii_dataout, wire_n0i1O_dataout, ~((~ reset_n)));
	and(wire_n1lil_dataout, wire_n0i0i_dataout, ~((~ reset_n)));
	and(wire_n1liO_dataout, wire_n0i0l_dataout, ~((~ reset_n)));
	and(wire_n1lli_dataout, wire_n0i0O_dataout, ~((~ reset_n)));
	and(wire_n1lll_dataout, wire_n0iii_dataout, ~((~ reset_n)));
	and(wire_n1llO_dataout, wire_n0iil_dataout, ~((~ reset_n)));
	and(wire_n1lOi_dataout, wire_n0iiO_dataout, ~((~ reset_n)));
	and(wire_n1lOl_dataout, wire_n0ili_dataout, ~((~ reset_n)));
	and(wire_n1lOO_dataout, wire_n0ill_dataout, ~((~ reset_n)));
	and(wire_n1O0i_dataout, wire_n0iOO_dataout, ~((~ reset_n)));
	and(wire_n1O0l_dataout, wire_n0l1i_dataout, ~((~ reset_n)));
	and(wire_n1O0O_dataout, wire_n0l1l_dataout, ~((~ reset_n)));
	and(wire_n1O1i_dataout, wire_n0ilO_dataout, ~((~ reset_n)));
	and(wire_n1O1l_dataout, wire_n0iOi_dataout, ~((~ reset_n)));
	and(wire_n1O1O_dataout, wire_n0iOl_dataout, ~((~ reset_n)));
	and(wire_n1Oii_dataout, wire_n0l1O_dataout, ~((~ reset_n)));
	and(wire_n1Oil_dataout, wire_n0l0i_dataout, ~((~ reset_n)));
	and(wire_n1OiO_dataout, wire_n0l0l_dataout, ~((~ reset_n)));
	and(wire_n1Oli_dataout, wire_n0l0O_dataout, ~((~ reset_n)));
	and(wire_n1Oll_dataout, wire_n0lii_dataout, ~((~ reset_n)));
	and(wire_n1OlO_dataout, wire_n0lil_dataout, ~((~ reset_n)));
	and(wire_n1OOi_dataout, wire_n0liO_dataout, ~((~ reset_n)));
	and(wire_n1OOl_dataout, wire_n0lli_dataout, ~((~ reset_n)));
	and(wire_n1OOO_dataout, wire_n0lll_dataout, ~((~ reset_n)));
	and(wire_ni00i_dataout, wire_niiiO_dataout, ~((~ reset_n)));
	and(wire_ni00l_dataout, wire_niili_dataout, ~((~ reset_n)));
	and(wire_ni00O_dataout, wire_niill_dataout, ~((~ reset_n)));
	and(wire_ni01i_dataout, wire_nii0O_dataout, ~((~ reset_n)));
	and(wire_ni01l_dataout, wire_niiii_dataout, ~((~ reset_n)));
	and(wire_ni01O_dataout, wire_niiil_dataout, ~((~ reset_n)));
	and(wire_ni0ii_dataout, wire_niilO_dataout, ~((~ reset_n)));
	and(wire_ni0il_dataout, wire_niiOi_dataout, ~((~ reset_n)));
	and(wire_ni0iO_dataout, wire_niiOl_dataout, ~((~ reset_n)));
	and(wire_ni0li_dataout, wire_niiOO_dataout, ~((~ reset_n)));
	and(wire_ni0ll_dataout, wire_nil1i_dataout, ~((~ reset_n)));
	and(wire_ni0lO_dataout, wire_nil1l_dataout, ~((~ reset_n)));
	and(wire_ni0Oi_dataout, wire_nil1O_dataout, ~((~ reset_n)));
	and(wire_ni0Ol_dataout, wire_nil0i_dataout, ~((~ reset_n)));
	and(wire_ni0OO_dataout, wire_nil0l_dataout, ~((~ reset_n)));
	and(wire_ni1Ol_dataout, wire_nii0i_dataout, ~((~ reset_n)));
	and(wire_ni1OO_dataout, wire_nii0l_dataout, ~((~ reset_n)));
	assign		wire_nii0i_dataout = (clken === 1'b1) ? wire_niliO_o : niOOl;
	assign		wire_nii0l_dataout = (clken === 1'b1) ? wire_nilli_o : ni1Oi;
	assign		wire_nii0O_dataout = (clken === 1'b1) ? wire_nilll_o : ni1lO;
	and(wire_nii1i_dataout, wire_nil0O_dataout, ~((~ reset_n)));
	and(wire_nii1l_dataout, wire_nilii_dataout, ~((~ reset_n)));
	and(wire_nii1O_dataout, wire_nilil_dataout, ~((~ reset_n)));
	assign		wire_niiii_dataout = (clken === 1'b1) ? wire_nillO_o : ni1ll;
	assign		wire_niiil_dataout = (clken === 1'b1) ? wire_nilOi_o : ni1li;
	assign		wire_niiiO_dataout = (clken === 1'b1) ? wire_nilOl_o : ni1iO;
	assign		wire_niili_dataout = (clken === 1'b1) ? wire_nilOO_o : ni1il;
	assign		wire_niill_dataout = (clken === 1'b1) ? wire_niO1i_o : ni1ii;
	assign		wire_niilO_dataout = (clken === 1'b1) ? wire_niO1l_o : ni10O;
	assign		wire_niiOi_dataout = (clken === 1'b1) ? wire_niO1O_o : ni10l;
	assign		wire_niiOl_dataout = (clken === 1'b1) ? wire_niO0i_o : ni10i;
	assign		wire_niiOO_dataout = (clken === 1'b1) ? wire_niO0l_o : ni11O;
	assign		wire_nil0i_dataout = (clken === 1'b1) ? wire_niOiO_o : n0OOl;
	assign		wire_nil0l_dataout = (clken === 1'b1) ? wire_niOli_o : n0OOi;
	assign		wire_nil0O_dataout = (clken === 1'b1) ? wire_niOll_o : n0OlO;
	assign		wire_nil1i_dataout = (clken === 1'b1) ? wire_niO0O_o : ni11l;
	assign		wire_nil1l_dataout = (clken === 1'b1) ? wire_niOii_o : ni11i;
	assign		wire_nil1O_dataout = (clken === 1'b1) ? wire_niOil_o : n0OOO;
	assign		wire_nilii_dataout = (clken === 1'b1) ? wire_niOlO_o : n0Oll;
	assign		wire_nilil_dataout = (clken === 1'b1) ? wire_niOOi_o : n0Oli;
	and(wire_nl000O_dataout, wire_nl0ili_dataout, ~((~ reset_n)));
	assign		wire_nl00i_dataout = (clken === 1'b1) ? ni10i : nl0Ol;
	and(wire_nl00ii_dataout, wire_nl0ill_dataout, ~((~ reset_n)));
	and(wire_nl00il_dataout, wire_nl0ilO_dataout, ~((~ reset_n)));
	and(wire_nl00iO_dataout, wire_nl0iOi_dataout, ~((~ reset_n)));
	assign		wire_nl00l_dataout = (clken === 1'b1) ? ni11O : nl1il;
	and(wire_nl00li_dataout, wire_nl0iOl_dataout, ~((~ reset_n)));
	and(wire_nl00ll_dataout, wire_nl0iOO_dataout, ~((~ reset_n)));
	and(wire_nl00lO_dataout, wire_nl0l1i_dataout, ~((~ reset_n)));
	assign		wire_nl00O_dataout = (clken === 1'b1) ? ni11l : nl1ii;
	and(wire_nl00Oi_dataout, wire_nl0l1l_dataout, ~((~ reset_n)));
	and(wire_nl00Ol_dataout, wire_nl0l1O_dataout, ~((~ reset_n)));
	and(wire_nl00OO_dataout, wire_nl0l0i_dataout, ~((~ reset_n)));
	and(wire_nl01i_dataout, wire_nl0ll_dataout, ~((~ reset_n)));
	and(wire_nl01l_dataout, wire_nl0lO_dataout, ~((~ reset_n)));
	and(wire_nl01O_dataout, wire_nl0Oi_dataout, ~((~ reset_n)));
	and(wire_nl0i0i_dataout, wire_nl0lil_dataout, ~((~ reset_n)));
	and(wire_nl0i0l_dataout, wire_nl0liO_dataout, ~((~ reset_n)));
	and(wire_nl0i1i_dataout, wire_nl0l0l_dataout, ~((~ reset_n)));
	and(wire_nl0i1l_dataout, wire_nl0l0O_dataout, ~((~ reset_n)));
	and(wire_nl0i1O_dataout, wire_nl0lii_dataout, ~((~ reset_n)));
	assign		wire_nl0ii_dataout = (clken === 1'b1) ? ni11i : nl10O;
	assign		wire_nl0il_dataout = (clken === 1'b1) ? n0OOO : nl10l;
	assign		wire_nl0ili_dataout = (clken === 1'b1) ? nl0iii : nl01li;
	assign		wire_nl0ill_dataout = (clken === 1'b1) ? nl0iil : nl01ll;
	assign		wire_nl0ilO_dataout = (clken === 1'b1) ? nl0iiO : nl01lO;
	assign		wire_nl0iO_dataout = (clken === 1'b1) ? n0OOl : nl10i;
	assign		wire_nl0iOi_dataout = (clken === 1'b1) ? nllOii : nl01Oi;
	assign		wire_nl0iOl_dataout = (clken === 1'b1) ? nllO0O : nl01Ol;
	assign		wire_nl0iOO_dataout = (clken === 1'b1) ? nllO0l : nl01OO;
	assign		wire_nl0l0i_dataout = (clken === 1'b1) ? nl001i : nl000i;
	assign		wire_nl0l0l_dataout = (clken === 1'b1) ? nl001l : nl000l;
	assign		wire_nl0l0O_dataout = (clken === 1'b1) ? nl001O : nl0i0O;
	assign		wire_nl0l1i_dataout = (clken === 1'b1) ? nl01Oi : nl001i;
	assign		wire_nl0l1l_dataout = (clken === 1'b1) ? nl01Ol : nl001l;
	assign		wire_nl0l1O_dataout = (clken === 1'b1) ? nl01OO : nl001O;
	assign		wire_nl0li_dataout = (clken === 1'b1) ? n0OOi : nl11O;
	assign		wire_nl0lii_dataout = (clken === 1'b1) ? nl000i : nl0iii;
	assign		wire_nl0lil_dataout = (clken === 1'b1) ? nl000l : nl0iil;
	assign		wire_nl0liO_dataout = (clken === 1'b1) ? nl0i0O : nl0iiO;
	assign		wire_nl0ll_dataout = (clken === 1'b1) ? n0OlO : nl11l;
	assign		wire_nl0lO_dataout = (clken === 1'b1) ? n0Oll : nl11i;
	assign		wire_nl0Oi_dataout = (clken === 1'b1) ? n0Oli : niOOO;
	and(wire_nl1iO_dataout, wire_nl00i_dataout, ~((~ reset_n)));
	and(wire_nl1li_dataout, wire_nl00l_dataout, ~((~ reset_n)));
	and(wire_nl1ll_dataout, wire_nl00O_dataout, ~((~ reset_n)));
	and(wire_nl1lO_dataout, wire_nl0ii_dataout, ~((~ reset_n)));
	and(wire_nl1Oi_dataout, wire_nl0il_dataout, ~((~ reset_n)));
	and(wire_nl1Ol_dataout, wire_nl0iO_dataout, ~((~ reset_n)));
	and(wire_nl1OO_dataout, wire_nl0li_dataout, ~((~ reset_n)));
	and(wire_nli00i_dataout, wire_nlil0i_dataout, ~((~ reset_n)));
	and(wire_nli00l_dataout, wire_nlil0l_dataout, ~((~ reset_n)));
	and(wire_nli00O_dataout, wire_nlil0O_dataout, ~((~ reset_n)));
	and(wire_nli01i_dataout, wire_nlil1i_dataout, ~((~ reset_n)));
	and(wire_nli01l_dataout, wire_nlil1l_dataout, ~((~ reset_n)));
	and(wire_nli01O_dataout, wire_nlil1O_dataout, ~((~ reset_n)));
	and(wire_nli0ii_dataout, wire_nlilii_dataout, ~((~ reset_n)));
	and(wire_nli0il_dataout, wire_nlilil_dataout, ~((~ reset_n)));
	and(wire_nli0iO_dataout, wire_nliliO_dataout, ~((~ reset_n)));
	and(wire_nli0li_dataout, wire_nlilli_dataout, ~((~ reset_n)));
	and(wire_nli0ll_dataout, wire_nlilll_dataout, ~((~ reset_n)));
	and(wire_nli0lO_dataout, wire_nlillO_dataout, ~((~ reset_n)));
	and(wire_nli0Oi_dataout, wire_nlilOi_dataout, ~((~ reset_n)));
	and(wire_nli0Ol_dataout, wire_nlilOl_dataout, ~((~ reset_n)));
	and(wire_nli0OO_dataout, wire_nlilOO_dataout, ~((~ reset_n)));
	and(wire_nli1ll_dataout, wire_nliill_dataout, ~((~ reset_n)));
	and(wire_nli1lO_dataout, wire_nliilO_dataout, ~((~ reset_n)));
	and(wire_nli1Oi_dataout, wire_nliiOi_dataout, ~((~ reset_n)));
	and(wire_nli1Ol_dataout, wire_nliiOl_dataout, ~((~ reset_n)));
	and(wire_nli1OO_dataout, wire_nliiOO_dataout, ~((~ reset_n)));
	and(wire_nlii0i_dataout, wire_nliO0i_dataout, ~((~ reset_n)));
	and(wire_nlii0l_dataout, wire_nliO0l_dataout, ~((~ reset_n)));
	and(wire_nlii0O_dataout, wire_nliO0O_dataout, ~((~ reset_n)));
	and(wire_nlii1i_dataout, wire_nliO1i_dataout, ~((~ reset_n)));
	and(wire_nlii1l_dataout, wire_nliO1l_dataout, ~((~ reset_n)));
	and(wire_nlii1O_dataout, wire_nliO1O_dataout, ~((~ reset_n)));
	and(wire_nliiii_dataout, wire_nliOii_dataout, ~((~ reset_n)));
	and(wire_nliiil_dataout, wire_nliOil_dataout, ~((~ reset_n)));
	and(wire_nliiiO_dataout, wire_nliOiO_dataout, ~((~ reset_n)));
	and(wire_nliili_dataout, wire_nliOli_dataout, ~((~ reset_n)));
	assign		wire_nliill_dataout = (clken === 1'b1) ? wire_nl0lli_result[0] : nliOll;
	assign		wire_nliilO_dataout = (clken === 1'b1) ? wire_nl0lli_result[1] : nli1li;
	and(wire_nliiO_dataout, wire_nll0i_dataout, ~((~ reset_n)));
	assign		wire_nliiOi_dataout = (clken === 1'b1) ? wire_nl0lli_result[2] : nli1iO;
	assign		wire_nliiOl_dataout = (clken === 1'b1) ? wire_nl0lli_result[3] : nli1il;
	assign		wire_nliiOO_dataout = (clken === 1'b1) ? wire_nl0lli_result[4] : nli1ii;
	assign		wire_nlil0i_dataout = (clken === 1'b1) ? wire_nl0lli_result[8] : nli11O;
	assign		wire_nlil0l_dataout = (clken === 1'b1) ? wire_nl0lli_result[9] : nli11l;
	assign		wire_nlil0O_dataout = (clken === 1'b1) ? wire_nl0lli_result[10] : nli11i;
	assign		wire_nlil1i_dataout = (clken === 1'b1) ? wire_nl0lli_result[5] : nli10O;
	assign		wire_nlil1l_dataout = (clken === 1'b1) ? wire_nl0lli_result[6] : nli10l;
	assign		wire_nlil1O_dataout = (clken === 1'b1) ? wire_nl0lli_result[7] : nli10i;
	and(wire_nlili_dataout, wire_nll0l_dataout, ~((~ reset_n)));
	assign		wire_nlilii_dataout = (clken === 1'b1) ? wire_nl0lli_result[11] : nl0OOO;
	assign		wire_nlilil_dataout = (clken === 1'b1) ? wire_nl0lli_result[12] : nl0OOl;
	assign		wire_nliliO_dataout = (clken === 1'b1) ? wire_nl0lli_result[13] : nl0OOi;
	and(wire_nlill_dataout, wire_nll0O_dataout, ~((~ reset_n)));
	assign		wire_nlilli_dataout = (clken === 1'b1) ? wire_nl0lli_result[14] : nl0OlO;
	assign		wire_nlilll_dataout = (clken === 1'b1) ? wire_nl0lli_result[15] : nl0Oll;
	assign		wire_nlillO_dataout = (clken === 1'b1) ? wire_nl0lli_result[16] : nl0Oli;
	and(wire_nlilO_dataout, wire_nllii_dataout, ~((~ reset_n)));
	assign		wire_nlilOi_dataout = (clken === 1'b1) ? wire_nl0lli_result[17] : nl0OiO;
	assign		wire_nlilOl_dataout = (clken === 1'b1) ? wire_nl0lli_result[18] : nl0Oil;
	assign		wire_nlilOO_dataout = (clken === 1'b1) ? wire_nl0lli_result[19] : nl0Oii;
	assign		wire_nliO0i_dataout = (clken === 1'b1) ? wire_nl0lli_result[23] : nl0O1O;
	assign		wire_nliO0l_dataout = (clken === 1'b1) ? wire_nl0lli_result[24] : nl0O1l;
	assign		wire_nliO0O_dataout = (clken === 1'b1) ? wire_nl0lli_result[25] : nl0O1i;
	assign		wire_nliO1i_dataout = (clken === 1'b1) ? wire_nl0lli_result[20] : nl0O0O;
	assign		wire_nliO1l_dataout = (clken === 1'b1) ? wire_nl0lli_result[21] : nl0O0l;
	assign		wire_nliO1O_dataout = (clken === 1'b1) ? wire_nl0lli_result[22] : nl0O0i;
	and(wire_nliOi_dataout, wire_nllil_dataout, ~((~ reset_n)));
	assign		wire_nliOii_dataout = (clken === 1'b1) ? wire_nl0lli_result[26] : nl0lOO;
	assign		wire_nliOil_dataout = (clken === 1'b1) ? wire_nl0lli_result[27] : nl0lOl;
	assign		wire_nliOiO_dataout = (clken === 1'b1) ? wire_nl0lli_result[28] : nl0lOi;
	and(wire_nliOl_dataout, wire_nlliO_dataout, ~((~ reset_n)));
	assign		wire_nliOli_dataout = (clken === 1'b1) ? wire_nl0lli_result[29] : nl0llO;
	and(wire_nliOO_dataout, wire_nllli_dataout, ~((~ reset_n)));
	and(wire_nll00i_dataout, wire_nllili_dataout, ~((~ reset_n)));
	and(wire_nll00l_dataout, wire_nllill_dataout, ~((~ reset_n)));
	and(wire_nll00O_dataout, wire_nllilO_dataout, ~((~ reset_n)));
	and(wire_nll01l_dataout, wire_nlliil_dataout, ~((~ reset_n)));
	and(wire_nll01O_dataout, wire_nlliiO_dataout, ~((~ reset_n)));
	assign		wire_nll0i_dataout = (clken === 1'b1) ? niOOl : nllOl;
	or(wire_nll0ii_dataout, wire_nlliOi_dataout, (~ reset_n));
	and(wire_nll0il_dataout, wire_nlliOl_dataout, ~((~ reset_n)));
	or(wire_nll0iO_dataout, wire_nlliOO_dataout, (~ reset_n));
	assign		wire_nll0l_dataout = (clken === 1'b1) ? ni1Oi : nliil;
	or(wire_nll0li_dataout, wire_nlll1i_dataout, (~ reset_n));
	or(wire_nll0ll_dataout, wire_nlll1l_dataout, (~ reset_n));
	and(wire_nll0lO_dataout, wire_nlll1O_dataout, ~((~ reset_n)));
	assign		wire_nll0O_dataout = (clken === 1'b1) ? ni1lO : nliii;
	or(wire_nll0Oi_dataout, wire_nlll0i_dataout, (~ reset_n));
	or(wire_nll0Ol_dataout, wire_nlll0l_dataout, (~ reset_n));
	and(wire_nll0OO_dataout, wire_nlll0O_dataout, ~((~ reset_n)));
	and(wire_nll1i_dataout, wire_nllll_dataout, ~((~ reset_n)));
	and(wire_nll1l_dataout, wire_nlllO_dataout, ~((~ reset_n)));
	and(wire_nll1O_dataout, wire_nllOi_dataout, ~((~ reset_n)));
	or(wire_nlli0i_dataout, wire_nlllli_dataout, (~ reset_n));
	and(wire_nlli0l_dataout, wire_nlllll_dataout, ~((~ reset_n)));
	and(wire_nlli0O_dataout, wire_nllllO_dataout, ~((~ reset_n)));
	or(wire_nlli1i_dataout, wire_nlllii_dataout, (~ reset_n));
	and(wire_nlli1l_dataout, wire_nlllil_dataout, ~((~ reset_n)));
	or(wire_nlli1O_dataout, wire_nllliO_dataout, (~ reset_n));
	assign		wire_nllii_dataout = (clken === 1'b1) ? ni1ll : nli0O;
	or(wire_nlliii_dataout, wire_nlllOi_dataout, (~ reset_n));
	assign		wire_nlliil_dataout = (clken === 1'b1) ? wire_nlllOl_o[0] : nllO1O;
	assign		wire_nlliiO_dataout = (clken === 1'b1) ? wire_nlllOl_o[1] : nll01i;
	assign		wire_nllil_dataout = (clken === 1'b1) ? ni1li : nli0l;
	assign		wire_nllili_dataout = (clken === 1'b1) ? wire_nlllOl_o[2] : nll1OO;
	assign		wire_nllill_dataout = (clken === 1'b1) ? wire_nlllOl_o[3] : nll1Ol;
	assign		wire_nllilO_dataout = (clken === 1'b1) ? wire_nlllOl_o[4] : nll1Oi;
	assign		wire_nlliO_dataout = (clken === 1'b1) ? ni1iO : nli0i;
	assign		wire_nlliOi_dataout = (clken === 1'b1) ? ((nliOOi ^ nliOlO) ^ (nll1iO ^ nliOOO)) : nll1lO;
	assign		wire_nlliOl_dataout = (clken === 1'b1) ? nll1lO : nll1ll;
	assign		wire_nlliOO_dataout = (clken === 1'b1) ? nll1ll : nll1li;
	assign		wire_nlll0i_dataout = (clken === 1'b1) ? nll1ii : nll10O;
	assign		wire_nlll0l_dataout = (clken === 1'b1) ? nll10O : nll10l;
	assign		wire_nlll0O_dataout = (clken === 1'b1) ? nll10l : nll10i;
	assign		wire_nlll1i_dataout = (clken === 1'b1) ? nll1li : nll1iO;
	assign		wire_nlll1l_dataout = (clken === 1'b1) ? nll1iO : nll1il;
	assign		wire_nlll1O_dataout = (clken === 1'b1) ? nll1il : nll1ii;
	assign		wire_nllli_dataout = (clken === 1'b1) ? ni1il : nli1O;
	assign		wire_nlllii_dataout = (clken === 1'b1) ? nll10i : nll11O;
	assign		wire_nlllil_dataout = (clken === 1'b1) ? nll11O : nll11l;
	assign		wire_nllliO_dataout = (clken === 1'b1) ? nll11l : nll11i;
	assign		wire_nllll_dataout = (clken === 1'b1) ? ni1ii : nli1l;
	assign		wire_nlllli_dataout = (clken === 1'b1) ? nll11i : nliOOO;
	assign		wire_nlllll_dataout = (clken === 1'b1) ? nliOOO : nliOOl;
	assign		wire_nllllO_dataout = (clken === 1'b1) ? nliOOl : nliOOi;
	assign		wire_nlllO_dataout = (clken === 1'b1) ? ni10O : nli1i;
	assign		wire_nlllOi_dataout = (clken === 1'b1) ? nliOOi : nliOlO;
	assign		wire_nllOi_dataout = (clken === 1'b1) ? ni10l : nl0OO;
	and(wire_nllOOO_dataout, wire_nlO1li_dataout, ~((~ reset_n)));
	assign		wire_nlO00i_dataout = (clken === 1'b1) ? wire_nllO0i_result[14] : nllO0l;
	assign		wire_nlO01i_dataout = (clken === 1'b1) ? wire_nllO0i_result[11] : nllOil;
	assign		wire_nlO01l_dataout = (clken === 1'b1) ? wire_nllO0i_result[12] : nllOii;
	assign		wire_nlO01O_dataout = (clken === 1'b1) ? wire_nllO0i_result[13] : nllO0O;
	and(wire_nlO0ll_dataout, wire_nlOi1O_dataout, ~((~ reset_n)));
	and(wire_nlO0lO_dataout, wire_nlOi0i_dataout, ~((~ reset_n)));
	and(wire_nlO0Oi_dataout, wire_nlOi0l_dataout, ~((~ reset_n)));
	and(wire_nlO0Ol_dataout, wire_nlOi0O_dataout, ~((~ reset_n)));
	and(wire_nlO0OO_dataout, wire_nlOiii_dataout, ~((~ reset_n)));
	and(wire_nlO10i_dataout, wire_nlO1Ol_dataout, ~((~ reset_n)));
	and(wire_nlO10l_dataout, wire_nlO1OO_dataout, ~((~ reset_n)));
	and(wire_nlO10O_dataout, wire_nlO01i_dataout, ~((~ reset_n)));
	and(wire_nlO11i_dataout, wire_nlO1ll_dataout, ~((~ reset_n)));
	and(wire_nlO11l_dataout, wire_nlO1lO_dataout, ~((~ reset_n)));
	and(wire_nlO11O_dataout, wire_nlO1Oi_dataout, ~((~ reset_n)));
	and(wire_nlO1ii_dataout, wire_nlO01l_dataout, ~((~ reset_n)));
	and(wire_nlO1il_dataout, wire_nlO01O_dataout, ~((~ reset_n)));
	and(wire_nlO1iO_dataout, wire_nlO00i_dataout, ~((~ reset_n)));
	and(wire_nlO1l_dataout, wire_nlO1O_dataout, ~((~ reset_n)));
	assign		wire_nlO1li_dataout = (clken === 1'b1) ? wire_nllO0i_result[5] : nllOOl;
	assign		wire_nlO1ll_dataout = (clken === 1'b1) ? wire_nllO0i_result[6] : nllOOi;
	assign		wire_nlO1lO_dataout = (clken === 1'b1) ? wire_nllO0i_result[7] : nllOlO;
	or(wire_nlO1O_dataout, nlO0O, (clken & ((((wire_nllOO_q[1] & wire_nllOO_q[3]) & (~ wire_nllOO_q[0])) & (~ wire_nllOO_q[2])) & (nl010i4 ^ nl010i3))));
	assign		wire_nlO1Oi_dataout = (clken === 1'b1) ? wire_nllO0i_result[8] : nllOll;
	assign		wire_nlO1Ol_dataout = (clken === 1'b1) ? wire_nllO0i_result[9] : nllOli;
	assign		wire_nlO1OO_dataout = (clken === 1'b1) ? wire_nllO0i_result[10] : nllOiO;
	assign		wire_nlOi0i_dataout = (clken === 1'b1) ? wire_nlOill_dataout : nlO0li;
	assign		wire_nlOi0l_dataout = (clken === 1'b1) ? wire_nlOilO_dataout : nlO0iO;
	assign		wire_nlOi0O_dataout = (clken === 1'b1) ? wire_nlOiOi_dataout : nlO0il;
	and(wire_nlOi1i_dataout, wire_nlOiil_dataout, ~((~ reset_n)));
	and(wire_nlOi1l_dataout, wire_nlOiiO_dataout, ~((~ reset_n)));
	assign		wire_nlOi1O_dataout = (clken === 1'b1) ? wire_nlOili_dataout : nlOl1l;
	assign		wire_nlOiii_dataout = (clken === 1'b1) ? wire_nlOiOl_dataout : nlO0ii;
	assign		wire_nlOiil_dataout = (clken === 1'b1) ? wire_nlOiOO_dataout : nlO00O;
	assign		wire_nlOiiO_dataout = (clken === 1'b1) ? wire_nlOl1i_dataout : nlO00l;
	assign		wire_nlOili_dataout = ((~ nllOii) === 1'b1) ? nllOOl : (~ nllOOl);
	assign		wire_nlOill_dataout = ((~ nllOii) === 1'b1) ? nllOOi : (~ nllOOi);
	assign		wire_nlOilO_dataout = ((~ nllOii) === 1'b1) ? nllOlO : (~ nllOlO);
	assign		wire_nlOiOi_dataout = ((~ nllOii) === 1'b1) ? nllOll : (~ nllOll);
	assign		wire_nlOiOl_dataout = ((~ nllOii) === 1'b1) ? nllOli : (~ nllOli);
	assign		wire_nlOiOO_dataout = ((~ nllOii) === 1'b1) ? nllOiO : (~ nllOiO);
	assign		wire_nlOl1i_dataout = ((~ nllOii) === 1'b1) ? nllOil : (~ nllOil);
	oper_add   n0O0l
	( 
	.a({1'b0, (~ nlOllO), (~ nlOlOi), (~ nlOlOl), (~ nlOlOO), (~ nlOO1i), (~ nlOO1l), (~ nlOO1O), (~ nlOO0i), (~ nlOO0l)}),
	.b({{9{1'b0}}, 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_n0O0l_o));
	defparam
		n0O0l.sgate_representation = 0,
		n0O0l.width_a = 10,
		n0O0l.width_b = 10,
		n0O0l.width_o = 10;
	oper_add   n0O0O
	( 
	.a({1'b0, (~ nlOl1O), (~ nlOl0i), (~ nlOl0l), (~ nlOl0O), (~ nlOlii), (~ nlOlil), (~ nlOliO), (~ nlOlli), (~ nlOlll)}),
	.b({{9{1'b0}}, 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_n0O0O_o));
	defparam
		n0O0O.sgate_representation = 0,
		n0O0O.width_a = 10,
		n0O0O.width_b = 10,
		n0O0O.width_o = 10;
	oper_add   nlllOl
	( 
	.a({nliOlO, nliOOi, nliOOl, nliOOO, nll11i}),
	.b({{4{1'b0}}, nliOlO}),
	.cin(1'b0),
	.cout(),
	.o(wire_nlllOl_o));
	defparam
		nlllOl.sgate_representation = 0,
		nlllOl.width_a = 5,
		nlllOl.width_b = 5,
		nlllOl.width_o = 5;
	oper_mux   niliO
	( 
	.data({n0Oii, n100i, nlOOOO, {2{n11li}}, nlOOOO, n100i, n0Oii}),
	.o(wire_niliO_o),
	.sel({nl01lO, nl01ll, nl01li}));
	defparam
		niliO.width_data = 8,
		niliO.width_sel = 3;
	oper_mux   nilli
	( 
	.data({n10lO, n101O, nlOOOl, {2{n11iO}}, nlOOOl, n101O, n10lO}),
	.o(wire_nilli_o),
	.sel({nl01lO, nl01ll, nl01li}));
	defparam
		nilli.width_data = 8,
		nilli.width_sel = 3;
	oper_mux   nilll
	( 
	.data({n10ll, n101l, nlOOOi, {2{n11il}}, nlOOOi, n101l, n10ll}),
	.o(wire_nilll_o),
	.sel({nl01lO, nl01ll, nl01li}));
	defparam
		nilll.width_data = 8,
		nilll.width_sel = 3;
	oper_mux   nillO
	( 
	.data({n10li, n101i, nlOOlO, {2{n11ii}}, nlOOlO, n101i, n10li}),
	.o(wire_nillO_o),
	.sel({nl01lO, nl01ll, nl01li}));
	defparam
		nillO.width_data = 8,
		nillO.width_sel = 3;
	oper_mux   nilOi
	( 
	.data({n10iO, n11OO, nlOOll, {2{n110O}}, nlOOll, n11OO, n10iO}),
	.o(wire_nilOi_o),
	.sel({nl01lO, nl01ll, nl01li}));
	defparam
		nilOi.width_data = 8,
		nilOi.width_sel = 3;
	oper_mux   nilOl
	( 
	.data({n10il, n11Ol, nlOOli, {2{n110l}}, nlOOli, n11Ol, n10il}),
	.o(wire_nilOl_o),
	.sel({nl01lO, nl01ll, nl01li}));
	defparam
		nilOl.width_data = 8,
		nilOl.width_sel = 3;
	oper_mux   nilOO
	( 
	.data({n10ii, n11Oi, nlOOiO, {2{n110i}}, nlOOiO, n11Oi, n10ii}),
	.o(wire_nilOO_o),
	.sel({nl01lO, nl01ll, nl01li}));
	defparam
		nilOO.width_data = 8,
		nilOO.width_sel = 3;
	oper_mux   niO0i
	( 
	.data({nlOOOO, {2{n11li}}, nlOOOO, n100i, {2{n0Oii}}, n100i}),
	.o(wire_niO0i_o),
	.sel({nl01lO, nl01ll, nl01li}));
	defparam
		niO0i.width_data = 8,
		niO0i.width_sel = 3;
	oper_mux   niO0l
	( 
	.data({nlOOOl, n11iO, ((nl1lOO42 ^ nl1lOO41) & n11iO), ((nl1O1i40 ^ nl1O1i39) & nlOOOl), n101O, {2{n10lO}}, n101O}),
	.o(wire_niO0l_o),
	.sel({nl01lO, nl01ll, nl01li}));
	defparam
		niO0l.width_data = 8,
		niO0l.width_sel = 3;
	oper_mux   niO0O
	( 
	.data({nlOOOi, {2{n11il}}, ((nl1O1l38 ^ nl1O1l37) & nlOOOi), n101l, {2{n10ll}}, n101l}),
	.o(wire_niO0O_o),
	.sel({nl01lO, ((nl1O1O36 ^ nl1O1O35) & nl01ll), nl01li}));
	defparam
		niO0O.width_data = 8,
		niO0O.width_sel = 3;
	oper_mux   niO1i
	( 
	.data({n100O, n11lO, nlOOil, {2{n111O}}, nlOOil, n11lO, n100O}),
	.o(wire_niO1i_o),
	.sel({nl01lO, nl01ll, nl01li}));
	defparam
		niO1i.width_data = 8,
		niO1i.width_sel = 3;
	oper_mux   niO1l
	( 
	.data({n100l, n11ll, nlOOii, {2{n111l}}, nlOOii, n11ll, n100l}),
	.o(wire_niO1l_o),
	.sel({nl01lO, nl01ll, nl01li}));
	defparam
		niO1l.width_data = 8,
		niO1l.width_sel = 3;
	oper_mux   niO1O
	( 
	.data({{2{1'b0}}, nlOO0O, {2{n111i}}, nlOO0O, {2{1'b0}}}),
	.o(wire_niO1O_o),
	.sel({nl01lO, nl01ll, nl01li}));
	defparam
		niO1O.width_data = 8,
		niO1O.width_sel = 3;
	oper_mux   niOii
	( 
	.data({nlOOlO, ((nl1O0i34 ^ nl1O0i33) & n11ii), n11ii, ((nl1O0l32 ^ nl1O0l31) & nlOOlO), n101i, ((nl1O0O30 ^ nl1O0O29) & n10li), n10li, n101i}),
	.o(wire_niOii_o),
	.sel({nl01lO, ((nl1Oii28 ^ nl1Oii27) & nl01ll), nl01li}));
	defparam
		niOii.width_data = 8,
		niOii.width_sel = 3;
	oper_mux   niOil
	( 
	.data({nlOOll, {2{n110O}}, nlOOll, n11OO, {2{n10iO}}, n11OO}),
	.o(wire_niOil_o),
	.sel({nl01lO, nl01ll, ((nl1Oil26 ^ nl1Oil25) & nl01li)}));
	defparam
		niOil.width_data = 8,
		niOil.width_sel = 3;
	oper_mux   niOiO
	( 
	.data({nlOOli, n110l, ((nl1OiO24 ^ nl1OiO23) & n110l), nlOOli, n11Ol, {2{n10il}}, ((nl1Oli22 ^ nl1Oli21) & n11Ol)}),
	.o(wire_niOiO_o),
	.sel({nl01lO, nl01ll, ((nl1Oll20 ^ nl1Oll19) & nl01li)}));
	defparam
		niOiO.width_data = 8,
		niOiO.width_sel = 3;
	oper_mux   niOli
	( 
	.data({nlOOiO, {2{n110i}}, nlOOiO, n11Oi, {2{n10ii}}, n11Oi}),
	.o(wire_niOli_o),
	.sel({((nl1OlO18 ^ nl1OlO17) & nl01lO), nl01ll, nl01li}));
	defparam
		niOli.width_data = 8,
		niOli.width_sel = 3;
	oper_mux   niOll
	( 
	.data({((nl1OOi16 ^ nl1OOi15) & nlOOil), {2{n111O}}, nlOOil, ((nl1OOl14 ^ nl1OOl13) & n11lO), {2{n100O}}, n11lO}),
	.o(wire_niOll_o),
	.sel({((nl1OOO12 ^ nl1OOO11) & nl01lO), nl01ll, nl01li}));
	defparam
		niOll.width_data = 8,
		niOll.width_sel = 3;
	oper_mux   niOlO
	( 
	.data({((nl011i10 ^ nl011i9) & nlOOii), {2{n111l}}, nlOOii, n11ll, {2{n100l}}, ((nl011l8 ^ nl011l7) & n11ll)}),
	.o(wire_niOlO_o),
	.sel({nl01lO, nl01ll, nl01li}));
	defparam
		niOlO.width_data = 8,
		niOlO.width_sel = 3;
	oper_mux   niOOi
	( 
	.data({nlOO0O, {2{n111i}}, nlOO0O, {4{1'b0}}}),
	.o(wire_niOOi_o),
	.sel({((nl011O6 ^ nl011O5) & nl01lO), nl01ll, nl01li}));
	defparam
		niOOi.width_data = 8,
		niOOi.width_sel = 3;
	assign
		fcos_o = {nl0OO, nli1i, nli1l, nli1O, nli0i, nli0l, nli0O, nliii, nliil, nllOl},
		fsin_o = {niOOO, nl11i, nl11l, nl11O, nl10i, nl10l, nl10O, nl1ii, nl1il, nl0Ol},
		nl01ii = 1'b1,
		out_valid = nlO0O;
endmodule //nco
//synopsys translate_on
//VALID FILE
