//IP Functional Simulation Model
//VERSION_BEGIN 12.1 cbx_mgl 2012:11:07:18:06:30:SJ cbx_simgen 2012:11:07:18:03:51:SJ  VERSION_END
// synthesis VERILOG_INPUT_VERSION VERILOG_2001
// altera message_off 10463



// Copyright (C) 1991-2012 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// You may only use these simulation model output files for simulation
// purposes and expressly not for synthesis or any other purposes (in which
// event Altera disclaims all warranties of any kind).


//synopsys translate_off

//synthesis_resources = altsyncram 2 lpm_add_sub 2 lpm_counter 1 lut 282 mux21 492 oper_add 3 oper_mux 30 
`timescale 1 ps / 1 ps
module  nco
	( 
	clk,
	clken,
	fcos_o,
	fsin_o,
	out_valid,
	phi_inc_i,
	reset_n) /* synthesis synthesis_clearbox=1 */;
	input   clk;
	input   clken;
	output   [14:0]  fcos_o;
	output   [14:0]  fsin_o;
	output   out_valid;
	input   [29:0]  phi_inc_i;
	input   reset_n;

	wire  [13:0]   wire_n000i_q_a;
	wire  [13:0]   wire_n001O_q_a;
	reg	nili0l41;
	reg	nili0l42;
	reg	nili0O39;
	reg	nili0O40;
	reg	niliii37;
	reg	niliii38;
	reg	niliil35;
	reg	niliil36;
	reg	niliiO33;
	reg	niliiO34;
	reg	nilili31;
	reg	nilili32;
	reg	nilill29;
	reg	nilill30;
	reg	nililO27;
	reg	nililO28;
	reg	niliOi25;
	reg	niliOi26;
	reg	niliOl23;
	reg	niliOl24;
	reg	niliOO21;
	reg	niliOO22;
	reg	nill0i13;
	reg	nill0i14;
	reg	nill0l11;
	reg	nill0l12;
	reg	nill0O10;
	reg	nill0O9;
	reg	nill1i19;
	reg	nill1i20;
	reg	nill1l17;
	reg	nill1l18;
	reg	nill1O15;
	reg	nill1O16;
	reg	nillii7;
	reg	nillii8;
	reg	nillil5;
	reg	nillil6;
	reg	nillli3;
	reg	nillli4;
	reg	nillOO1;
	reg	nillOO2;
	reg	n000l;
	reg	n000O;
	reg	n001l;
	reg	n00ii;
	reg	n00il;
	reg	n00iO;
	reg	n00li;
	reg	n00ll;
	reg	n00lO;
	reg	n00Oi;
	reg	n00Ol;
	reg	n00OO;
	reg	n0i0i;
	reg	n0i0l;
	reg	n0i0O;
	reg	n0i1i;
	reg	n0i1l;
	reg	n0i1O;
	reg	n0iii;
	reg	n0iil;
	reg	n0iiO;
	reg	n0ili;
	reg	n0ill;
	reg	n0ilO;
	reg	n0iOi;
	reg	n0iOl;
	reg	n0iOO;
	reg	n0l1i;
	reg	n0l1l;
	reg	n0l1O;
	reg	n10i;
	reg	n1ll;
	reg	nilO0i;
	reg	nilO0l;
	reg	nilO0O;
	reg	nilO1i;
	reg	nilO1l;
	reg	nilO1O;
	reg	nilOii;
	reg	nilOil;
	reg	nilOiO;
	reg	nilOli;
	reg	nilOll;
	reg	niO0i;
	reg	niO0l;
	reg	niO0O;
	reg	niO1lO;
	reg	niO1Oi;
	reg	niO1Ol;
	reg	niO1OO;
	reg	niOi0i;
	reg	niOi0l;
	reg	niOi0O;
	reg	niOi1l;
	reg	niOi1O;
	reg	niOii;
	reg	niOiii;
	reg	niOiil;
	reg	niOiiO;
	reg	niOil;
	reg	niOili;
	reg	niOill;
	reg	niOilO;
	reg	niOiO;
	reg	niOiOi;
	reg	niOiOl;
	reg	niOiOO;
	reg	niOl0i;
	reg	niOl0l;
	reg	niOl0O;
	reg	niOl1i;
	reg	niOl1l;
	reg	niOl1O;
	reg	niOli;
	reg	niOlii;
	reg	niOlil;
	reg	niOliO;
	reg	niOll;
	reg	niOlli;
	reg	niOlll;
	reg	niOllO;
	reg	niOlO;
	reg	niOlOi;
	reg	niOlOl;
	reg	niOlOO;
	reg	niOOi;
	reg	niOOl;
	reg	niOOO;
	reg	nl0iil;
	reg	nl0ili;
	reg	nl0ill;
	reg	nl0ilO;
	reg	nl0iOi;
	reg	nl0iOl;
	reg	nl0iOO;
	reg	nl0l0i;
	reg	nl0l0l;
	reg	nl0l0O;
	reg	nl0l1i;
	reg	nl0l1l;
	reg	nl0l1O;
	reg	nl0lii;
	reg	nl0lil;
	reg	nl0liO;
	reg	nl11i;
	reg	nl11l;
	reg	nl11O;
	reg	nl1l0i;
	reg	nl1l0l;
	reg	nl1l0O;
	reg	nl1l1i;
	reg	nl1l1l;
	reg	nl1l1O;
	reg	nl1lii;
	reg	nl1lil;
	reg	nl1liO;
	reg	nl1lli;
	reg	nl1lll;
	reg	nl1llO;
	reg	nl1lOi;
	reg	nl1lOl;
	reg	nl1lOO;
	reg	nl1O0i;
	reg	nl1O0l;
	reg	nl1O0O;
	reg	nl1O1i;
	reg	nl1O1l;
	reg	nl1O1O;
	reg	nli00i;
	reg	nli00l;
	reg	nli01i;
	reg	nli01l;
	reg	nli01O;
	reg	nli0i;
	reg	nli0l;
	reg	nli0O;
	reg	nli1li;
	reg	nli1ll;
	reg	nli1lO;
	reg	nli1Oi;
	reg	nli1Ol;
	reg	nli1OO;
	reg	nliii;
	reg	nliil;
	reg	nliiO;
	reg	nlili;
	reg	nlill;
	reg	nlillO;
	reg	nlilO;
	reg	nlilOi;
	reg	nlilOl;
	reg	nlilOO;
	reg	nliO0i;
	reg	nliO0l;
	reg	nliO0O;
	reg	nliO1i;
	reg	nliO1l;
	reg	nliO1O;
	reg	nliOi;
	reg	nliOii;
	reg	nliOil;
	reg	nliOiO;
	reg	nliOl;
	reg	nliOli;
	reg	nliOll;
	reg	nliOlO;
	reg	nliOO;
	reg	nliOOi;
	reg	nliOOl;
	reg	nliOOO;
	reg	nll00i;
	reg	nll00l;
	reg	nll00O;
	reg	nll01i;
	reg	nll01l;
	reg	nll01O;
	reg	nll0ii;
	reg	nll0il;
	reg	nll0iO;
	reg	nll0li;
	reg	nll0ll;
	reg	nll0lO;
	reg	nll0Oi;
	reg	nll0Ol;
	reg	nll0OO;
	reg	nll10i;
	reg	nll10l;
	reg	nll10O;
	reg	nll11i;
	reg	nll11l;
	reg	nll11O;
	reg	nll1i;
	reg	nll1ii;
	reg	nll1il;
	reg	nll1iO;
	reg	nll1l;
	reg	nll1li;
	reg	nll1ll;
	reg	nll1lO;
	reg	nll1O;
	reg	nll1Oi;
	reg	nll1Ol;
	reg	nll1OO;
	reg	nlli0i;
	reg	nlli0l;
	reg	nlli0O;
	reg	nlli1i;
	reg	nlli1l;
	reg	nlli1O;
	reg	nlliii;
	reg	nlliil;
	reg	nlliiO;
	reg	nllili;
	reg	nllill;
	reg	nllilO;
	reg	nlliOi;
	reg	nlliOl;
	reg	nlliOO;
	reg	nlll0i;
	reg	nlll0l;
	reg	nlll0O;
	reg	nlll1i;
	reg	nlll1l;
	reg	nlll1O;
	reg	nlllii;
	reg	nlllil;
	reg	nllliO;
	reg	nlllli;
	reg	nlllll;
	reg	nllllO;
	reg	nlllOi;
	reg	nlllOl;
	reg	nlllOO;
	reg	nllO0i;
	reg	nllO0l;
	reg	nllO0O;
	reg	nllO1i;
	reg	nllO1l;
	reg	nllO1O;
	reg	nllOii;
	wire	wire_n1li_CLRN;
	wire  [29:0]   wire_niOi1i_result;
	wire  [19:0]   wire_nl0iiO_result;
	wire  [3:0]   wire_n10l_q;
	wire	wire_n010i_dataout;
	wire	wire_n010l_dataout;
	wire	wire_n010O_dataout;
	wire	wire_n011i_dataout;
	wire	wire_n011l_dataout;
	wire	wire_n011O_dataout;
	wire	wire_n01ii_dataout;
	wire	wire_n01il_dataout;
	wire	wire_n01iO_dataout;
	wire	wire_n01li_dataout;
	wire	wire_n01ll_dataout;
	wire	wire_n01lO_dataout;
	wire	wire_n01Oi_dataout;
	wire	wire_n01Ol_dataout;
	wire	wire_n0l0i_dataout;
	wire	wire_n0l0l_dataout;
	wire	wire_n0l0O_dataout;
	wire	wire_n0lii_dataout;
	wire	wire_n0lil_dataout;
	wire	wire_n0liO_dataout;
	wire	wire_n0lli_dataout;
	wire	wire_n0lll_dataout;
	wire	wire_n0llO_dataout;
	wire	wire_n0lOi_dataout;
	wire	wire_n0lOl_dataout;
	wire	wire_n0lOO_dataout;
	wire	wire_n0O0i_dataout;
	wire	wire_n0O0l_dataout;
	wire	wire_n0O0O_dataout;
	wire	wire_n0O1i_dataout;
	wire	wire_n0O1l_dataout;
	wire	wire_n0O1O_dataout;
	wire	wire_n0Oii_dataout;
	wire	wire_n0Oil_dataout;
	wire	wire_n0OiO_dataout;
	wire	wire_n0Oli_dataout;
	wire	wire_n0Oll_dataout;
	wire	wire_n0OlO_dataout;
	wire	wire_n0OOi_dataout;
	wire	wire_n0OOl_dataout;
	wire	wire_n0OOO_dataout;
	wire	wire_n100i_dataout;
	wire	wire_n100l_dataout;
	wire	wire_n100O_dataout;
	wire	wire_n101i_dataout;
	wire	wire_n101l_dataout;
	wire	wire_n101O_dataout;
	wire	wire_n10ii_dataout;
	wire	wire_n10il_dataout;
	wire	wire_n10iO_dataout;
	wire	wire_n10li_dataout;
	wire	wire_n10ll_dataout;
	wire	wire_n10lO_dataout;
	wire	wire_n10Oi_dataout;
	wire	wire_n10Ol_dataout;
	wire	wire_n10OO_dataout;
	wire	wire_n110i_dataout;
	wire	wire_n110l_dataout;
	wire	wire_n110O_dataout;
	wire	wire_n111i_dataout;
	wire	wire_n111l_dataout;
	wire	wire_n111O_dataout;
	wire	wire_n11i_dataout;
	wire	wire_n11ii_dataout;
	wire	wire_n11il_dataout;
	wire	wire_n11iO_dataout;
	wire	wire_n11l_dataout;
	wire	wire_n11li_dataout;
	wire	wire_n11ll_dataout;
	wire	wire_n11lO_dataout;
	wire	wire_n11O_dataout;
	wire	wire_n11Oi_dataout;
	wire	wire_n11Ol_dataout;
	wire	wire_n11OO_dataout;
	wire	wire_n1i0i_dataout;
	wire	wire_n1i0l_dataout;
	wire	wire_n1i0O_dataout;
	wire	wire_n1i1i_dataout;
	wire	wire_n1i1l_dataout;
	wire	wire_n1i1O_dataout;
	wire	wire_n1ii_dataout;
	wire	wire_n1iii_dataout;
	wire	wire_n1iil_dataout;
	wire	wire_n1iiO_dataout;
	wire	wire_n1il_dataout;
	wire	wire_n1ili_dataout;
	wire	wire_n1ill_dataout;
	wire	wire_n1ilO_dataout;
	wire	wire_n1iOi_dataout;
	wire	wire_n1iOl_dataout;
	wire	wire_n1iOO_dataout;
	wire	wire_n1l0i_dataout;
	wire	wire_n1l0l_dataout;
	wire	wire_n1l0O_dataout;
	wire	wire_n1l1i_dataout;
	wire	wire_n1l1l_dataout;
	wire	wire_n1l1O_dataout;
	wire	wire_n1lii_dataout;
	wire	wire_n1lil_dataout;
	wire	wire_n1liO_dataout;
	wire	wire_n1lli_dataout;
	wire	wire_n1lll_dataout;
	wire	wire_n1llO_dataout;
	wire	wire_n1lOi_dataout;
	wire	wire_n1lOl_dataout;
	wire	wire_n1lOO_dataout;
	wire	wire_n1O0i_dataout;
	wire	wire_n1O0l_dataout;
	wire	wire_n1O0O_dataout;
	wire	wire_n1O1i_dataout;
	wire	wire_n1O1l_dataout;
	wire	wire_n1O1O_dataout;
	wire	wire_n1Oii_dataout;
	wire	wire_n1Oil_dataout;
	wire	wire_n1OiO_dataout;
	wire	wire_n1Oli_dataout;
	wire	wire_n1Oll_dataout;
	wire	wire_n1OlO_dataout;
	wire	wire_n1OOi_dataout;
	wire	wire_n1OOl_dataout;
	wire	wire_n1OOO_dataout;
	wire	wire_ni00i_dataout;
	wire	wire_ni00l_dataout;
	wire	wire_ni00O_dataout;
	wire	wire_ni01i_dataout;
	wire	wire_ni01l_dataout;
	wire	wire_ni01O_dataout;
	wire	wire_ni0ii_dataout;
	wire	wire_ni0il_dataout;
	wire	wire_ni0iO_dataout;
	wire	wire_ni0li_dataout;
	wire	wire_ni0ll_dataout;
	wire	wire_ni0lO_dataout;
	wire	wire_ni0Oi_dataout;
	wire	wire_ni0Ol_dataout;
	wire	wire_ni0OO_dataout;
	wire	wire_ni10i_dataout;
	wire	wire_ni10l_dataout;
	wire	wire_ni10O_dataout;
	wire	wire_ni11i_dataout;
	wire	wire_ni11l_dataout;
	wire	wire_ni11O_dataout;
	wire	wire_ni1ii_dataout;
	wire	wire_ni1il_dataout;
	wire	wire_ni1iO_dataout;
	wire	wire_ni1li_dataout;
	wire	wire_ni1ll_dataout;
	wire	wire_ni1lO_dataout;
	wire	wire_ni1Oi_dataout;
	wire	wire_ni1Ol_dataout;
	wire	wire_ni1OO_dataout;
	wire	wire_nii1i_dataout;
	wire	wire_nii1l_dataout;
	wire	wire_nii1O_dataout;
	wire	wire_nilOlO_dataout;
	wire	wire_nilOOi_dataout;
	wire	wire_nilOOl_dataout;
	wire	wire_nilOOO_dataout;
	wire	wire_niO00i_dataout;
	wire	wire_niO00l_dataout;
	wire	wire_niO00O_dataout;
	wire	wire_niO01i_dataout;
	wire	wire_niO01l_dataout;
	wire	wire_niO01O_dataout;
	wire	wire_niO0ii_dataout;
	wire	wire_niO0il_dataout;
	wire	wire_niO0iO_dataout;
	wire	wire_niO0li_dataout;
	wire	wire_niO0ll_dataout;
	wire	wire_niO0lO_dataout;
	wire	wire_niO0Oi_dataout;
	wire	wire_niO0Ol_dataout;
	wire	wire_niO0OO_dataout;
	wire	wire_niO10i_dataout;
	wire	wire_niO10l_dataout;
	wire	wire_niO10O_dataout;
	wire	wire_niO11i_dataout;
	wire	wire_niO11l_dataout;
	wire	wire_niO11O_dataout;
	wire	wire_niO1ii_dataout;
	wire	wire_niO1il_dataout;
	wire	wire_niO1iO_dataout;
	wire	wire_niO1li_dataout;
	wire	wire_niO1ll_dataout;
	wire	wire_niOO0i_dataout;
	wire	wire_niOO0l_dataout;
	wire	wire_niOO0O_dataout;
	wire	wire_niOO1i_dataout;
	wire	wire_niOO1l_dataout;
	wire	wire_niOO1O_dataout;
	wire	wire_niOOii_dataout;
	wire	wire_niOOil_dataout;
	wire	wire_niOOiO_dataout;
	wire	wire_niOOli_dataout;
	wire	wire_niOOll_dataout;
	wire	wire_niOOlO_dataout;
	wire	wire_niOOOi_dataout;
	wire	wire_niOOOl_dataout;
	wire	wire_niOOOO_dataout;
	wire	wire_nl000i_dataout;
	wire	wire_nl000l_dataout;
	wire	wire_nl000O_dataout;
	wire	wire_nl001i_dataout;
	wire	wire_nl001l_dataout;
	wire	wire_nl001O_dataout;
	wire	wire_nl00i_dataout;
	wire	wire_nl00ii_dataout;
	wire	wire_nl00il_dataout;
	wire	wire_nl00iO_dataout;
	wire	wire_nl00l_dataout;
	wire	wire_nl00li_dataout;
	wire	wire_nl00ll_dataout;
	wire	wire_nl00lO_dataout;
	wire	wire_nl00O_dataout;
	wire	wire_nl00Oi_dataout;
	wire	wire_nl00Ol_dataout;
	wire	wire_nl00OO_dataout;
	wire	wire_nl010i_dataout;
	wire	wire_nl010l_dataout;
	wire	wire_nl010O_dataout;
	wire	wire_nl011i_dataout;
	wire	wire_nl011l_dataout;
	wire	wire_nl011O_dataout;
	wire	wire_nl01i_dataout;
	wire	wire_nl01ii_dataout;
	wire	wire_nl01il_dataout;
	wire	wire_nl01iO_dataout;
	wire	wire_nl01l_dataout;
	wire	wire_nl01li_dataout;
	wire	wire_nl01ll_dataout;
	wire	wire_nl01lO_dataout;
	wire	wire_nl01O_dataout;
	wire	wire_nl01Oi_dataout;
	wire	wire_nl01Ol_dataout;
	wire	wire_nl01OO_dataout;
	wire	wire_nl0i1i_dataout;
	wire	wire_nl0i1l_dataout;
	wire	wire_nl0i1O_dataout;
	wire	wire_nl0ii_dataout;
	wire	wire_nl0il_dataout;
	wire	wire_nl0iO_dataout;
	wire	wire_nl0li_dataout;
	wire	wire_nl0ll_dataout;
	wire	wire_nl0lli_dataout;
	wire	wire_nl0lll_dataout;
	wire	wire_nl0llO_dataout;
	wire	wire_nl0lO_dataout;
	wire	wire_nl0lOi_dataout;
	wire	wire_nl0lOl_dataout;
	wire	wire_nl0lOO_dataout;
	wire	wire_nl0O0i_dataout;
	wire	wire_nl0O0l_dataout;
	wire	wire_nl0O0O_dataout;
	wire	wire_nl0O1i_dataout;
	wire	wire_nl0O1l_dataout;
	wire	wire_nl0O1O_dataout;
	wire	wire_nl0Oi_dataout;
	wire	wire_nl0Oii_dataout;
	wire	wire_nl0Oil_dataout;
	wire	wire_nl0OiO_dataout;
	wire	wire_nl0Ol_dataout;
	wire	wire_nl0Oli_dataout;
	wire	wire_nl0Oll_dataout;
	wire	wire_nl0OlO_dataout;
	wire	wire_nl0OO_dataout;
	wire	wire_nl0OOi_dataout;
	wire	wire_nl0OOl_dataout;
	wire	wire_nl0OOO_dataout;
	wire	wire_nl100i_dataout;
	wire	wire_nl100l_dataout;
	wire	wire_nl100O_dataout;
	wire	wire_nl101i_dataout;
	wire	wire_nl101l_dataout;
	wire	wire_nl101O_dataout;
	wire	wire_nl10i_dataout;
	wire	wire_nl10ii_dataout;
	wire	wire_nl10il_dataout;
	wire	wire_nl10iO_dataout;
	wire	wire_nl10l_dataout;
	wire	wire_nl10li_dataout;
	wire	wire_nl10ll_dataout;
	wire	wire_nl10lO_dataout;
	wire	wire_nl10O_dataout;
	wire	wire_nl10Oi_dataout;
	wire	wire_nl10Ol_dataout;
	wire	wire_nl10OO_dataout;
	wire	wire_nl110i_dataout;
	wire	wire_nl110l_dataout;
	wire	wire_nl110O_dataout;
	wire	wire_nl111i_dataout;
	wire	wire_nl111l_dataout;
	wire	wire_nl111O_dataout;
	wire	wire_nl11ii_dataout;
	wire	wire_nl11il_dataout;
	wire	wire_nl11iO_dataout;
	wire	wire_nl11li_dataout;
	wire	wire_nl11ll_dataout;
	wire	wire_nl11lO_dataout;
	wire	wire_nl11Oi_dataout;
	wire	wire_nl11Ol_dataout;
	wire	wire_nl11OO_dataout;
	wire	wire_nl1i0i_dataout;
	wire	wire_nl1i0l_dataout;
	wire	wire_nl1i0O_dataout;
	wire	wire_nl1i1i_dataout;
	wire	wire_nl1i1l_dataout;
	wire	wire_nl1i1O_dataout;
	wire	wire_nl1ii_dataout;
	wire	wire_nl1iii_dataout;
	wire	wire_nl1iil_dataout;
	wire	wire_nl1iiO_dataout;
	wire	wire_nl1il_dataout;
	wire	wire_nl1ili_dataout;
	wire	wire_nl1ill_dataout;
	wire	wire_nl1ilO_dataout;
	wire	wire_nl1iO_dataout;
	wire	wire_nl1iOi_dataout;
	wire	wire_nl1iOl_dataout;
	wire	wire_nl1iOO_dataout;
	wire	wire_nl1li_dataout;
	wire	wire_nl1ll_dataout;
	wire	wire_nl1lO_dataout;
	wire	wire_nl1Oi_dataout;
	wire	wire_nl1Oii_dataout;
	wire	wire_nl1Oil_dataout;
	wire	wire_nl1OiO_dataout;
	wire	wire_nl1Ol_dataout;
	wire	wire_nl1Oli_dataout;
	wire	wire_nl1Oll_dataout;
	wire	wire_nl1OlO_dataout;
	wire	wire_nl1OO_dataout;
	wire	wire_nl1OOi_dataout;
	wire	wire_nl1OOl_dataout;
	wire	wire_nl1OOO_dataout;
	wire	wire_nli00O_dataout;
	wire	wire_nli0ii_dataout;
	wire	wire_nli0il_dataout;
	wire	wire_nli0iO_dataout;
	wire	wire_nli0li_dataout;
	wire	wire_nli0ll_dataout;
	wire	wire_nli0lO_dataout;
	wire	wire_nli0Oi_dataout;
	wire	wire_nli0Ol_dataout;
	wire	wire_nli0OO_dataout;
	wire	wire_nli10i_dataout;
	wire	wire_nli10l_dataout;
	wire	wire_nli10O_dataout;
	wire	wire_nli11i_dataout;
	wire	wire_nli11l_dataout;
	wire	wire_nli11O_dataout;
	wire	wire_nli1i_dataout;
	wire	wire_nli1ii_dataout;
	wire	wire_nli1il_dataout;
	wire	wire_nli1iO_dataout;
	wire	wire_nli1l_dataout;
	wire	wire_nli1O_dataout;
	wire	wire_nlii0i_dataout;
	wire	wire_nlii0l_dataout;
	wire	wire_nlii0O_dataout;
	wire	wire_nlii1i_dataout;
	wire	wire_nlii1l_dataout;
	wire	wire_nlii1O_dataout;
	wire	wire_nliiii_dataout;
	wire	wire_nliiil_dataout;
	wire	wire_nliiiO_dataout;
	wire	wire_nliili_dataout;
	wire	wire_nliill_dataout;
	wire	wire_nliilO_dataout;
	wire	wire_nliiOi_dataout;
	wire	wire_nliiOl_dataout;
	wire	wire_nliiOO_dataout;
	wire	wire_nlil0i_dataout;
	wire	wire_nlil0l_dataout;
	wire	wire_nlil0O_dataout;
	wire	wire_nlil1i_dataout;
	wire	wire_nlil1l_dataout;
	wire	wire_nlil1O_dataout;
	wire	wire_nlilii_dataout;
	wire	wire_nlilil_dataout;
	wire	wire_nliliO_dataout;
	wire	wire_nlilli_dataout;
	wire	wire_nlilll_dataout;
	wire	wire_nll0i_dataout;
	wire	wire_nll0l_dataout;
	wire	wire_nll0O_dataout;
	wire	wire_nllii_dataout;
	wire	wire_nllil_dataout;
	wire	wire_nlliO_dataout;
	wire	wire_nllli_dataout;
	wire	wire_nllll_dataout;
	wire	wire_nlllO_dataout;
	wire	wire_nllOi_dataout;
	wire	wire_nllOil_dataout;
	wire	wire_nllOiO_dataout;
	wire	wire_nllOl_dataout;
	wire	wire_nllOli_dataout;
	wire	wire_nllOll_dataout;
	wire	wire_nllOlO_dataout;
	wire	wire_nllOO_dataout;
	wire	wire_nllOOi_dataout;
	wire	wire_nllOOl_dataout;
	wire	wire_nllOOO_dataout;
	wire	wire_nlO00i_dataout;
	wire	wire_nlO00l_dataout;
	wire	wire_nlO00O_dataout;
	wire	wire_nlO01i_dataout;
	wire	wire_nlO01l_dataout;
	wire	wire_nlO01O_dataout;
	wire	wire_nlO0i_dataout;
	wire	wire_nlO0ii_dataout;
	wire	wire_nlO0il_dataout;
	wire	wire_nlO0iO_dataout;
	wire	wire_nlO0l_dataout;
	wire	wire_nlO0li_dataout;
	wire	wire_nlO0ll_dataout;
	wire	wire_nlO0lO_dataout;
	wire	wire_nlO0O_dataout;
	wire	wire_nlO0Oi_dataout;
	wire	wire_nlO0Ol_dataout;
	wire	wire_nlO0OO_dataout;
	wire	wire_nlO10i_dataout;
	wire	wire_nlO10l_dataout;
	wire	wire_nlO10O_dataout;
	wire	wire_nlO11i_dataout;
	wire	wire_nlO11l_dataout;
	wire	wire_nlO11O_dataout;
	wire	wire_nlO1i_dataout;
	wire	wire_nlO1ii_dataout;
	wire	wire_nlO1il_dataout;
	wire	wire_nlO1iO_dataout;
	wire	wire_nlO1l_dataout;
	wire	wire_nlO1li_dataout;
	wire	wire_nlO1ll_dataout;
	wire	wire_nlO1lO_dataout;
	wire	wire_nlO1O_dataout;
	wire	wire_nlO1Oi_dataout;
	wire	wire_nlO1Ol_dataout;
	wire	wire_nlO1OO_dataout;
	wire	wire_nlOi0i_dataout;
	wire	wire_nlOi0l_dataout;
	wire	wire_nlOi0O_dataout;
	wire	wire_nlOi1i_dataout;
	wire	wire_nlOi1l_dataout;
	wire	wire_nlOi1O_dataout;
	wire	wire_nlOii_dataout;
	wire	wire_nlOiii_dataout;
	wire	wire_nlOiil_dataout;
	wire	wire_nlOiiO_dataout;
	wire	wire_nlOil_dataout;
	wire	wire_nlOili_dataout;
	wire	wire_nlOill_dataout;
	wire	wire_nlOilO_dataout;
	wire	wire_nlOiO_dataout;
	wire	wire_nlOiOi_dataout;
	wire	wire_nlOiOl_dataout;
	wire	wire_nlOiOO_dataout;
	wire	wire_nlOl0i_dataout;
	wire	wire_nlOl0l_dataout;
	wire	wire_nlOl0O_dataout;
	wire	wire_nlOl1i_dataout;
	wire	wire_nlOl1l_dataout;
	wire	wire_nlOl1O_dataout;
	wire	wire_nlOli_dataout;
	wire	wire_nlOlii_dataout;
	wire	wire_nlOlil_dataout;
	wire	wire_nlOliO_dataout;
	wire	wire_nlOll_dataout;
	wire	wire_nlOlli_dataout;
	wire	wire_nlOlll_dataout;
	wire	wire_nlOllO_dataout;
	wire	wire_nlOlO_dataout;
	wire	wire_nlOlOi_dataout;
	wire	wire_nlOlOl_dataout;
	wire	wire_nlOlOO_dataout;
	wire	wire_nlOO0i_dataout;
	wire	wire_nlOO0l_dataout;
	wire	wire_nlOO0O_dataout;
	wire	wire_nlOO1i_dataout;
	wire	wire_nlOO1l_dataout;
	wire	wire_nlOO1O_dataout;
	wire	wire_nlOOi_dataout;
	wire	wire_nlOOii_dataout;
	wire	wire_nlOOil_dataout;
	wire	wire_nlOOiO_dataout;
	wire	wire_nlOOl_dataout;
	wire	wire_nlOOli_dataout;
	wire	wire_nlOOll_dataout;
	wire	wire_nlOOlO_dataout;
	wire	wire_nlOOO_dataout;
	wire	wire_nlOOOi_dataout;
	wire	wire_nlOOOl_dataout;
	wire	wire_nlOOOO_dataout;
	wire  [14:0]   wire_n001i_o;
	wire  [14:0]   wire_n01OO_o;
	wire  [4:0]   wire_nl0i0i_o;
	wire  wire_nii0i_o;
	wire  wire_nii0l_o;
	wire  wire_nii0O_o;
	wire  wire_niiii_o;
	wire  wire_niiil_o;
	wire  wire_niiiO_o;
	wire  wire_niili_o;
	wire  wire_niill_o;
	wire  wire_niilO_o;
	wire  wire_niiOi_o;
	wire  wire_niiOl_o;
	wire  wire_niiOO_o;
	wire  wire_nil0i_o;
	wire  wire_nil0l_o;
	wire  wire_nil0O_o;
	wire  wire_nil1i_o;
	wire  wire_nil1l_o;
	wire  wire_nil1O_o;
	wire  wire_nilii_o;
	wire  wire_nilil_o;
	wire  wire_niliO_o;
	wire  wire_nilli_o;
	wire  wire_nilll_o;
	wire  wire_nillO_o;
	wire  wire_nilOi_o;
	wire  wire_nilOl_o;
	wire  wire_nilOO_o;
	wire  wire_niO1i_o;
	wire  wire_niO1l_o;
	wire  wire_niO1O_o;
	wire  nillOi;

	altsyncram   n000i
	( 
	.address_a({nli1li, nli1ll, nli1lO, nli1Oi, nli1Ol, nli1OO, nli01i, nli01l, nli01O, nli00i, nli00l, nlillO}),
	.clock0(clk),
	.clocken0(clken),
	.eccstatus(),
	.q_a(wire_n000i_q_a),
	.q_b(),
	.aclr0(),
	.aclr1(),
	.address_b(),
	.addressstall_a(),
	.addressstall_b(),
	.byteena_a(),
	.byteena_b(),
	.clock1(),
	.clocken1(),
	.clocken2(),
	.clocken3(),
	.data_a(),
	.data_b(),
	.rden_a(),
	.rden_b(),
	.wren_a(),
	.wren_b()
	);
	defparam
		n000i.address_aclr_a = "NONE",
		n000i.address_aclr_b = "NONE",
		n000i.address_reg_b = "CLOCK1",
		n000i.byte_size = 8,
		n000i.byteena_aclr_a = "NONE",
		n000i.byteena_aclr_b = "NONE",
		n000i.byteena_reg_b = "CLOCK1",
		n000i.clock_enable_core_a = "USE_INPUT_CLKEN",
		n000i.clock_enable_core_b = "USE_INPUT_CLKEN",
		n000i.clock_enable_input_a = "NORMAL",
		n000i.clock_enable_input_b = "NORMAL",
		n000i.clock_enable_output_a = "NORMAL",
		n000i.clock_enable_output_b = "NORMAL",
		n000i.ecc_pipeline_stage_enabled = "FALSE",
		n000i.enable_ecc = "FALSE",
		n000i.indata_aclr_a = "NONE",
		n000i.indata_aclr_b = "NONE",
		n000i.indata_reg_b = "CLOCK1",
		n000i.init_file = "nco_cos.hex",
		n000i.init_file_layout = "PORT_A",
		n000i.intended_device_family = "Cyclone IV E",
		n000i.numwords_a = 4096,
		n000i.numwords_b = 1,
		n000i.operation_mode = "ROM",
		n000i.outdata_aclr_a = "NONE",
		n000i.outdata_aclr_b = "NONE",
		n000i.outdata_reg_a = "CLOCK0",
		n000i.outdata_reg_b = "UNREGISTERED",
		n000i.ram_block_type = "AUTO",
		n000i.rdcontrol_aclr_b = "NONE",
		n000i.rdcontrol_reg_b = "CLOCK1",
		n000i.read_during_write_mode_mixed_ports = "DONT_CARE",
		n000i.read_during_write_mode_port_a = "NEW_DATA_NO_NBE_READ",
		n000i.read_during_write_mode_port_b = "NEW_DATA_NO_NBE_READ",
		n000i.width_a = 14,
		n000i.width_b = 1,
		n000i.width_byteena_a = 1,
		n000i.width_byteena_b = 1,
		n000i.width_eccstatus = 3,
		n000i.widthad_a = 12,
		n000i.widthad_b = 1,
		n000i.wrcontrol_aclr_a = "NONE",
		n000i.wrcontrol_aclr_b = "NONE",
		n000i.wrcontrol_wraddress_reg_b = "CLOCK1",
		n000i.lpm_hint = "WIDTH_BYTEENA=1";
	altsyncram   n001O
	( 
	.address_a({nli1li, nli1ll, nli1lO, nli1Oi, nli1Ol, nli1OO, nli01i, nli01l, nli01O, nli00i, nli00l, nlillO}),
	.clock0(clk),
	.clocken0(clken),
	.eccstatus(),
	.q_a(wire_n001O_q_a),
	.q_b(),
	.aclr0(),
	.aclr1(),
	.address_b(),
	.addressstall_a(),
	.addressstall_b(),
	.byteena_a(),
	.byteena_b(),
	.clock1(),
	.clocken1(),
	.clocken2(),
	.clocken3(),
	.data_a(),
	.data_b(),
	.rden_a(),
	.rden_b(),
	.wren_a(),
	.wren_b()
	);
	defparam
		n001O.address_aclr_a = "NONE",
		n001O.address_aclr_b = "NONE",
		n001O.address_reg_b = "CLOCK1",
		n001O.byte_size = 8,
		n001O.byteena_aclr_a = "NONE",
		n001O.byteena_aclr_b = "NONE",
		n001O.byteena_reg_b = "CLOCK1",
		n001O.clock_enable_core_a = "USE_INPUT_CLKEN",
		n001O.clock_enable_core_b = "USE_INPUT_CLKEN",
		n001O.clock_enable_input_a = "NORMAL",
		n001O.clock_enable_input_b = "NORMAL",
		n001O.clock_enable_output_a = "NORMAL",
		n001O.clock_enable_output_b = "NORMAL",
		n001O.ecc_pipeline_stage_enabled = "FALSE",
		n001O.enable_ecc = "FALSE",
		n001O.indata_aclr_a = "NONE",
		n001O.indata_aclr_b = "NONE",
		n001O.indata_reg_b = "CLOCK1",
		n001O.init_file = "nco_sin.hex",
		n001O.init_file_layout = "PORT_A",
		n001O.intended_device_family = "Cyclone IV E",
		n001O.numwords_a = 4096,
		n001O.numwords_b = 1,
		n001O.operation_mode = "ROM",
		n001O.outdata_aclr_a = "NONE",
		n001O.outdata_aclr_b = "NONE",
		n001O.outdata_reg_a = "CLOCK0",
		n001O.outdata_reg_b = "UNREGISTERED",
		n001O.ram_block_type = "AUTO",
		n001O.rdcontrol_aclr_b = "NONE",
		n001O.rdcontrol_reg_b = "CLOCK1",
		n001O.read_during_write_mode_mixed_ports = "DONT_CARE",
		n001O.read_during_write_mode_port_a = "NEW_DATA_NO_NBE_READ",
		n001O.read_during_write_mode_port_b = "NEW_DATA_NO_NBE_READ",
		n001O.width_a = 14,
		n001O.width_b = 1,
		n001O.width_byteena_a = 1,
		n001O.width_byteena_b = 1,
		n001O.width_eccstatus = 3,
		n001O.widthad_a = 12,
		n001O.widthad_b = 1,
		n001O.wrcontrol_aclr_a = "NONE",
		n001O.wrcontrol_aclr_b = "NONE",
		n001O.wrcontrol_wraddress_reg_b = "CLOCK1",
		n001O.lpm_hint = "WIDTH_BYTEENA=1";
	initial
		nili0l41 = 0;
	always @ ( posedge clk)
		  nili0l41 <= nili0l42;
	event nili0l41_event;
	initial
		#1 ->nili0l41_event;
	always @(nili0l41_event)
		nili0l41 <= {1{1'b1}};
	initial
		nili0l42 = 0;
	always @ ( posedge clk)
		  nili0l42 <= nili0l41;
	initial
		nili0O39 = 0;
	always @ ( posedge clk)
		  nili0O39 <= nili0O40;
	event nili0O39_event;
	initial
		#1 ->nili0O39_event;
	always @(nili0O39_event)
		nili0O39 <= {1{1'b1}};
	initial
		nili0O40 = 0;
	always @ ( posedge clk)
		  nili0O40 <= nili0O39;
	initial
		niliii37 = 0;
	always @ ( posedge clk)
		  niliii37 <= niliii38;
	event niliii37_event;
	initial
		#1 ->niliii37_event;
	always @(niliii37_event)
		niliii37 <= {1{1'b1}};
	initial
		niliii38 = 0;
	always @ ( posedge clk)
		  niliii38 <= niliii37;
	initial
		niliil35 = 0;
	always @ ( posedge clk)
		  niliil35 <= niliil36;
	event niliil35_event;
	initial
		#1 ->niliil35_event;
	always @(niliil35_event)
		niliil35 <= {1{1'b1}};
	initial
		niliil36 = 0;
	always @ ( posedge clk)
		  niliil36 <= niliil35;
	initial
		niliiO33 = 0;
	always @ ( posedge clk)
		  niliiO33 <= niliiO34;
	event niliiO33_event;
	initial
		#1 ->niliiO33_event;
	always @(niliiO33_event)
		niliiO33 <= {1{1'b1}};
	initial
		niliiO34 = 0;
	always @ ( posedge clk)
		  niliiO34 <= niliiO33;
	initial
		nilili31 = 0;
	always @ ( posedge clk)
		  nilili31 <= nilili32;
	event nilili31_event;
	initial
		#1 ->nilili31_event;
	always @(nilili31_event)
		nilili31 <= {1{1'b1}};
	initial
		nilili32 = 0;
	always @ ( posedge clk)
		  nilili32 <= nilili31;
	initial
		nilill29 = 0;
	always @ ( posedge clk)
		  nilill29 <= nilill30;
	event nilill29_event;
	initial
		#1 ->nilill29_event;
	always @(nilill29_event)
		nilill29 <= {1{1'b1}};
	initial
		nilill30 = 0;
	always @ ( posedge clk)
		  nilill30 <= nilill29;
	initial
		nililO27 = 0;
	always @ ( posedge clk)
		  nililO27 <= nililO28;
	event nililO27_event;
	initial
		#1 ->nililO27_event;
	always @(nililO27_event)
		nililO27 <= {1{1'b1}};
	initial
		nililO28 = 0;
	always @ ( posedge clk)
		  nililO28 <= nililO27;
	initial
		niliOi25 = 0;
	always @ ( posedge clk)
		  niliOi25 <= niliOi26;
	event niliOi25_event;
	initial
		#1 ->niliOi25_event;
	always @(niliOi25_event)
		niliOi25 <= {1{1'b1}};
	initial
		niliOi26 = 0;
	always @ ( posedge clk)
		  niliOi26 <= niliOi25;
	initial
		niliOl23 = 0;
	always @ ( posedge clk)
		  niliOl23 <= niliOl24;
	event niliOl23_event;
	initial
		#1 ->niliOl23_event;
	always @(niliOl23_event)
		niliOl23 <= {1{1'b1}};
	initial
		niliOl24 = 0;
	always @ ( posedge clk)
		  niliOl24 <= niliOl23;
	initial
		niliOO21 = 0;
	always @ ( posedge clk)
		  niliOO21 <= niliOO22;
	event niliOO21_event;
	initial
		#1 ->niliOO21_event;
	always @(niliOO21_event)
		niliOO21 <= {1{1'b1}};
	initial
		niliOO22 = 0;
	always @ ( posedge clk)
		  niliOO22 <= niliOO21;
	initial
		nill0i13 = 0;
	always @ ( posedge clk)
		  nill0i13 <= nill0i14;
	event nill0i13_event;
	initial
		#1 ->nill0i13_event;
	always @(nill0i13_event)
		nill0i13 <= {1{1'b1}};
	initial
		nill0i14 = 0;
	always @ ( posedge clk)
		  nill0i14 <= nill0i13;
	initial
		nill0l11 = 0;
	always @ ( posedge clk)
		  nill0l11 <= nill0l12;
	event nill0l11_event;
	initial
		#1 ->nill0l11_event;
	always @(nill0l11_event)
		nill0l11 <= {1{1'b1}};
	initial
		nill0l12 = 0;
	always @ ( posedge clk)
		  nill0l12 <= nill0l11;
	initial
		nill0O10 = 0;
	always @ ( posedge clk)
		  nill0O10 <= nill0O9;
	initial
		nill0O9 = 0;
	always @ ( posedge clk)
		  nill0O9 <= nill0O10;
	event nill0O9_event;
	initial
		#1 ->nill0O9_event;
	always @(nill0O9_event)
		nill0O9 <= {1{1'b1}};
	initial
		nill1i19 = 0;
	always @ ( posedge clk)
		  nill1i19 <= nill1i20;
	event nill1i19_event;
	initial
		#1 ->nill1i19_event;
	always @(nill1i19_event)
		nill1i19 <= {1{1'b1}};
	initial
		nill1i20 = 0;
	always @ ( posedge clk)
		  nill1i20 <= nill1i19;
	initial
		nill1l17 = 0;
	always @ ( posedge clk)
		  nill1l17 <= nill1l18;
	event nill1l17_event;
	initial
		#1 ->nill1l17_event;
	always @(nill1l17_event)
		nill1l17 <= {1{1'b1}};
	initial
		nill1l18 = 0;
	always @ ( posedge clk)
		  nill1l18 <= nill1l17;
	initial
		nill1O15 = 0;
	always @ ( posedge clk)
		  nill1O15 <= nill1O16;
	event nill1O15_event;
	initial
		#1 ->nill1O15_event;
	always @(nill1O15_event)
		nill1O15 <= {1{1'b1}};
	initial
		nill1O16 = 0;
	always @ ( posedge clk)
		  nill1O16 <= nill1O15;
	initial
		nillii7 = 0;
	always @ ( posedge clk)
		  nillii7 <= nillii8;
	event nillii7_event;
	initial
		#1 ->nillii7_event;
	always @(nillii7_event)
		nillii7 <= {1{1'b1}};
	initial
		nillii8 = 0;
	always @ ( posedge clk)
		  nillii8 <= nillii7;
	initial
		nillil5 = 0;
	always @ ( posedge clk)
		  nillil5 <= nillil6;
	event nillil5_event;
	initial
		#1 ->nillil5_event;
	always @(nillil5_event)
		nillil5 <= {1{1'b1}};
	initial
		nillil6 = 0;
	always @ ( posedge clk)
		  nillil6 <= nillil5;
	initial
		nillli3 = 0;
	always @ ( posedge clk)
		  nillli3 <= nillli4;
	event nillli3_event;
	initial
		#1 ->nillli3_event;
	always @(nillli3_event)
		nillli3 <= {1{1'b1}};
	initial
		nillli4 = 0;
	always @ ( posedge clk)
		  nillli4 <= nillli3;
	initial
		nillOO1 = 0;
	always @ ( posedge clk)
		  nillOO1 <= nillOO2;
	event nillOO1_event;
	initial
		#1 ->nillOO1_event;
	always @(nillOO1_event)
		nillOO1 <= {1{1'b1}};
	initial
		nillOO2 = 0;
	always @ ( posedge clk)
		  nillOO2 <= nillOO1;
	initial
	begin
		n000l = 0;
		n000O = 0;
		n001l = 0;
		n00ii = 0;
		n00il = 0;
		n00iO = 0;
		n00li = 0;
		n00ll = 0;
		n00lO = 0;
		n00Oi = 0;
		n00Ol = 0;
		n00OO = 0;
		n0i0i = 0;
		n0i0l = 0;
		n0i0O = 0;
		n0i1i = 0;
		n0i1l = 0;
		n0i1O = 0;
		n0iii = 0;
		n0iil = 0;
		n0iiO = 0;
		n0ili = 0;
		n0ill = 0;
		n0ilO = 0;
		n0iOi = 0;
		n0iOl = 0;
		n0iOO = 0;
		n0l1i = 0;
		n0l1l = 0;
		n0l1O = 0;
		n10i = 0;
		n1ll = 0;
		nilO0i = 0;
		nilO0l = 0;
		nilO0O = 0;
		nilO1i = 0;
		nilO1l = 0;
		nilO1O = 0;
		nilOii = 0;
		nilOil = 0;
		nilOiO = 0;
		nilOli = 0;
		nilOll = 0;
		niO0i = 0;
		niO0l = 0;
		niO0O = 0;
		niO1lO = 0;
		niO1Oi = 0;
		niO1Ol = 0;
		niO1OO = 0;
		niOi0i = 0;
		niOi0l = 0;
		niOi0O = 0;
		niOi1l = 0;
		niOi1O = 0;
		niOii = 0;
		niOiii = 0;
		niOiil = 0;
		niOiiO = 0;
		niOil = 0;
		niOili = 0;
		niOill = 0;
		niOilO = 0;
		niOiO = 0;
		niOiOi = 0;
		niOiOl = 0;
		niOiOO = 0;
		niOl0i = 0;
		niOl0l = 0;
		niOl0O = 0;
		niOl1i = 0;
		niOl1l = 0;
		niOl1O = 0;
		niOli = 0;
		niOlii = 0;
		niOlil = 0;
		niOliO = 0;
		niOll = 0;
		niOlli = 0;
		niOlll = 0;
		niOllO = 0;
		niOlO = 0;
		niOlOi = 0;
		niOlOl = 0;
		niOlOO = 0;
		niOOi = 0;
		niOOl = 0;
		niOOO = 0;
		nl0iil = 0;
		nl0ili = 0;
		nl0ill = 0;
		nl0ilO = 0;
		nl0iOi = 0;
		nl0iOl = 0;
		nl0iOO = 0;
		nl0l0i = 0;
		nl0l0l = 0;
		nl0l0O = 0;
		nl0l1i = 0;
		nl0l1l = 0;
		nl0l1O = 0;
		nl0lii = 0;
		nl0lil = 0;
		nl0liO = 0;
		nl11i = 0;
		nl11l = 0;
		nl11O = 0;
		nl1l0i = 0;
		nl1l0l = 0;
		nl1l0O = 0;
		nl1l1i = 0;
		nl1l1l = 0;
		nl1l1O = 0;
		nl1lii = 0;
		nl1lil = 0;
		nl1liO = 0;
		nl1lli = 0;
		nl1lll = 0;
		nl1llO = 0;
		nl1lOi = 0;
		nl1lOl = 0;
		nl1lOO = 0;
		nl1O0i = 0;
		nl1O0l = 0;
		nl1O0O = 0;
		nl1O1i = 0;
		nl1O1l = 0;
		nl1O1O = 0;
		nli00i = 0;
		nli00l = 0;
		nli01i = 0;
		nli01l = 0;
		nli01O = 0;
		nli0i = 0;
		nli0l = 0;
		nli0O = 0;
		nli1li = 0;
		nli1ll = 0;
		nli1lO = 0;
		nli1Oi = 0;
		nli1Ol = 0;
		nli1OO = 0;
		nliii = 0;
		nliil = 0;
		nliiO = 0;
		nlili = 0;
		nlill = 0;
		nlillO = 0;
		nlilO = 0;
		nlilOi = 0;
		nlilOl = 0;
		nlilOO = 0;
		nliO0i = 0;
		nliO0l = 0;
		nliO0O = 0;
		nliO1i = 0;
		nliO1l = 0;
		nliO1O = 0;
		nliOi = 0;
		nliOii = 0;
		nliOil = 0;
		nliOiO = 0;
		nliOl = 0;
		nliOli = 0;
		nliOll = 0;
		nliOlO = 0;
		nliOO = 0;
		nliOOi = 0;
		nliOOl = 0;
		nliOOO = 0;
		nll00i = 0;
		nll00l = 0;
		nll00O = 0;
		nll01i = 0;
		nll01l = 0;
		nll01O = 0;
		nll0ii = 0;
		nll0il = 0;
		nll0iO = 0;
		nll0li = 0;
		nll0ll = 0;
		nll0lO = 0;
		nll0Oi = 0;
		nll0Ol = 0;
		nll0OO = 0;
		nll10i = 0;
		nll10l = 0;
		nll10O = 0;
		nll11i = 0;
		nll11l = 0;
		nll11O = 0;
		nll1i = 0;
		nll1ii = 0;
		nll1il = 0;
		nll1iO = 0;
		nll1l = 0;
		nll1li = 0;
		nll1ll = 0;
		nll1lO = 0;
		nll1O = 0;
		nll1Oi = 0;
		nll1Ol = 0;
		nll1OO = 0;
		nlli0i = 0;
		nlli0l = 0;
		nlli0O = 0;
		nlli1i = 0;
		nlli1l = 0;
		nlli1O = 0;
		nlliii = 0;
		nlliil = 0;
		nlliiO = 0;
		nllili = 0;
		nllill = 0;
		nllilO = 0;
		nlliOi = 0;
		nlliOl = 0;
		nlliOO = 0;
		nlll0i = 0;
		nlll0l = 0;
		nlll0O = 0;
		nlll1i = 0;
		nlll1l = 0;
		nlll1O = 0;
		nlllii = 0;
		nlllil = 0;
		nllliO = 0;
		nlllli = 0;
		nlllll = 0;
		nllllO = 0;
		nlllOi = 0;
		nlllOl = 0;
		nlllOO = 0;
		nllO0i = 0;
		nllO0l = 0;
		nllO0O = 0;
		nllO1i = 0;
		nllO1l = 0;
		nllO1O = 0;
		nllOii = 0;
	end
	always @ ( posedge clk or  negedge wire_n1li_CLRN)
	begin
		if (wire_n1li_CLRN == 1'b0) 
		begin
			n000l <= 0;
			n000O <= 0;
			n001l <= 0;
			n00ii <= 0;
			n00il <= 0;
			n00iO <= 0;
			n00li <= 0;
			n00ll <= 0;
			n00lO <= 0;
			n00Oi <= 0;
			n00Ol <= 0;
			n00OO <= 0;
			n0i0i <= 0;
			n0i0l <= 0;
			n0i0O <= 0;
			n0i1i <= 0;
			n0i1l <= 0;
			n0i1O <= 0;
			n0iii <= 0;
			n0iil <= 0;
			n0iiO <= 0;
			n0ili <= 0;
			n0ill <= 0;
			n0ilO <= 0;
			n0iOi <= 0;
			n0iOl <= 0;
			n0iOO <= 0;
			n0l1i <= 0;
			n0l1l <= 0;
			n0l1O <= 0;
			n10i <= 0;
			n1ll <= 0;
			nilO0i <= 0;
			nilO0l <= 0;
			nilO0O <= 0;
			nilO1i <= 0;
			nilO1l <= 0;
			nilO1O <= 0;
			nilOii <= 0;
			nilOil <= 0;
			nilOiO <= 0;
			nilOli <= 0;
			nilOll <= 0;
			niO0i <= 0;
			niO0l <= 0;
			niO0O <= 0;
			niO1lO <= 0;
			niO1Oi <= 0;
			niO1Ol <= 0;
			niO1OO <= 0;
			niOi0i <= 0;
			niOi0l <= 0;
			niOi0O <= 0;
			niOi1l <= 0;
			niOi1O <= 0;
			niOii <= 0;
			niOiii <= 0;
			niOiil <= 0;
			niOiiO <= 0;
			niOil <= 0;
			niOili <= 0;
			niOill <= 0;
			niOilO <= 0;
			niOiO <= 0;
			niOiOi <= 0;
			niOiOl <= 0;
			niOiOO <= 0;
			niOl0i <= 0;
			niOl0l <= 0;
			niOl0O <= 0;
			niOl1i <= 0;
			niOl1l <= 0;
			niOl1O <= 0;
			niOli <= 0;
			niOlii <= 0;
			niOlil <= 0;
			niOliO <= 0;
			niOll <= 0;
			niOlli <= 0;
			niOlll <= 0;
			niOllO <= 0;
			niOlO <= 0;
			niOlOi <= 0;
			niOlOl <= 0;
			niOlOO <= 0;
			niOOi <= 0;
			niOOl <= 0;
			niOOO <= 0;
			nl0iil <= 0;
			nl0ili <= 0;
			nl0ill <= 0;
			nl0ilO <= 0;
			nl0iOi <= 0;
			nl0iOl <= 0;
			nl0iOO <= 0;
			nl0l0i <= 0;
			nl0l0l <= 0;
			nl0l0O <= 0;
			nl0l1i <= 0;
			nl0l1l <= 0;
			nl0l1O <= 0;
			nl0lii <= 0;
			nl0lil <= 0;
			nl0liO <= 0;
			nl11i <= 0;
			nl11l <= 0;
			nl11O <= 0;
			nl1l0i <= 0;
			nl1l0l <= 0;
			nl1l0O <= 0;
			nl1l1i <= 0;
			nl1l1l <= 0;
			nl1l1O <= 0;
			nl1lii <= 0;
			nl1lil <= 0;
			nl1liO <= 0;
			nl1lli <= 0;
			nl1lll <= 0;
			nl1llO <= 0;
			nl1lOi <= 0;
			nl1lOl <= 0;
			nl1lOO <= 0;
			nl1O0i <= 0;
			nl1O0l <= 0;
			nl1O0O <= 0;
			nl1O1i <= 0;
			nl1O1l <= 0;
			nl1O1O <= 0;
			nli00i <= 0;
			nli00l <= 0;
			nli01i <= 0;
			nli01l <= 0;
			nli01O <= 0;
			nli0i <= 0;
			nli0l <= 0;
			nli0O <= 0;
			nli1li <= 0;
			nli1ll <= 0;
			nli1lO <= 0;
			nli1Oi <= 0;
			nli1Ol <= 0;
			nli1OO <= 0;
			nliii <= 0;
			nliil <= 0;
			nliiO <= 0;
			nlili <= 0;
			nlill <= 0;
			nlillO <= 0;
			nlilO <= 0;
			nlilOi <= 0;
			nlilOl <= 0;
			nlilOO <= 0;
			nliO0i <= 0;
			nliO0l <= 0;
			nliO0O <= 0;
			nliO1i <= 0;
			nliO1l <= 0;
			nliO1O <= 0;
			nliOi <= 0;
			nliOii <= 0;
			nliOil <= 0;
			nliOiO <= 0;
			nliOl <= 0;
			nliOli <= 0;
			nliOll <= 0;
			nliOlO <= 0;
			nliOO <= 0;
			nliOOi <= 0;
			nliOOl <= 0;
			nliOOO <= 0;
			nll00i <= 0;
			nll00l <= 0;
			nll00O <= 0;
			nll01i <= 0;
			nll01l <= 0;
			nll01O <= 0;
			nll0ii <= 0;
			nll0il <= 0;
			nll0iO <= 0;
			nll0li <= 0;
			nll0ll <= 0;
			nll0lO <= 0;
			nll0Oi <= 0;
			nll0Ol <= 0;
			nll0OO <= 0;
			nll10i <= 0;
			nll10l <= 0;
			nll10O <= 0;
			nll11i <= 0;
			nll11l <= 0;
			nll11O <= 0;
			nll1i <= 0;
			nll1ii <= 0;
			nll1il <= 0;
			nll1iO <= 0;
			nll1l <= 0;
			nll1li <= 0;
			nll1ll <= 0;
			nll1lO <= 0;
			nll1O <= 0;
			nll1Oi <= 0;
			nll1Ol <= 0;
			nll1OO <= 0;
			nlli0i <= 0;
			nlli0l <= 0;
			nlli0O <= 0;
			nlli1i <= 0;
			nlli1l <= 0;
			nlli1O <= 0;
			nlliii <= 0;
			nlliil <= 0;
			nlliiO <= 0;
			nllili <= 0;
			nllill <= 0;
			nllilO <= 0;
			nlliOi <= 0;
			nlliOl <= 0;
			nlliOO <= 0;
			nlll0i <= 0;
			nlll0l <= 0;
			nlll0O <= 0;
			nlll1i <= 0;
			nlll1l <= 0;
			nlll1O <= 0;
			nlllii <= 0;
			nlllil <= 0;
			nllliO <= 0;
			nlllli <= 0;
			nlllll <= 0;
			nllllO <= 0;
			nlllOi <= 0;
			nlllOl <= 0;
			nlllOO <= 0;
			nllO0i <= 0;
			nllO0l <= 0;
			nllO0O <= 0;
			nllO1i <= 0;
			nllO1l <= 0;
			nllO1O <= 0;
			nllOii <= 0;
		end
		else 
		begin
			n000l <= wire_ni11O_dataout;
			n000O <= wire_ni11l_dataout;
			n001l <= wire_nllOil_dataout;
			n00ii <= wire_ni11i_dataout;
			n00il <= wire_n0OOO_dataout;
			n00iO <= wire_n0OOl_dataout;
			n00li <= wire_n0OOi_dataout;
			n00ll <= wire_n0OlO_dataout;
			n00lO <= wire_n0Oll_dataout;
			n00Oi <= wire_n0Oli_dataout;
			n00Ol <= wire_n0OiO_dataout;
			n00OO <= wire_n0Oil_dataout;
			n0i0i <= wire_n0O0i_dataout;
			n0i0l <= wire_n0O1O_dataout;
			n0i0O <= wire_n0O1l_dataout;
			n0i1i <= wire_n0Oii_dataout;
			n0i1l <= wire_n0O0O_dataout;
			n0i1O <= wire_n0O0l_dataout;
			n0iii <= wire_n0O1i_dataout;
			n0iil <= wire_n0lOO_dataout;
			n0iiO <= wire_n0lOl_dataout;
			n0ili <= wire_n0lOi_dataout;
			n0ill <= wire_n0llO_dataout;
			n0ilO <= wire_n0lll_dataout;
			n0iOi <= wire_n0lli_dataout;
			n0iOl <= wire_n0liO_dataout;
			n0iOO <= wire_n0lil_dataout;
			n0l1i <= wire_n0lii_dataout;
			n0l1l <= wire_n0l0O_dataout;
			n0l1O <= wire_n0l0l_dataout;
			n10i <= wire_nll0i_dataout;
			n1ll <= wire_n1ii_dataout;
			nilO0i <= wire_nilOOO_dataout;
			nilO0l <= wire_niO11i_dataout;
			nilO0O <= wire_niO11l_dataout;
			nilO1i <= wire_nilOlO_dataout;
			nilO1l <= wire_nilOOi_dataout;
			nilO1O <= wire_nilOOl_dataout;
			nilOii <= wire_niO11O_dataout;
			nilOil <= wire_niO10i_dataout;
			nilOiO <= wire_niO10l_dataout;
			nilOli <= wire_niO10O_dataout;
			nilOll <= wire_niO1ii_dataout;
			niO0i <= wire_n0l0i_dataout;
			niO0l <= wire_nl01O_dataout;
			niO0O <= wire_nl01l_dataout;
			niO1lO <= wire_niO1il_dataout;
			niO1Oi <= wire_niO1iO_dataout;
			niO1Ol <= wire_niO1li_dataout;
			niO1OO <= wire_niO1ll_dataout;
			niOi0i <= wire_nl11Oi_dataout;
			niOi0l <= wire_nl11lO_dataout;
			niOi0O <= wire_nl11ll_dataout;
			niOi1l <= wire_nl11OO_dataout;
			niOi1O <= wire_nl11Ol_dataout;
			niOii <= wire_nl01i_dataout;
			niOiii <= wire_nl11li_dataout;
			niOiil <= wire_nl11iO_dataout;
			niOiiO <= wire_nl11il_dataout;
			niOil <= wire_nl1OO_dataout;
			niOili <= wire_nl11ii_dataout;
			niOill <= wire_nl110O_dataout;
			niOilO <= wire_nl110l_dataout;
			niOiO <= wire_nl1Ol_dataout;
			niOiOi <= wire_nl110i_dataout;
			niOiOl <= wire_nl111O_dataout;
			niOiOO <= wire_nl111l_dataout;
			niOl0i <= wire_niOOOi_dataout;
			niOl0l <= wire_niOOlO_dataout;
			niOl0O <= wire_niOOll_dataout;
			niOl1i <= wire_nl111i_dataout;
			niOl1l <= wire_niOOOO_dataout;
			niOl1O <= wire_niOOOl_dataout;
			niOli <= wire_nl1Oi_dataout;
			niOlii <= wire_niOOli_dataout;
			niOlil <= wire_niOOiO_dataout;
			niOliO <= wire_niOOil_dataout;
			niOll <= wire_nl1lO_dataout;
			niOlli <= wire_niOOii_dataout;
			niOlll <= wire_niOO0O_dataout;
			niOllO <= wire_niOO0l_dataout;
			niOlO <= wire_nl1ll_dataout;
			niOlOi <= wire_niOO0i_dataout;
			niOlOl <= wire_niOO1O_dataout;
			niOlOO <= wire_niOO1l_dataout;
			niOOi <= wire_nl1li_dataout;
			niOOl <= wire_nl1iO_dataout;
			niOOO <= wire_nl1il_dataout;
			nl0iil <= wire_nl1Oii_dataout;
			nl0ili <= wire_nl0OiO_dataout;
			nl0ill <= wire_nl0Oil_dataout;
			nl0ilO <= wire_nl0Oii_dataout;
			nl0iOi <= wire_nl0O0O_dataout;
			nl0iOl <= wire_nl0O0l_dataout;
			nl0iOO <= wire_nl0O0i_dataout;
			nl0l0i <= wire_nl0lOO_dataout;
			nl0l0l <= wire_nl0lOl_dataout;
			nl0l0O <= wire_nl0lOi_dataout;
			nl0l1i <= wire_nl0O1O_dataout;
			nl0l1l <= wire_nl0O1l_dataout;
			nl0l1O <= wire_nl0O1i_dataout;
			nl0lii <= wire_nl0llO_dataout;
			nl0lil <= wire_nl0lll_dataout;
			nl0liO <= wire_nl0lli_dataout;
			nl11i <= wire_nl1ii_dataout;
			nl11l <= wire_nl10O_dataout;
			nl11O <= wire_nl10l_dataout;
			nl1l0i <= wire_nl01li_dataout;
			nl1l0l <= wire_nl01iO_dataout;
			nl1l0O <= wire_nl01il_dataout;
			nl1l1i <= wire_niOO1i_dataout;
			nl1l1l <= wire_nl01lO_dataout;
			nl1l1O <= wire_nl01ll_dataout;
			nl1lii <= wire_nl01ii_dataout;
			nl1lil <= wire_nl010O_dataout;
			nl1liO <= wire_nl010l_dataout;
			nl1lli <= wire_nl010i_dataout;
			nl1lll <= wire_nl011O_dataout;
			nl1llO <= wire_nl011l_dataout;
			nl1lOi <= wire_nl011i_dataout;
			nl1lOl <= wire_nl1OOO_dataout;
			nl1lOO <= wire_nl1OOl_dataout;
			nl1O0i <= wire_nl1Oli_dataout;
			nl1O0l <= wire_nl1OiO_dataout;
			nl1O0O <= wire_nl1Oil_dataout;
			nl1O1i <= wire_nl1OOi_dataout;
			nl1O1l <= wire_nl1OlO_dataout;
			nl1O1O <= wire_nl1Oll_dataout;
			nli00i <= wire_nli0il_dataout;
			nli00l <= wire_nli0ii_dataout;
			nli01i <= wire_nli0ll_dataout;
			nli01l <= wire_nli0li_dataout;
			nli01O <= wire_nli0iO_dataout;
			nli0i <= wire_nl10i_dataout;
			nli0l <= wire_nlO1O_dataout;
			nli0O <= wire_nlO1l_dataout;
			nli1li <= wire_nlii1l_dataout;
			nli1ll <= wire_nlii1i_dataout;
			nli1lO <= wire_nli0OO_dataout;
			nli1Oi <= wire_nli0Ol_dataout;
			nli1Ol <= wire_nli0Oi_dataout;
			nli1OO <= wire_nli0lO_dataout;
			nliii <= wire_nlO1i_dataout;
			nliil <= wire_nllOO_dataout;
			nliiO <= wire_nllOl_dataout;
			nlili <= wire_nllOi_dataout;
			nlill <= wire_nlllO_dataout;
			nlillO <= wire_nli00O_dataout;
			nlilO <= wire_nllll_dataout;
			nlilOi <= wire_n111O_dataout;
			nlilOl <= wire_n111l_dataout;
			nlilOO <= wire_n111i_dataout;
			nliO0i <= wire_nlOOlO_dataout;
			nliO0l <= wire_nlOOll_dataout;
			nliO0O <= wire_nlOOli_dataout;
			nliO1i <= wire_nlOOOO_dataout;
			nliO1l <= wire_nlOOOl_dataout;
			nliO1O <= wire_nlOOOi_dataout;
			nliOi <= wire_nllli_dataout;
			nliOii <= wire_nlOOiO_dataout;
			nliOil <= wire_nlOOil_dataout;
			nliOiO <= wire_nlOOii_dataout;
			nliOl <= wire_nlliO_dataout;
			nliOli <= wire_nlOO0O_dataout;
			nliOll <= wire_nlOO0l_dataout;
			nliOlO <= wire_nlOO0i_dataout;
			nliOO <= wire_nllil_dataout;
			nliOOi <= wire_nlOO1O_dataout;
			nliOOl <= wire_nlOO1l_dataout;
			nliOOO <= wire_nlOO1i_dataout;
			nll00i <= wire_nlOilO_dataout;
			nll00l <= wire_nlOill_dataout;
			nll00O <= wire_nlOili_dataout;
			nll01i <= wire_nlOiOO_dataout;
			nll01l <= wire_nlOiOl_dataout;
			nll01O <= wire_nlOiOi_dataout;
			nll0ii <= wire_nlOiiO_dataout;
			nll0il <= wire_nlOiil_dataout;
			nll0iO <= wire_nlOiii_dataout;
			nll0li <= wire_nlOi0O_dataout;
			nll0ll <= wire_nlOi0l_dataout;
			nll0lO <= wire_nlOi0i_dataout;
			nll0Oi <= wire_nlOi1O_dataout;
			nll0Ol <= wire_nlOi1l_dataout;
			nll0OO <= wire_nlOi1i_dataout;
			nll10i <= wire_nlOllO_dataout;
			nll10l <= wire_nlOlll_dataout;
			nll10O <= wire_nlOlli_dataout;
			nll11i <= wire_nlOlOO_dataout;
			nll11l <= wire_nlOlOl_dataout;
			nll11O <= wire_nlOlOi_dataout;
			nll1i <= wire_nllii_dataout;
			nll1ii <= wire_nlOliO_dataout;
			nll1il <= wire_nlOlil_dataout;
			nll1iO <= wire_nlOlii_dataout;
			nll1l <= wire_nll0O_dataout;
			nll1li <= wire_nlOl0O_dataout;
			nll1ll <= wire_nlOl0l_dataout;
			nll1lO <= wire_nlOl0i_dataout;
			nll1O <= wire_nll0l_dataout;
			nll1Oi <= wire_nlOl1O_dataout;
			nll1Ol <= wire_nlOl1l_dataout;
			nll1OO <= wire_nlOl1i_dataout;
			nlli0i <= wire_nlO0lO_dataout;
			nlli0l <= wire_nlO0ll_dataout;
			nlli0O <= wire_nlO0li_dataout;
			nlli1i <= wire_nlO0OO_dataout;
			nlli1l <= wire_nlO0Ol_dataout;
			nlli1O <= wire_nlO0Oi_dataout;
			nlliii <= wire_nlO0iO_dataout;
			nlliil <= wire_nlO0il_dataout;
			nlliiO <= wire_nlO0ii_dataout;
			nllili <= wire_nlO00O_dataout;
			nllill <= wire_nlO00l_dataout;
			nllilO <= wire_nlO00i_dataout;
			nlliOi <= wire_nlO01O_dataout;
			nlliOl <= wire_nlO01l_dataout;
			nlliOO <= wire_nlO01i_dataout;
			nlll0i <= wire_nlO1lO_dataout;
			nlll0l <= wire_nlO1ll_dataout;
			nlll0O <= wire_nlO1li_dataout;
			nlll1i <= wire_nlO1OO_dataout;
			nlll1l <= wire_nlO1Ol_dataout;
			nlll1O <= wire_nlO1Oi_dataout;
			nlllii <= wire_nlO1iO_dataout;
			nlllil <= wire_nlO1il_dataout;
			nllliO <= wire_nlO1ii_dataout;
			nlllli <= wire_nlO10O_dataout;
			nlllll <= wire_nlO10l_dataout;
			nllllO <= wire_nlO10i_dataout;
			nlllOi <= wire_nlO11O_dataout;
			nlllOl <= wire_nlO11l_dataout;
			nlllOO <= wire_nlO11i_dataout;
			nllO0i <= wire_nllOlO_dataout;
			nllO0l <= wire_nllOll_dataout;
			nllO0O <= wire_nllOli_dataout;
			nllO1i <= wire_nllOOO_dataout;
			nllO1l <= wire_nllOOl_dataout;
			nllO1O <= wire_nllOOi_dataout;
			nllOii <= wire_nllOiO_dataout;
		end
	end
	assign
		wire_n1li_CLRN = (nillOO2 ^ nillOO1);
	event n000l_event;
	event n000O_event;
	event n001l_event;
	event n00ii_event;
	event n00il_event;
	event n00iO_event;
	event n00li_event;
	event n00ll_event;
	event n00lO_event;
	event n00Oi_event;
	event n00Ol_event;
	event n00OO_event;
	event n0i0i_event;
	event n0i0l_event;
	event n0i0O_event;
	event n0i1i_event;
	event n0i1l_event;
	event n0i1O_event;
	event n0iii_event;
	event n0iil_event;
	event n0iiO_event;
	event n0ili_event;
	event n0ill_event;
	event n0ilO_event;
	event n0iOi_event;
	event n0iOl_event;
	event n0iOO_event;
	event n0l1i_event;
	event n0l1l_event;
	event n0l1O_event;
	event n10i_event;
	event n1ll_event;
	event nilO0i_event;
	event nilO0l_event;
	event nilO0O_event;
	event nilO1i_event;
	event nilO1l_event;
	event nilO1O_event;
	event nilOii_event;
	event nilOil_event;
	event nilOiO_event;
	event nilOli_event;
	event nilOll_event;
	event niO0i_event;
	event niO0l_event;
	event niO0O_event;
	event niO1lO_event;
	event niO1Oi_event;
	event niO1Ol_event;
	event niO1OO_event;
	event niOi0i_event;
	event niOi0l_event;
	event niOi0O_event;
	event niOi1l_event;
	event niOi1O_event;
	event niOii_event;
	event niOiii_event;
	event niOiil_event;
	event niOiiO_event;
	event niOil_event;
	event niOili_event;
	event niOill_event;
	event niOilO_event;
	event niOiO_event;
	event niOiOi_event;
	event niOiOl_event;
	event niOiOO_event;
	event niOl0i_event;
	event niOl0l_event;
	event niOl0O_event;
	event niOl1i_event;
	event niOl1l_event;
	event niOl1O_event;
	event niOli_event;
	event niOlii_event;
	event niOlil_event;
	event niOliO_event;
	event niOll_event;
	event niOlli_event;
	event niOlll_event;
	event niOllO_event;
	event niOlO_event;
	event niOlOi_event;
	event niOlOl_event;
	event niOlOO_event;
	event niOOi_event;
	event niOOl_event;
	event niOOO_event;
	event nl0iil_event;
	event nl0ili_event;
	event nl0ill_event;
	event nl0ilO_event;
	event nl0iOi_event;
	event nl0iOl_event;
	event nl0iOO_event;
	event nl0l0i_event;
	event nl0l0l_event;
	event nl0l0O_event;
	event nl0l1i_event;
	event nl0l1l_event;
	event nl0l1O_event;
	event nl0lii_event;
	event nl0lil_event;
	event nl0liO_event;
	event nl11i_event;
	event nl11l_event;
	event nl11O_event;
	event nl1l0i_event;
	event nl1l0l_event;
	event nl1l0O_event;
	event nl1l1i_event;
	event nl1l1l_event;
	event nl1l1O_event;
	event nl1lii_event;
	event nl1lil_event;
	event nl1liO_event;
	event nl1lli_event;
	event nl1lll_event;
	event nl1llO_event;
	event nl1lOi_event;
	event nl1lOl_event;
	event nl1lOO_event;
	event nl1O0i_event;
	event nl1O0l_event;
	event nl1O0O_event;
	event nl1O1i_event;
	event nl1O1l_event;
	event nl1O1O_event;
	event nli00i_event;
	event nli00l_event;
	event nli01i_event;
	event nli01l_event;
	event nli01O_event;
	event nli0i_event;
	event nli0l_event;
	event nli0O_event;
	event nli1li_event;
	event nli1ll_event;
	event nli1lO_event;
	event nli1Oi_event;
	event nli1Ol_event;
	event nli1OO_event;
	event nliii_event;
	event nliil_event;
	event nliiO_event;
	event nlili_event;
	event nlill_event;
	event nlillO_event;
	event nlilO_event;
	event nlilOi_event;
	event nlilOl_event;
	event nlilOO_event;
	event nliO0i_event;
	event nliO0l_event;
	event nliO0O_event;
	event nliO1i_event;
	event nliO1l_event;
	event nliO1O_event;
	event nliOi_event;
	event nliOii_event;
	event nliOil_event;
	event nliOiO_event;
	event nliOl_event;
	event nliOli_event;
	event nliOll_event;
	event nliOlO_event;
	event nliOO_event;
	event nliOOi_event;
	event nliOOl_event;
	event nliOOO_event;
	event nll00i_event;
	event nll00l_event;
	event nll00O_event;
	event nll01i_event;
	event nll01l_event;
	event nll01O_event;
	event nll0ii_event;
	event nll0il_event;
	event nll0iO_event;
	event nll0li_event;
	event nll0ll_event;
	event nll0lO_event;
	event nll0Oi_event;
	event nll0Ol_event;
	event nll0OO_event;
	event nll10i_event;
	event nll10l_event;
	event nll10O_event;
	event nll11i_event;
	event nll11l_event;
	event nll11O_event;
	event nll1i_event;
	event nll1ii_event;
	event nll1il_event;
	event nll1iO_event;
	event nll1l_event;
	event nll1li_event;
	event nll1ll_event;
	event nll1lO_event;
	event nll1O_event;
	event nll1Oi_event;
	event nll1Ol_event;
	event nll1OO_event;
	event nlli0i_event;
	event nlli0l_event;
	event nlli0O_event;
	event nlli1i_event;
	event nlli1l_event;
	event nlli1O_event;
	event nlliii_event;
	event nlliil_event;
	event nlliiO_event;
	event nllili_event;
	event nllill_event;
	event nllilO_event;
	event nlliOi_event;
	event nlliOl_event;
	event nlliOO_event;
	event nlll0i_event;
	event nlll0l_event;
	event nlll0O_event;
	event nlll1i_event;
	event nlll1l_event;
	event nlll1O_event;
	event nlllii_event;
	event nlllil_event;
	event nllliO_event;
	event nlllli_event;
	event nlllll_event;
	event nllllO_event;
	event nlllOi_event;
	event nlllOl_event;
	event nlllOO_event;
	event nllO0i_event;
	event nllO0l_event;
	event nllO0O_event;
	event nllO1i_event;
	event nllO1l_event;
	event nllO1O_event;
	event nllOii_event;
	initial
		#1 ->n000l_event;
	initial
		#1 ->n000O_event;
	initial
		#1 ->n001l_event;
	initial
		#1 ->n00ii_event;
	initial
		#1 ->n00il_event;
	initial
		#1 ->n00iO_event;
	initial
		#1 ->n00li_event;
	initial
		#1 ->n00ll_event;
	initial
		#1 ->n00lO_event;
	initial
		#1 ->n00Oi_event;
	initial
		#1 ->n00Ol_event;
	initial
		#1 ->n00OO_event;
	initial
		#1 ->n0i0i_event;
	initial
		#1 ->n0i0l_event;
	initial
		#1 ->n0i0O_event;
	initial
		#1 ->n0i1i_event;
	initial
		#1 ->n0i1l_event;
	initial
		#1 ->n0i1O_event;
	initial
		#1 ->n0iii_event;
	initial
		#1 ->n0iil_event;
	initial
		#1 ->n0iiO_event;
	initial
		#1 ->n0ili_event;
	initial
		#1 ->n0ill_event;
	initial
		#1 ->n0ilO_event;
	initial
		#1 ->n0iOi_event;
	initial
		#1 ->n0iOl_event;
	initial
		#1 ->n0iOO_event;
	initial
		#1 ->n0l1i_event;
	initial
		#1 ->n0l1l_event;
	initial
		#1 ->n0l1O_event;
	initial
		#1 ->n10i_event;
	initial
		#1 ->n1ll_event;
	initial
		#1 ->nilO0i_event;
	initial
		#1 ->nilO0l_event;
	initial
		#1 ->nilO0O_event;
	initial
		#1 ->nilO1i_event;
	initial
		#1 ->nilO1l_event;
	initial
		#1 ->nilO1O_event;
	initial
		#1 ->nilOii_event;
	initial
		#1 ->nilOil_event;
	initial
		#1 ->nilOiO_event;
	initial
		#1 ->nilOli_event;
	initial
		#1 ->nilOll_event;
	initial
		#1 ->niO0i_event;
	initial
		#1 ->niO0l_event;
	initial
		#1 ->niO0O_event;
	initial
		#1 ->niO1lO_event;
	initial
		#1 ->niO1Oi_event;
	initial
		#1 ->niO1Ol_event;
	initial
		#1 ->niO1OO_event;
	initial
		#1 ->niOi0i_event;
	initial
		#1 ->niOi0l_event;
	initial
		#1 ->niOi0O_event;
	initial
		#1 ->niOi1l_event;
	initial
		#1 ->niOi1O_event;
	initial
		#1 ->niOii_event;
	initial
		#1 ->niOiii_event;
	initial
		#1 ->niOiil_event;
	initial
		#1 ->niOiiO_event;
	initial
		#1 ->niOil_event;
	initial
		#1 ->niOili_event;
	initial
		#1 ->niOill_event;
	initial
		#1 ->niOilO_event;
	initial
		#1 ->niOiO_event;
	initial
		#1 ->niOiOi_event;
	initial
		#1 ->niOiOl_event;
	initial
		#1 ->niOiOO_event;
	initial
		#1 ->niOl0i_event;
	initial
		#1 ->niOl0l_event;
	initial
		#1 ->niOl0O_event;
	initial
		#1 ->niOl1i_event;
	initial
		#1 ->niOl1l_event;
	initial
		#1 ->niOl1O_event;
	initial
		#1 ->niOli_event;
	initial
		#1 ->niOlii_event;
	initial
		#1 ->niOlil_event;
	initial
		#1 ->niOliO_event;
	initial
		#1 ->niOll_event;
	initial
		#1 ->niOlli_event;
	initial
		#1 ->niOlll_event;
	initial
		#1 ->niOllO_event;
	initial
		#1 ->niOlO_event;
	initial
		#1 ->niOlOi_event;
	initial
		#1 ->niOlOl_event;
	initial
		#1 ->niOlOO_event;
	initial
		#1 ->niOOi_event;
	initial
		#1 ->niOOl_event;
	initial
		#1 ->niOOO_event;
	initial
		#1 ->nl0iil_event;
	initial
		#1 ->nl0ili_event;
	initial
		#1 ->nl0ill_event;
	initial
		#1 ->nl0ilO_event;
	initial
		#1 ->nl0iOi_event;
	initial
		#1 ->nl0iOl_event;
	initial
		#1 ->nl0iOO_event;
	initial
		#1 ->nl0l0i_event;
	initial
		#1 ->nl0l0l_event;
	initial
		#1 ->nl0l0O_event;
	initial
		#1 ->nl0l1i_event;
	initial
		#1 ->nl0l1l_event;
	initial
		#1 ->nl0l1O_event;
	initial
		#1 ->nl0lii_event;
	initial
		#1 ->nl0lil_event;
	initial
		#1 ->nl0liO_event;
	initial
		#1 ->nl11i_event;
	initial
		#1 ->nl11l_event;
	initial
		#1 ->nl11O_event;
	initial
		#1 ->nl1l0i_event;
	initial
		#1 ->nl1l0l_event;
	initial
		#1 ->nl1l0O_event;
	initial
		#1 ->nl1l1i_event;
	initial
		#1 ->nl1l1l_event;
	initial
		#1 ->nl1l1O_event;
	initial
		#1 ->nl1lii_event;
	initial
		#1 ->nl1lil_event;
	initial
		#1 ->nl1liO_event;
	initial
		#1 ->nl1lli_event;
	initial
		#1 ->nl1lll_event;
	initial
		#1 ->nl1llO_event;
	initial
		#1 ->nl1lOi_event;
	initial
		#1 ->nl1lOl_event;
	initial
		#1 ->nl1lOO_event;
	initial
		#1 ->nl1O0i_event;
	initial
		#1 ->nl1O0l_event;
	initial
		#1 ->nl1O0O_event;
	initial
		#1 ->nl1O1i_event;
	initial
		#1 ->nl1O1l_event;
	initial
		#1 ->nl1O1O_event;
	initial
		#1 ->nli00i_event;
	initial
		#1 ->nli00l_event;
	initial
		#1 ->nli01i_event;
	initial
		#1 ->nli01l_event;
	initial
		#1 ->nli01O_event;
	initial
		#1 ->nli0i_event;
	initial
		#1 ->nli0l_event;
	initial
		#1 ->nli0O_event;
	initial
		#1 ->nli1li_event;
	initial
		#1 ->nli1ll_event;
	initial
		#1 ->nli1lO_event;
	initial
		#1 ->nli1Oi_event;
	initial
		#1 ->nli1Ol_event;
	initial
		#1 ->nli1OO_event;
	initial
		#1 ->nliii_event;
	initial
		#1 ->nliil_event;
	initial
		#1 ->nliiO_event;
	initial
		#1 ->nlili_event;
	initial
		#1 ->nlill_event;
	initial
		#1 ->nlillO_event;
	initial
		#1 ->nlilO_event;
	initial
		#1 ->nlilOi_event;
	initial
		#1 ->nlilOl_event;
	initial
		#1 ->nlilOO_event;
	initial
		#1 ->nliO0i_event;
	initial
		#1 ->nliO0l_event;
	initial
		#1 ->nliO0O_event;
	initial
		#1 ->nliO1i_event;
	initial
		#1 ->nliO1l_event;
	initial
		#1 ->nliO1O_event;
	initial
		#1 ->nliOi_event;
	initial
		#1 ->nliOii_event;
	initial
		#1 ->nliOil_event;
	initial
		#1 ->nliOiO_event;
	initial
		#1 ->nliOl_event;
	initial
		#1 ->nliOli_event;
	initial
		#1 ->nliOll_event;
	initial
		#1 ->nliOlO_event;
	initial
		#1 ->nliOO_event;
	initial
		#1 ->nliOOi_event;
	initial
		#1 ->nliOOl_event;
	initial
		#1 ->nliOOO_event;
	initial
		#1 ->nll00i_event;
	initial
		#1 ->nll00l_event;
	initial
		#1 ->nll00O_event;
	initial
		#1 ->nll01i_event;
	initial
		#1 ->nll01l_event;
	initial
		#1 ->nll01O_event;
	initial
		#1 ->nll0ii_event;
	initial
		#1 ->nll0il_event;
	initial
		#1 ->nll0iO_event;
	initial
		#1 ->nll0li_event;
	initial
		#1 ->nll0ll_event;
	initial
		#1 ->nll0lO_event;
	initial
		#1 ->nll0Oi_event;
	initial
		#1 ->nll0Ol_event;
	initial
		#1 ->nll0OO_event;
	initial
		#1 ->nll10i_event;
	initial
		#1 ->nll10l_event;
	initial
		#1 ->nll10O_event;
	initial
		#1 ->nll11i_event;
	initial
		#1 ->nll11l_event;
	initial
		#1 ->nll11O_event;
	initial
		#1 ->nll1i_event;
	initial
		#1 ->nll1ii_event;
	initial
		#1 ->nll1il_event;
	initial
		#1 ->nll1iO_event;
	initial
		#1 ->nll1l_event;
	initial
		#1 ->nll1li_event;
	initial
		#1 ->nll1ll_event;
	initial
		#1 ->nll1lO_event;
	initial
		#1 ->nll1O_event;
	initial
		#1 ->nll1Oi_event;
	initial
		#1 ->nll1Ol_event;
	initial
		#1 ->nll1OO_event;
	initial
		#1 ->nlli0i_event;
	initial
		#1 ->nlli0l_event;
	initial
		#1 ->nlli0O_event;
	initial
		#1 ->nlli1i_event;
	initial
		#1 ->nlli1l_event;
	initial
		#1 ->nlli1O_event;
	initial
		#1 ->nlliii_event;
	initial
		#1 ->nlliil_event;
	initial
		#1 ->nlliiO_event;
	initial
		#1 ->nllili_event;
	initial
		#1 ->nllill_event;
	initial
		#1 ->nllilO_event;
	initial
		#1 ->nlliOi_event;
	initial
		#1 ->nlliOl_event;
	initial
		#1 ->nlliOO_event;
	initial
		#1 ->nlll0i_event;
	initial
		#1 ->nlll0l_event;
	initial
		#1 ->nlll0O_event;
	initial
		#1 ->nlll1i_event;
	initial
		#1 ->nlll1l_event;
	initial
		#1 ->nlll1O_event;
	initial
		#1 ->nlllii_event;
	initial
		#1 ->nlllil_event;
	initial
		#1 ->nllliO_event;
	initial
		#1 ->nlllli_event;
	initial
		#1 ->nlllll_event;
	initial
		#1 ->nllllO_event;
	initial
		#1 ->nlllOi_event;
	initial
		#1 ->nlllOl_event;
	initial
		#1 ->nlllOO_event;
	initial
		#1 ->nllO0i_event;
	initial
		#1 ->nllO0l_event;
	initial
		#1 ->nllO0O_event;
	initial
		#1 ->nllO1i_event;
	initial
		#1 ->nllO1l_event;
	initial
		#1 ->nllO1O_event;
	initial
		#1 ->nllOii_event;
	always @(n000l_event)
		n000l <= 1;
	always @(n000O_event)
		n000O <= 1;
	always @(n001l_event)
		n001l <= 1;
	always @(n00ii_event)
		n00ii <= 1;
	always @(n00il_event)
		n00il <= 1;
	always @(n00iO_event)
		n00iO <= 1;
	always @(n00li_event)
		n00li <= 1;
	always @(n00ll_event)
		n00ll <= 1;
	always @(n00lO_event)
		n00lO <= 1;
	always @(n00Oi_event)
		n00Oi <= 1;
	always @(n00Ol_event)
		n00Ol <= 1;
	always @(n00OO_event)
		n00OO <= 1;
	always @(n0i0i_event)
		n0i0i <= 1;
	always @(n0i0l_event)
		n0i0l <= 1;
	always @(n0i0O_event)
		n0i0O <= 1;
	always @(n0i1i_event)
		n0i1i <= 1;
	always @(n0i1l_event)
		n0i1l <= 1;
	always @(n0i1O_event)
		n0i1O <= 1;
	always @(n0iii_event)
		n0iii <= 1;
	always @(n0iil_event)
		n0iil <= 1;
	always @(n0iiO_event)
		n0iiO <= 1;
	always @(n0ili_event)
		n0ili <= 1;
	always @(n0ill_event)
		n0ill <= 1;
	always @(n0ilO_event)
		n0ilO <= 1;
	always @(n0iOi_event)
		n0iOi <= 1;
	always @(n0iOl_event)
		n0iOl <= 1;
	always @(n0iOO_event)
		n0iOO <= 1;
	always @(n0l1i_event)
		n0l1i <= 1;
	always @(n0l1l_event)
		n0l1l <= 1;
	always @(n0l1O_event)
		n0l1O <= 1;
	always @(n10i_event)
		n10i <= 1;
	always @(n1ll_event)
		n1ll <= 1;
	always @(nilO0i_event)
		nilO0i <= 1;
	always @(nilO0l_event)
		nilO0l <= 1;
	always @(nilO0O_event)
		nilO0O <= 1;
	always @(nilO1i_event)
		nilO1i <= 1;
	always @(nilO1l_event)
		nilO1l <= 1;
	always @(nilO1O_event)
		nilO1O <= 1;
	always @(nilOii_event)
		nilOii <= 1;
	always @(nilOil_event)
		nilOil <= 1;
	always @(nilOiO_event)
		nilOiO <= 1;
	always @(nilOli_event)
		nilOli <= 1;
	always @(nilOll_event)
		nilOll <= 1;
	always @(niO0i_event)
		niO0i <= 1;
	always @(niO0l_event)
		niO0l <= 1;
	always @(niO0O_event)
		niO0O <= 1;
	always @(niO1lO_event)
		niO1lO <= 1;
	always @(niO1Oi_event)
		niO1Oi <= 1;
	always @(niO1Ol_event)
		niO1Ol <= 1;
	always @(niO1OO_event)
		niO1OO <= 1;
	always @(niOi0i_event)
		niOi0i <= 1;
	always @(niOi0l_event)
		niOi0l <= 1;
	always @(niOi0O_event)
		niOi0O <= 1;
	always @(niOi1l_event)
		niOi1l <= 1;
	always @(niOi1O_event)
		niOi1O <= 1;
	always @(niOii_event)
		niOii <= 1;
	always @(niOiii_event)
		niOiii <= 1;
	always @(niOiil_event)
		niOiil <= 1;
	always @(niOiiO_event)
		niOiiO <= 1;
	always @(niOil_event)
		niOil <= 1;
	always @(niOili_event)
		niOili <= 1;
	always @(niOill_event)
		niOill <= 1;
	always @(niOilO_event)
		niOilO <= 1;
	always @(niOiO_event)
		niOiO <= 1;
	always @(niOiOi_event)
		niOiOi <= 1;
	always @(niOiOl_event)
		niOiOl <= 1;
	always @(niOiOO_event)
		niOiOO <= 1;
	always @(niOl0i_event)
		niOl0i <= 1;
	always @(niOl0l_event)
		niOl0l <= 1;
	always @(niOl0O_event)
		niOl0O <= 1;
	always @(niOl1i_event)
		niOl1i <= 1;
	always @(niOl1l_event)
		niOl1l <= 1;
	always @(niOl1O_event)
		niOl1O <= 1;
	always @(niOli_event)
		niOli <= 1;
	always @(niOlii_event)
		niOlii <= 1;
	always @(niOlil_event)
		niOlil <= 1;
	always @(niOliO_event)
		niOliO <= 1;
	always @(niOll_event)
		niOll <= 1;
	always @(niOlli_event)
		niOlli <= 1;
	always @(niOlll_event)
		niOlll <= 1;
	always @(niOllO_event)
		niOllO <= 1;
	always @(niOlO_event)
		niOlO <= 1;
	always @(niOlOi_event)
		niOlOi <= 1;
	always @(niOlOl_event)
		niOlOl <= 1;
	always @(niOlOO_event)
		niOlOO <= 1;
	always @(niOOi_event)
		niOOi <= 1;
	always @(niOOl_event)
		niOOl <= 1;
	always @(niOOO_event)
		niOOO <= 1;
	always @(nl0iil_event)
		nl0iil <= 1;
	always @(nl0ili_event)
		nl0ili <= 1;
	always @(nl0ill_event)
		nl0ill <= 1;
	always @(nl0ilO_event)
		nl0ilO <= 1;
	always @(nl0iOi_event)
		nl0iOi <= 1;
	always @(nl0iOl_event)
		nl0iOl <= 1;
	always @(nl0iOO_event)
		nl0iOO <= 1;
	always @(nl0l0i_event)
		nl0l0i <= 1;
	always @(nl0l0l_event)
		nl0l0l <= 1;
	always @(nl0l0O_event)
		nl0l0O <= 1;
	always @(nl0l1i_event)
		nl0l1i <= 1;
	always @(nl0l1l_event)
		nl0l1l <= 1;
	always @(nl0l1O_event)
		nl0l1O <= 1;
	always @(nl0lii_event)
		nl0lii <= 1;
	always @(nl0lil_event)
		nl0lil <= 1;
	always @(nl0liO_event)
		nl0liO <= 1;
	always @(nl11i_event)
		nl11i <= 1;
	always @(nl11l_event)
		nl11l <= 1;
	always @(nl11O_event)
		nl11O <= 1;
	always @(nl1l0i_event)
		nl1l0i <= 1;
	always @(nl1l0l_event)
		nl1l0l <= 1;
	always @(nl1l0O_event)
		nl1l0O <= 1;
	always @(nl1l1i_event)
		nl1l1i <= 1;
	always @(nl1l1l_event)
		nl1l1l <= 1;
	always @(nl1l1O_event)
		nl1l1O <= 1;
	always @(nl1lii_event)
		nl1lii <= 1;
	always @(nl1lil_event)
		nl1lil <= 1;
	always @(nl1liO_event)
		nl1liO <= 1;
	always @(nl1lli_event)
		nl1lli <= 1;
	always @(nl1lll_event)
		nl1lll <= 1;
	always @(nl1llO_event)
		nl1llO <= 1;
	always @(nl1lOi_event)
		nl1lOi <= 1;
	always @(nl1lOl_event)
		nl1lOl <= 1;
	always @(nl1lOO_event)
		nl1lOO <= 1;
	always @(nl1O0i_event)
		nl1O0i <= 1;
	always @(nl1O0l_event)
		nl1O0l <= 1;
	always @(nl1O0O_event)
		nl1O0O <= 1;
	always @(nl1O1i_event)
		nl1O1i <= 1;
	always @(nl1O1l_event)
		nl1O1l <= 1;
	always @(nl1O1O_event)
		nl1O1O <= 1;
	always @(nli00i_event)
		nli00i <= 1;
	always @(nli00l_event)
		nli00l <= 1;
	always @(nli01i_event)
		nli01i <= 1;
	always @(nli01l_event)
		nli01l <= 1;
	always @(nli01O_event)
		nli01O <= 1;
	always @(nli0i_event)
		nli0i <= 1;
	always @(nli0l_event)
		nli0l <= 1;
	always @(nli0O_event)
		nli0O <= 1;
	always @(nli1li_event)
		nli1li <= 1;
	always @(nli1ll_event)
		nli1ll <= 1;
	always @(nli1lO_event)
		nli1lO <= 1;
	always @(nli1Oi_event)
		nli1Oi <= 1;
	always @(nli1Ol_event)
		nli1Ol <= 1;
	always @(nli1OO_event)
		nli1OO <= 1;
	always @(nliii_event)
		nliii <= 1;
	always @(nliil_event)
		nliil <= 1;
	always @(nliiO_event)
		nliiO <= 1;
	always @(nlili_event)
		nlili <= 1;
	always @(nlill_event)
		nlill <= 1;
	always @(nlillO_event)
		nlillO <= 1;
	always @(nlilO_event)
		nlilO <= 1;
	always @(nlilOi_event)
		nlilOi <= 1;
	always @(nlilOl_event)
		nlilOl <= 1;
	always @(nlilOO_event)
		nlilOO <= 1;
	always @(nliO0i_event)
		nliO0i <= 1;
	always @(nliO0l_event)
		nliO0l <= 1;
	always @(nliO0O_event)
		nliO0O <= 1;
	always @(nliO1i_event)
		nliO1i <= 1;
	always @(nliO1l_event)
		nliO1l <= 1;
	always @(nliO1O_event)
		nliO1O <= 1;
	always @(nliOi_event)
		nliOi <= 1;
	always @(nliOii_event)
		nliOii <= 1;
	always @(nliOil_event)
		nliOil <= 1;
	always @(nliOiO_event)
		nliOiO <= 1;
	always @(nliOl_event)
		nliOl <= 1;
	always @(nliOli_event)
		nliOli <= 1;
	always @(nliOll_event)
		nliOll <= 1;
	always @(nliOlO_event)
		nliOlO <= 1;
	always @(nliOO_event)
		nliOO <= 1;
	always @(nliOOi_event)
		nliOOi <= 1;
	always @(nliOOl_event)
		nliOOl <= 1;
	always @(nliOOO_event)
		nliOOO <= 1;
	always @(nll00i_event)
		nll00i <= 1;
	always @(nll00l_event)
		nll00l <= 1;
	always @(nll00O_event)
		nll00O <= 1;
	always @(nll01i_event)
		nll01i <= 1;
	always @(nll01l_event)
		nll01l <= 1;
	always @(nll01O_event)
		nll01O <= 1;
	always @(nll0ii_event)
		nll0ii <= 1;
	always @(nll0il_event)
		nll0il <= 1;
	always @(nll0iO_event)
		nll0iO <= 1;
	always @(nll0li_event)
		nll0li <= 1;
	always @(nll0ll_event)
		nll0ll <= 1;
	always @(nll0lO_event)
		nll0lO <= 1;
	always @(nll0Oi_event)
		nll0Oi <= 1;
	always @(nll0Ol_event)
		nll0Ol <= 1;
	always @(nll0OO_event)
		nll0OO <= 1;
	always @(nll10i_event)
		nll10i <= 1;
	always @(nll10l_event)
		nll10l <= 1;
	always @(nll10O_event)
		nll10O <= 1;
	always @(nll11i_event)
		nll11i <= 1;
	always @(nll11l_event)
		nll11l <= 1;
	always @(nll11O_event)
		nll11O <= 1;
	always @(nll1i_event)
		nll1i <= 1;
	always @(nll1ii_event)
		nll1ii <= 1;
	always @(nll1il_event)
		nll1il <= 1;
	always @(nll1iO_event)
		nll1iO <= 1;
	always @(nll1l_event)
		nll1l <= 1;
	always @(nll1li_event)
		nll1li <= 1;
	always @(nll1ll_event)
		nll1ll <= 1;
	always @(nll1lO_event)
		nll1lO <= 1;
	always @(nll1O_event)
		nll1O <= 1;
	always @(nll1Oi_event)
		nll1Oi <= 1;
	always @(nll1Ol_event)
		nll1Ol <= 1;
	always @(nll1OO_event)
		nll1OO <= 1;
	always @(nlli0i_event)
		nlli0i <= 1;
	always @(nlli0l_event)
		nlli0l <= 1;
	always @(nlli0O_event)
		nlli0O <= 1;
	always @(nlli1i_event)
		nlli1i <= 1;
	always @(nlli1l_event)
		nlli1l <= 1;
	always @(nlli1O_event)
		nlli1O <= 1;
	always @(nlliii_event)
		nlliii <= 1;
	always @(nlliil_event)
		nlliil <= 1;
	always @(nlliiO_event)
		nlliiO <= 1;
	always @(nllili_event)
		nllili <= 1;
	always @(nllill_event)
		nllill <= 1;
	always @(nllilO_event)
		nllilO <= 1;
	always @(nlliOi_event)
		nlliOi <= 1;
	always @(nlliOl_event)
		nlliOl <= 1;
	always @(nlliOO_event)
		nlliOO <= 1;
	always @(nlll0i_event)
		nlll0i <= 1;
	always @(nlll0l_event)
		nlll0l <= 1;
	always @(nlll0O_event)
		nlll0O <= 1;
	always @(nlll1i_event)
		nlll1i <= 1;
	always @(nlll1l_event)
		nlll1l <= 1;
	always @(nlll1O_event)
		nlll1O <= 1;
	always @(nlllii_event)
		nlllii <= 1;
	always @(nlllil_event)
		nlllil <= 1;
	always @(nllliO_event)
		nllliO <= 1;
	always @(nlllli_event)
		nlllli <= 1;
	always @(nlllll_event)
		nlllll <= 1;
	always @(nllllO_event)
		nllllO <= 1;
	always @(nlllOi_event)
		nlllOi <= 1;
	always @(nlllOl_event)
		nlllOl <= 1;
	always @(nlllOO_event)
		nlllOO <= 1;
	always @(nllO0i_event)
		nllO0i <= 1;
	always @(nllO0l_event)
		nllO0l <= 1;
	always @(nllO0O_event)
		nllO0O <= 1;
	always @(nllO1i_event)
		nllO1i <= 1;
	always @(nllO1l_event)
		nllO1l <= 1;
	always @(nllO1O_event)
		nllO1O <= 1;
	always @(nllOii_event)
		nllOii <= 1;
	lpm_add_sub   niOi1i
	( 
	.aclr((~ reset_n)),
	.clken(clken),
	.clock(clk),
	.cout(),
	.dataa({niOi1l, niOi1O, niOi0i, niOi0l, niOi0O, niOiii, niOiil, niOiiO, niOili, niOill, niOilO, niOiOi, niOiOl, niOiOO, niOl1i, niOl1l, niOl1O, niOl0i, niOl0l, niOl0O, niOlii, niOlil, niOliO, niOlli, niOlll, niOllO, niOlOi, niOlOl, niOlOO, nl1l1i}),
	.datab({wire_niOi1i_result[29:0]}),
	.overflow(),
	.result(wire_niOi1i_result),
	.add_sub(),
	.cin()
	);
	defparam
		niOi1i.lpm_direction = "ADD",
		niOi1i.lpm_pipeline = 1,
		niOi1i.lpm_representation = "UNSIGNED",
		niOi1i.lpm_width = 30;
	lpm_add_sub   nl0iiO
	( 
	.aclr((~ reset_n)),
	.clken(clken),
	.clock(clk),
	.cout(),
	.dataa({wire_niOi1i_result[29:10]}),
	.datab({{16{nl1O1O}}, nl1O0i, nl1O0l, nl1O0O, nl0iil}),
	.overflow(),
	.result(wire_nl0iiO_result),
	.add_sub(),
	.cin()
	);
	defparam
		nl0iiO.lpm_direction = "ADD",
		nl0iiO.lpm_pipeline = 1,
		nl0iiO.lpm_representation = "SIGNED",
		nl0iiO.lpm_width = 20;
	lpm_counter   n10l
	( 
	.aclr((~ reset_n)),
	.clk_en(clken),
	.clock(clk),
	.cout(),
	.q(wire_n10l_q),
	.aload(),
	.aset(),
	.cin(),
	.cnt_en(),
	.data(),
	.sclr(),
	.sload(),
	.sset(),
	.updown()
	);
	defparam
		n10l.lpm_direction = "UP",
		n10l.lpm_modulus = 0,
		n10l.lpm_port_updown = "PORT_CONNECTIVITY",
		n10l.lpm_width = 4;
	assign		wire_n010i_dataout = (clken === 1'b1) ? wire_n001O_q_a[3] : nliOil;
	assign		wire_n010l_dataout = (clken === 1'b1) ? wire_n001O_q_a[4] : nliOii;
	assign		wire_n010O_dataout = (clken === 1'b1) ? wire_n001O_q_a[5] : nliO0O;
	assign		wire_n011i_dataout = (clken === 1'b1) ? wire_n001O_q_a[0] : nliOll;
	assign		wire_n011l_dataout = (clken === 1'b1) ? wire_n001O_q_a[1] : nliOli;
	assign		wire_n011O_dataout = (clken === 1'b1) ? wire_n001O_q_a[2] : nliOiO;
	assign		wire_n01ii_dataout = (clken === 1'b1) ? wire_n001O_q_a[6] : nliO0l;
	assign		wire_n01il_dataout = (clken === 1'b1) ? wire_n001O_q_a[7] : nliO0i;
	assign		wire_n01iO_dataout = (clken === 1'b1) ? wire_n001O_q_a[8] : nliO1O;
	assign		wire_n01li_dataout = (clken === 1'b1) ? wire_n001O_q_a[9] : nliO1l;
	assign		wire_n01ll_dataout = (clken === 1'b1) ? wire_n001O_q_a[10] : nliO1i;
	assign		wire_n01lO_dataout = (clken === 1'b1) ? wire_n001O_q_a[11] : nlilOO;
	assign		wire_n01Oi_dataout = (clken === 1'b1) ? wire_n001O_q_a[12] : nlilOl;
	assign		wire_n01Ol_dataout = (clken === 1'b1) ? wire_n001O_q_a[13] : nlilOi;
	and(wire_n0l0i_dataout, wire_ni10i_dataout, ~((~ reset_n)));
	and(wire_n0l0l_dataout, wire_ni10l_dataout, ~((~ reset_n)));
	and(wire_n0l0O_dataout, wire_ni10O_dataout, ~((~ reset_n)));
	and(wire_n0lii_dataout, wire_ni1ii_dataout, ~((~ reset_n)));
	and(wire_n0lil_dataout, wire_ni1il_dataout, ~((~ reset_n)));
	and(wire_n0liO_dataout, wire_ni1iO_dataout, ~((~ reset_n)));
	and(wire_n0lli_dataout, wire_ni1li_dataout, ~((~ reset_n)));
	and(wire_n0lll_dataout, wire_ni1ll_dataout, ~((~ reset_n)));
	and(wire_n0llO_dataout, wire_ni1lO_dataout, ~((~ reset_n)));
	and(wire_n0lOi_dataout, wire_ni1Oi_dataout, ~((~ reset_n)));
	and(wire_n0lOl_dataout, wire_ni1Ol_dataout, ~((~ reset_n)));
	and(wire_n0lOO_dataout, wire_ni1OO_dataout, ~((~ reset_n)));
	and(wire_n0O0i_dataout, wire_ni00i_dataout, ~((~ reset_n)));
	and(wire_n0O0l_dataout, wire_ni00l_dataout, ~((~ reset_n)));
	and(wire_n0O0O_dataout, wire_ni00O_dataout, ~((~ reset_n)));
	and(wire_n0O1i_dataout, wire_ni01i_dataout, ~((~ reset_n)));
	and(wire_n0O1l_dataout, wire_ni01l_dataout, ~((~ reset_n)));
	and(wire_n0O1O_dataout, wire_ni01O_dataout, ~((~ reset_n)));
	and(wire_n0Oii_dataout, wire_ni0ii_dataout, ~((~ reset_n)));
	and(wire_n0Oil_dataout, wire_ni0il_dataout, ~((~ reset_n)));
	and(wire_n0OiO_dataout, wire_ni0iO_dataout, ~((~ reset_n)));
	and(wire_n0Oli_dataout, wire_ni0li_dataout, ~((~ reset_n)));
	and(wire_n0Oll_dataout, wire_ni0ll_dataout, ~((~ reset_n)));
	and(wire_n0OlO_dataout, wire_ni0lO_dataout, ~((~ reset_n)));
	and(wire_n0OOi_dataout, wire_ni0Oi_dataout, ~((~ reset_n)));
	and(wire_n0OOl_dataout, wire_ni0Ol_dataout, ~((~ reset_n)));
	and(wire_n0OOO_dataout, wire_ni0OO_dataout, ~((~ reset_n)));
	assign		wire_n100i_dataout = (clken === 1'b1) ? nliOli : nlllil;
	assign		wire_n100l_dataout = (clken === 1'b1) ? nliOiO : nlllii;
	assign		wire_n100O_dataout = (clken === 1'b1) ? nliOil : nlll0O;
	assign		wire_n101i_dataout = (clken === 1'b1) ? nliOOi : nlllll;
	assign		wire_n101l_dataout = (clken === 1'b1) ? nliOlO : nlllli;
	assign		wire_n101O_dataout = (clken === 1'b1) ? nliOll : nllliO;
	assign		wire_n10ii_dataout = (clken === 1'b1) ? nliOii : nlll0l;
	assign		wire_n10il_dataout = (clken === 1'b1) ? nliO0O : nlll0i;
	assign		wire_n10iO_dataout = (clken === 1'b1) ? nliO0l : nlll1O;
	assign		wire_n10li_dataout = (clken === 1'b1) ? nliO0i : nlll1l;
	assign		wire_n10ll_dataout = (clken === 1'b1) ? nliO1O : nlll1i;
	assign		wire_n10lO_dataout = (clken === 1'b1) ? nliO1l : nlliOO;
	assign		wire_n10Oi_dataout = (clken === 1'b1) ? nliO1i : nlliOl;
	assign		wire_n10Ol_dataout = (clken === 1'b1) ? nlilOO : nlliOi;
	assign		wire_n10OO_dataout = (clken === 1'b1) ? nlilOl : nllilO;
	assign		wire_n110i_dataout = (clken === 1'b1) ? nll1li : n001l;
	assign		wire_n110l_dataout = (clken === 1'b1) ? nll1iO : nllOii;
	assign		wire_n110O_dataout = (clken === 1'b1) ? nll1il : nllO0O;
	and(wire_n111i_dataout, wire_n01lO_dataout, ~((~ reset_n)));
	and(wire_n111l_dataout, wire_n01Oi_dataout, ~((~ reset_n)));
	and(wire_n111O_dataout, wire_n01Ol_dataout, ~((~ reset_n)));
	assign		wire_n11i_dataout = (clken === 1'b1) ? n0iii : nliii;
	assign		wire_n11ii_dataout = (clken === 1'b1) ? nll1ii : nllO0l;
	assign		wire_n11il_dataout = (clken === 1'b1) ? nll10O : nllO0i;
	assign		wire_n11iO_dataout = (clken === 1'b1) ? nll10l : nllO1O;
	assign		wire_n11l_dataout = (clken === 1'b1) ? n0i0O : nli0O;
	assign		wire_n11li_dataout = (clken === 1'b1) ? nll10i : nllO1l;
	assign		wire_n11ll_dataout = (clken === 1'b1) ? nll11O : nllO1i;
	assign		wire_n11lO_dataout = (clken === 1'b1) ? nll11l : nlllOO;
	assign		wire_n11O_dataout = (clken === 1'b1) ? n0i0l : nli0l;
	assign		wire_n11Oi_dataout = (clken === 1'b1) ? nll11i : nlllOl;
	assign		wire_n11Ol_dataout = (clken === 1'b1) ? nliOOO : nlllOi;
	assign		wire_n11OO_dataout = (clken === 1'b1) ? nliOOl : nllllO;
	assign		wire_n1i0i_dataout = (clken === 1'b1) ? wire_n01OO_o[2] : nlliil;
	assign		wire_n1i0l_dataout = (clken === 1'b1) ? wire_n01OO_o[3] : nlliii;
	assign		wire_n1i0O_dataout = (clken === 1'b1) ? wire_n01OO_o[4] : nlli0O;
	assign		wire_n1i1i_dataout = (clken === 1'b1) ? nlilOi : nllill;
	assign		wire_n1i1l_dataout = (clken === 1'b1) ? wire_n01OO_o[0] : nllili;
	assign		wire_n1i1O_dataout = (clken === 1'b1) ? wire_n01OO_o[1] : nlliiO;
	and(wire_n1ii_dataout, wire_n1il_dataout, ~((~ reset_n)));
	assign		wire_n1iii_dataout = (clken === 1'b1) ? wire_n01OO_o[5] : nlli0l;
	assign		wire_n1iil_dataout = (clken === 1'b1) ? wire_n01OO_o[6] : nlli0i;
	assign		wire_n1iiO_dataout = (clken === 1'b1) ? wire_n01OO_o[7] : nlli1O;
	or(wire_n1il_dataout, n1ll, ((clken & ((((wire_n10l_q[0] & wire_n10l_q[3]) & (~ wire_n10l_q[1])) & (~ wire_n10l_q[2])) & (nillli4 ^ nillli3))) & (nillil6 ^ nillil5)));
	assign		wire_n1ili_dataout = (clken === 1'b1) ? wire_n01OO_o[8] : nlli1l;
	assign		wire_n1ill_dataout = (clken === 1'b1) ? wire_n01OO_o[9] : nlli1i;
	assign		wire_n1ilO_dataout = (clken === 1'b1) ? wire_n01OO_o[10] : nll0OO;
	assign		wire_n1iOi_dataout = (clken === 1'b1) ? wire_n01OO_o[11] : nll0Ol;
	assign		wire_n1iOl_dataout = (clken === 1'b1) ? wire_n01OO_o[12] : nll0Oi;
	assign		wire_n1iOO_dataout = (clken === 1'b1) ? wire_n01OO_o[13] : nll0lO;
	assign		wire_n1l0i_dataout = (clken === 1'b1) ? wire_n001i_o[2] : nll0il;
	assign		wire_n1l0l_dataout = (clken === 1'b1) ? wire_n001i_o[3] : nll0ii;
	assign		wire_n1l0O_dataout = (clken === 1'b1) ? wire_n001i_o[4] : nll00O;
	assign		wire_n1l1i_dataout = (clken === 1'b1) ? (~ wire_n01OO_o[14]) : nll0ll;
	assign		wire_n1l1l_dataout = (clken === 1'b1) ? wire_n001i_o[0] : nll0li;
	assign		wire_n1l1O_dataout = (clken === 1'b1) ? wire_n001i_o[1] : nll0iO;
	assign		wire_n1lii_dataout = (clken === 1'b1) ? wire_n001i_o[5] : nll00l;
	assign		wire_n1lil_dataout = (clken === 1'b1) ? wire_n001i_o[6] : nll00i;
	assign		wire_n1liO_dataout = (clken === 1'b1) ? wire_n001i_o[7] : nll01O;
	assign		wire_n1lli_dataout = (clken === 1'b1) ? wire_n001i_o[8] : nll01l;
	assign		wire_n1lll_dataout = (clken === 1'b1) ? wire_n001i_o[9] : nll01i;
	assign		wire_n1llO_dataout = (clken === 1'b1) ? wire_n001i_o[10] : nll1OO;
	assign		wire_n1lOi_dataout = (clken === 1'b1) ? wire_n001i_o[11] : nll1Ol;
	assign		wire_n1lOl_dataout = (clken === 1'b1) ? wire_n001i_o[12] : nll1Oi;
	assign		wire_n1lOO_dataout = (clken === 1'b1) ? wire_n001i_o[13] : nll1lO;
	assign		wire_n1O0i_dataout = (clken === 1'b1) ? wire_n000i_q_a[2] : nll1il;
	assign		wire_n1O0l_dataout = (clken === 1'b1) ? wire_n000i_q_a[3] : nll1ii;
	assign		wire_n1O0O_dataout = (clken === 1'b1) ? wire_n000i_q_a[4] : nll10O;
	assign		wire_n1O1i_dataout = (clken === 1'b1) ? (~ wire_n001i_o[14]) : nll1ll;
	assign		wire_n1O1l_dataout = (clken === 1'b1) ? wire_n000i_q_a[0] : nll1li;
	assign		wire_n1O1O_dataout = (clken === 1'b1) ? wire_n000i_q_a[1] : nll1iO;
	assign		wire_n1Oii_dataout = (clken === 1'b1) ? wire_n000i_q_a[5] : nll10l;
	assign		wire_n1Oil_dataout = (clken === 1'b1) ? wire_n000i_q_a[6] : nll10i;
	assign		wire_n1OiO_dataout = (clken === 1'b1) ? wire_n000i_q_a[7] : nll11O;
	assign		wire_n1Oli_dataout = (clken === 1'b1) ? wire_n000i_q_a[8] : nll11l;
	assign		wire_n1Oll_dataout = (clken === 1'b1) ? wire_n000i_q_a[9] : nll11i;
	assign		wire_n1OlO_dataout = (clken === 1'b1) ? wire_n000i_q_a[10] : nliOOO;
	assign		wire_n1OOi_dataout = (clken === 1'b1) ? wire_n000i_q_a[11] : nliOOl;
	assign		wire_n1OOl_dataout = (clken === 1'b1) ? wire_n000i_q_a[12] : nliOOi;
	assign		wire_n1OOO_dataout = (clken === 1'b1) ? wire_n000i_q_a[13] : nliOlO;
	assign		wire_ni00i_dataout = (clken === 1'b1) ? wire_nil0i_o : n0i0i;
	assign		wire_ni00l_dataout = (clken === 1'b1) ? wire_nil0l_o : n0i1O;
	assign		wire_ni00O_dataout = (clken === 1'b1) ? wire_nil0O_o : n0i1l;
	assign		wire_ni01i_dataout = (clken === 1'b1) ? wire_nil1i_o : n0iii;
	assign		wire_ni01l_dataout = (clken === 1'b1) ? wire_nil1l_o : n0i0O;
	assign		wire_ni01O_dataout = (clken === 1'b1) ? wire_nil1O_o : n0i0l;
	assign		wire_ni0ii_dataout = (clken === 1'b1) ? wire_nilii_o : n0i1i;
	assign		wire_ni0il_dataout = (clken === 1'b1) ? wire_nilil_o : n00OO;
	assign		wire_ni0iO_dataout = (clken === 1'b1) ? wire_niliO_o : n00Ol;
	assign		wire_ni0li_dataout = (clken === 1'b1) ? wire_nilli_o : n00Oi;
	assign		wire_ni0ll_dataout = (clken === 1'b1) ? wire_nilll_o : n00lO;
	assign		wire_ni0lO_dataout = (clken === 1'b1) ? wire_nillO_o : n00ll;
	assign		wire_ni0Oi_dataout = (clken === 1'b1) ? wire_nilOi_o : n00li;
	assign		wire_ni0Ol_dataout = (clken === 1'b1) ? wire_nilOl_o : n00iO;
	assign		wire_ni0OO_dataout = (clken === 1'b1) ? wire_nilOO_o : n00il;
	assign		wire_ni10i_dataout = (clken === 1'b1) ? wire_nii0i_o : niO0i;
	assign		wire_ni10l_dataout = (clken === 1'b1) ? wire_nii0l_o : n0l1O;
	assign		wire_ni10O_dataout = (clken === 1'b1) ? wire_nii0O_o : n0l1l;
	and(wire_ni11i_dataout, wire_nii1i_dataout, ~((~ reset_n)));
	and(wire_ni11l_dataout, wire_nii1l_dataout, ~((~ reset_n)));
	and(wire_ni11O_dataout, wire_nii1O_dataout, ~((~ reset_n)));
	assign		wire_ni1ii_dataout = (clken === 1'b1) ? wire_niiii_o : n0l1i;
	assign		wire_ni1il_dataout = (clken === 1'b1) ? wire_niiil_o : n0iOO;
	assign		wire_ni1iO_dataout = (clken === 1'b1) ? wire_niiiO_o : n0iOl;
	assign		wire_ni1li_dataout = (clken === 1'b1) ? wire_niili_o : n0iOi;
	assign		wire_ni1ll_dataout = (clken === 1'b1) ? wire_niill_o : n0ilO;
	assign		wire_ni1lO_dataout = (clken === 1'b1) ? wire_niilO_o : n0ill;
	assign		wire_ni1Oi_dataout = (clken === 1'b1) ? wire_niiOi_o : n0ili;
	assign		wire_ni1Ol_dataout = (clken === 1'b1) ? wire_niiOl_o : n0iiO;
	assign		wire_ni1OO_dataout = (clken === 1'b1) ? wire_niiOO_o : n0iil;
	assign		wire_nii1i_dataout = (clken === 1'b1) ? wire_niO1i_o : n00ii;
	assign		wire_nii1l_dataout = (clken === 1'b1) ? wire_niO1l_o : n000O;
	assign		wire_nii1O_dataout = (clken === 1'b1) ? wire_niO1O_o : n000l;
	and(wire_nilOlO_dataout, wire_niO01i_dataout, ~((~ reset_n)));
	and(wire_nilOOi_dataout, wire_niO01l_dataout, ~((~ reset_n)));
	and(wire_nilOOl_dataout, wire_niO01O_dataout, ~((~ reset_n)));
	and(wire_nilOOO_dataout, wire_niO00i_dataout, ~((~ reset_n)));
	assign		wire_niO00i_dataout = (clken === 1'b1) ? nl0ilO : nilO0i;
	assign		wire_niO00l_dataout = (clken === 1'b1) ? nl0ill : nilO0l;
	assign		wire_niO00O_dataout = (clken === 1'b1) ? nl0ili : nilO0O;
	assign		wire_niO01i_dataout = (clken === 1'b1) ? niO1Oi : nilO1i;
	assign		wire_niO01l_dataout = (clken === 1'b1) ? niO1Ol : nilO1l;
	assign		wire_niO01O_dataout = (clken === 1'b1) ? niO1OO : nilO1O;
	assign		wire_niO0ii_dataout = (clken === 1'b1) ? nilO0i : nilOii;
	assign		wire_niO0il_dataout = (clken === 1'b1) ? nilO0l : nilOil;
	assign		wire_niO0iO_dataout = (clken === 1'b1) ? nilO0O : nilOiO;
	assign		wire_niO0li_dataout = (clken === 1'b1) ? nilOii : nilOli;
	assign		wire_niO0ll_dataout = (clken === 1'b1) ? nilOil : nilOll;
	assign		wire_niO0lO_dataout = (clken === 1'b1) ? nilOiO : niO1lO;
	assign		wire_niO0Oi_dataout = (clken === 1'b1) ? nilOli : niO1Oi;
	assign		wire_niO0Ol_dataout = (clken === 1'b1) ? nilOll : niO1Ol;
	assign		wire_niO0OO_dataout = (clken === 1'b1) ? niO1lO : niO1OO;
	and(wire_niO10i_dataout, wire_niO0il_dataout, ~((~ reset_n)));
	and(wire_niO10l_dataout, wire_niO0iO_dataout, ~((~ reset_n)));
	and(wire_niO10O_dataout, wire_niO0li_dataout, ~((~ reset_n)));
	and(wire_niO11i_dataout, wire_niO00l_dataout, ~((~ reset_n)));
	and(wire_niO11l_dataout, wire_niO00O_dataout, ~((~ reset_n)));
	and(wire_niO11O_dataout, wire_niO0ii_dataout, ~((~ reset_n)));
	and(wire_niO1ii_dataout, wire_niO0ll_dataout, ~((~ reset_n)));
	and(wire_niO1il_dataout, wire_niO0lO_dataout, ~((~ reset_n)));
	and(wire_niO1iO_dataout, wire_niO0Oi_dataout, ~((~ reset_n)));
	and(wire_niO1li_dataout, wire_niO0Ol_dataout, ~((~ reset_n)));
	and(wire_niO1ll_dataout, wire_niO0OO_dataout, ~((~ reset_n)));
	and(wire_niOO0i_dataout, wire_nl100i_dataout, ~((~ reset_n)));
	and(wire_niOO0l_dataout, wire_nl100l_dataout, ~((~ reset_n)));
	and(wire_niOO0O_dataout, wire_nl100O_dataout, ~((~ reset_n)));
	and(wire_niOO1i_dataout, wire_nl101i_dataout, ~((~ reset_n)));
	and(wire_niOO1l_dataout, wire_nl101l_dataout, ~((~ reset_n)));
	and(wire_niOO1O_dataout, wire_nl101O_dataout, ~((~ reset_n)));
	and(wire_niOOii_dataout, wire_nl10ii_dataout, ~((~ reset_n)));
	and(wire_niOOil_dataout, wire_nl10il_dataout, ~((~ reset_n)));
	and(wire_niOOiO_dataout, wire_nl10iO_dataout, ~((~ reset_n)));
	and(wire_niOOli_dataout, wire_nl10li_dataout, ~((~ reset_n)));
	and(wire_niOOll_dataout, wire_nl10ll_dataout, ~((~ reset_n)));
	and(wire_niOOlO_dataout, wire_nl10lO_dataout, ~((~ reset_n)));
	and(wire_niOOOi_dataout, wire_nl10Oi_dataout, ~((~ reset_n)));
	and(wire_niOOOl_dataout, wire_nl10Ol_dataout, ~((~ reset_n)));
	and(wire_niOOOO_dataout, wire_nl10OO_dataout, ~((~ reset_n)));
	assign		wire_nl000i_dataout = (clken === 1'b1) ? nl1O1l : nl1O1i;
	assign		wire_nl000l_dataout = (clken === 1'b1) ? nl1O1i : nl1lOO;
	assign		wire_nl000O_dataout = (clken === 1'b1) ? nl1lOO : nl1lOl;
	assign		wire_nl001i_dataout = (clken === 1'b1) ? wire_nl0i0i_o[3] : nl1O0i;
	assign		wire_nl001l_dataout = (clken === 1'b1) ? wire_nl0i0i_o[4] : nl1O1O;
	assign		wire_nl001O_dataout = (clken === 1'b1) ? ((nl1l1O ^ nl1l1l) ^ (nl1lOl ^ nl1l0l)) : nl1O1l;
	assign		wire_nl00i_dataout = (clken === 1'b1) ? n0i0i : nli0i;
	assign		wire_nl00ii_dataout = (clken === 1'b1) ? nl1lOl : nl1lOi;
	assign		wire_nl00il_dataout = (clken === 1'b1) ? nl1lOi : nl1llO;
	assign		wire_nl00iO_dataout = (clken === 1'b1) ? nl1llO : nl1lll;
	assign		wire_nl00l_dataout = (clken === 1'b1) ? n0i1O : nl11O;
	assign		wire_nl00li_dataout = (clken === 1'b1) ? nl1lll : nl1lli;
	assign		wire_nl00ll_dataout = (clken === 1'b1) ? nl1lli : nl1liO;
	assign		wire_nl00lO_dataout = (clken === 1'b1) ? nl1liO : nl1lil;
	assign		wire_nl00O_dataout = (clken === 1'b1) ? n0i1l : nl11l;
	assign		wire_nl00Oi_dataout = (clken === 1'b1) ? nl1lil : nl1lii;
	assign		wire_nl00Ol_dataout = (clken === 1'b1) ? nl1lii : nl1l0O;
	assign		wire_nl00OO_dataout = (clken === 1'b1) ? nl1l0O : nl1l0l;
	or(wire_nl010i_dataout, wire_nl00li_dataout, (~ reset_n));
	and(wire_nl010l_dataout, wire_nl00ll_dataout, ~((~ reset_n)));
	or(wire_nl010O_dataout, wire_nl00lO_dataout, (~ reset_n));
	or(wire_nl011i_dataout, wire_nl00ii_dataout, (~ reset_n));
	and(wire_nl011l_dataout, wire_nl00il_dataout, ~((~ reset_n)));
	or(wire_nl011O_dataout, wire_nl00iO_dataout, (~ reset_n));
	and(wire_nl01i_dataout, wire_nli1i_dataout, ~((~ reset_n)));
	and(wire_nl01ii_dataout, wire_nl00Oi_dataout, ~((~ reset_n)));
	or(wire_nl01il_dataout, wire_nl00Ol_dataout, (~ reset_n));
	or(wire_nl01iO_dataout, wire_nl00OO_dataout, (~ reset_n));
	and(wire_nl01l_dataout, wire_nli1l_dataout, ~((~ reset_n)));
	and(wire_nl01li_dataout, wire_nl0i1i_dataout, ~((~ reset_n)));
	and(wire_nl01ll_dataout, wire_nl0i1l_dataout, ~((~ reset_n)));
	or(wire_nl01lO_dataout, wire_nl0i1O_dataout, (~ reset_n));
	and(wire_nl01O_dataout, wire_nli1O_dataout, ~((~ reset_n)));
	assign		wire_nl01Oi_dataout = (clken === 1'b1) ? wire_nl0i0i_o[0] : nl0iil;
	assign		wire_nl01Ol_dataout = (clken === 1'b1) ? wire_nl0i0i_o[1] : nl1O0O;
	assign		wire_nl01OO_dataout = (clken === 1'b1) ? wire_nl0i0i_o[2] : nl1O0l;
	assign		wire_nl0i1i_dataout = (clken === 1'b1) ? nl1l0l : nl1l0i;
	assign		wire_nl0i1l_dataout = (clken === 1'b1) ? nl1l0i : nl1l1O;
	assign		wire_nl0i1O_dataout = (clken === 1'b1) ? nl1l1O : nl1l1l;
	assign		wire_nl0ii_dataout = (clken === 1'b1) ? n0i1i : nl11i;
	assign		wire_nl0il_dataout = (clken === 1'b1) ? n00OO : niOOO;
	assign		wire_nl0iO_dataout = (clken === 1'b1) ? n00Ol : niOOl;
	assign		wire_nl0li_dataout = (clken === 1'b1) ? n00Oi : niOOi;
	assign		wire_nl0ll_dataout = (clken === 1'b1) ? n00lO : niOlO;
	and(wire_nl0lli_dataout, wire_nl0Oli_dataout, ~((~ reset_n)));
	and(wire_nl0lll_dataout, wire_nl0Oll_dataout, ~((~ reset_n)));
	and(wire_nl0llO_dataout, wire_nl0OlO_dataout, ~((~ reset_n)));
	assign		wire_nl0lO_dataout = (clken === 1'b1) ? n00ll : niOll;
	and(wire_nl0lOi_dataout, wire_nl0OOi_dataout, ~((~ reset_n)));
	and(wire_nl0lOl_dataout, wire_nl0OOl_dataout, ~((~ reset_n)));
	and(wire_nl0lOO_dataout, wire_nl0OOO_dataout, ~((~ reset_n)));
	and(wire_nl0O0i_dataout, wire_nli10i_dataout, ~((~ reset_n)));
	and(wire_nl0O0l_dataout, wire_nli10l_dataout, ~((~ reset_n)));
	and(wire_nl0O0O_dataout, wire_nli10O_dataout, ~((~ reset_n)));
	and(wire_nl0O1i_dataout, wire_nli11i_dataout, ~((~ reset_n)));
	and(wire_nl0O1l_dataout, wire_nli11l_dataout, ~((~ reset_n)));
	and(wire_nl0O1O_dataout, wire_nli11O_dataout, ~((~ reset_n)));
	assign		wire_nl0Oi_dataout = (clken === 1'b1) ? n00li : niOli;
	and(wire_nl0Oii_dataout, wire_nli1ii_dataout, ~((~ reset_n)));
	and(wire_nl0Oil_dataout, wire_nli1il_dataout, ~((~ reset_n)));
	and(wire_nl0OiO_dataout, wire_nli1iO_dataout, ~((~ reset_n)));
	assign		wire_nl0Ol_dataout = (clken === 1'b1) ? n00iO : niOiO;
	assign		wire_nl0Oli_dataout = (clken === 1'b1) ? wire_nl0iiO_result[5] : nl0liO;
	assign		wire_nl0Oll_dataout = (clken === 1'b1) ? wire_nl0iiO_result[6] : nl0lil;
	assign		wire_nl0OlO_dataout = (clken === 1'b1) ? wire_nl0iiO_result[7] : nl0lii;
	assign		wire_nl0OO_dataout = (clken === 1'b1) ? n00il : niOil;
	assign		wire_nl0OOi_dataout = (clken === 1'b1) ? wire_nl0iiO_result[8] : nl0l0O;
	assign		wire_nl0OOl_dataout = (clken === 1'b1) ? wire_nl0iiO_result[9] : nl0l0l;
	assign		wire_nl0OOO_dataout = (clken === 1'b1) ? wire_nl0iiO_result[10] : nl0l0i;
	assign		wire_nl100i_dataout = (clken === 1'b1) ? phi_inc_i[3] : niOlOi;
	assign		wire_nl100l_dataout = (clken === 1'b1) ? phi_inc_i[4] : niOllO;
	assign		wire_nl100O_dataout = (clken === 1'b1) ? phi_inc_i[5] : niOlll;
	assign		wire_nl101i_dataout = (clken === 1'b1) ? phi_inc_i[0] : nl1l1i;
	assign		wire_nl101l_dataout = (clken === 1'b1) ? phi_inc_i[1] : niOlOO;
	assign		wire_nl101O_dataout = (clken === 1'b1) ? phi_inc_i[2] : niOlOl;
	and(wire_nl10i_dataout, wire_nl00i_dataout, ~((~ reset_n)));
	assign		wire_nl10ii_dataout = (clken === 1'b1) ? phi_inc_i[6] : niOlli;
	assign		wire_nl10il_dataout = (clken === 1'b1) ? phi_inc_i[7] : niOliO;
	assign		wire_nl10iO_dataout = (clken === 1'b1) ? phi_inc_i[8] : niOlil;
	and(wire_nl10l_dataout, wire_nl00l_dataout, ~((~ reset_n)));
	assign		wire_nl10li_dataout = (clken === 1'b1) ? phi_inc_i[9] : niOlii;
	assign		wire_nl10ll_dataout = (clken === 1'b1) ? phi_inc_i[10] : niOl0O;
	assign		wire_nl10lO_dataout = (clken === 1'b1) ? phi_inc_i[11] : niOl0l;
	and(wire_nl10O_dataout, wire_nl00O_dataout, ~((~ reset_n)));
	assign		wire_nl10Oi_dataout = (clken === 1'b1) ? phi_inc_i[12] : niOl0i;
	assign		wire_nl10Ol_dataout = (clken === 1'b1) ? phi_inc_i[13] : niOl1O;
	assign		wire_nl10OO_dataout = (clken === 1'b1) ? phi_inc_i[14] : niOl1l;
	and(wire_nl110i_dataout, wire_nl1i0i_dataout, ~((~ reset_n)));
	and(wire_nl110l_dataout, wire_nl1i0l_dataout, ~((~ reset_n)));
	and(wire_nl110O_dataout, wire_nl1i0O_dataout, ~((~ reset_n)));
	and(wire_nl111i_dataout, wire_nl1i1i_dataout, ~((~ reset_n)));
	and(wire_nl111l_dataout, wire_nl1i1l_dataout, ~((~ reset_n)));
	and(wire_nl111O_dataout, wire_nl1i1O_dataout, ~((~ reset_n)));
	and(wire_nl11ii_dataout, wire_nl1iii_dataout, ~((~ reset_n)));
	and(wire_nl11il_dataout, wire_nl1iil_dataout, ~((~ reset_n)));
	and(wire_nl11iO_dataout, wire_nl1iiO_dataout, ~((~ reset_n)));
	and(wire_nl11li_dataout, wire_nl1ili_dataout, ~((~ reset_n)));
	and(wire_nl11ll_dataout, wire_nl1ill_dataout, ~((~ reset_n)));
	and(wire_nl11lO_dataout, wire_nl1ilO_dataout, ~((~ reset_n)));
	and(wire_nl11Oi_dataout, wire_nl1iOi_dataout, ~((~ reset_n)));
	and(wire_nl11Ol_dataout, wire_nl1iOl_dataout, ~((~ reset_n)));
	and(wire_nl11OO_dataout, wire_nl1iOO_dataout, ~((~ reset_n)));
	assign		wire_nl1i0i_dataout = (clken === 1'b1) ? phi_inc_i[18] : niOiOi;
	assign		wire_nl1i0l_dataout = (clken === 1'b1) ? phi_inc_i[19] : niOilO;
	assign		wire_nl1i0O_dataout = (clken === 1'b1) ? phi_inc_i[20] : niOill;
	assign		wire_nl1i1i_dataout = (clken === 1'b1) ? phi_inc_i[15] : niOl1i;
	assign		wire_nl1i1l_dataout = (clken === 1'b1) ? phi_inc_i[16] : niOiOO;
	assign		wire_nl1i1O_dataout = (clken === 1'b1) ? phi_inc_i[17] : niOiOl;
	and(wire_nl1ii_dataout, wire_nl0ii_dataout, ~((~ reset_n)));
	assign		wire_nl1iii_dataout = (clken === 1'b1) ? phi_inc_i[21] : niOili;
	assign		wire_nl1iil_dataout = (clken === 1'b1) ? phi_inc_i[22] : niOiiO;
	assign		wire_nl1iiO_dataout = (clken === 1'b1) ? phi_inc_i[23] : niOiil;
	and(wire_nl1il_dataout, wire_nl0il_dataout, ~((~ reset_n)));
	assign		wire_nl1ili_dataout = (clken === 1'b1) ? phi_inc_i[24] : niOiii;
	assign		wire_nl1ill_dataout = (clken === 1'b1) ? phi_inc_i[25] : niOi0O;
	assign		wire_nl1ilO_dataout = (clken === 1'b1) ? phi_inc_i[26] : niOi0l;
	and(wire_nl1iO_dataout, wire_nl0iO_dataout, ~((~ reset_n)));
	assign		wire_nl1iOi_dataout = (clken === 1'b1) ? phi_inc_i[27] : niOi0i;
	assign		wire_nl1iOl_dataout = (clken === 1'b1) ? phi_inc_i[28] : niOi1O;
	assign		wire_nl1iOO_dataout = (clken === 1'b1) ? phi_inc_i[29] : niOi1l;
	and(wire_nl1li_dataout, wire_nl0li_dataout, ~((~ reset_n)));
	and(wire_nl1ll_dataout, wire_nl0ll_dataout, ~((~ reset_n)));
	and(wire_nl1lO_dataout, wire_nl0lO_dataout, ~((~ reset_n)));
	and(wire_nl1Oi_dataout, wire_nl0Oi_dataout, ~((~ reset_n)));
	and(wire_nl1Oii_dataout, wire_nl01Oi_dataout, ~((~ reset_n)));
	and(wire_nl1Oil_dataout, wire_nl01Ol_dataout, ~((~ reset_n)));
	and(wire_nl1OiO_dataout, wire_nl01OO_dataout, ~((~ reset_n)));
	and(wire_nl1Ol_dataout, wire_nl0Ol_dataout, ~((~ reset_n)));
	and(wire_nl1Oli_dataout, wire_nl001i_dataout, ~((~ reset_n)));
	and(wire_nl1Oll_dataout, wire_nl001l_dataout, ~((~ reset_n)));
	or(wire_nl1OlO_dataout, wire_nl001O_dataout, (~ reset_n));
	and(wire_nl1OO_dataout, wire_nl0OO_dataout, ~((~ reset_n)));
	and(wire_nl1OOi_dataout, wire_nl000i_dataout, ~((~ reset_n)));
	or(wire_nl1OOl_dataout, wire_nl000l_dataout, (~ reset_n));
	or(wire_nl1OOO_dataout, wire_nl000O_dataout, (~ reset_n));
	and(wire_nli00O_dataout, wire_nlii1O_dataout, ~((~ reset_n)));
	and(wire_nli0ii_dataout, wire_nlii0i_dataout, ~((~ reset_n)));
	and(wire_nli0il_dataout, wire_nlii0l_dataout, ~((~ reset_n)));
	and(wire_nli0iO_dataout, wire_nlii0O_dataout, ~((~ reset_n)));
	and(wire_nli0li_dataout, wire_nliiii_dataout, ~((~ reset_n)));
	and(wire_nli0ll_dataout, wire_nliiil_dataout, ~((~ reset_n)));
	and(wire_nli0lO_dataout, wire_nliiiO_dataout, ~((~ reset_n)));
	and(wire_nli0Oi_dataout, wire_nliili_dataout, ~((~ reset_n)));
	and(wire_nli0Ol_dataout, wire_nliill_dataout, ~((~ reset_n)));
	and(wire_nli0OO_dataout, wire_nliilO_dataout, ~((~ reset_n)));
	assign		wire_nli10i_dataout = (clken === 1'b1) ? wire_nl0iiO_result[14] : nl0iOO;
	assign		wire_nli10l_dataout = (clken === 1'b1) ? wire_nl0iiO_result[15] : nl0iOl;
	assign		wire_nli10O_dataout = (clken === 1'b1) ? wire_nl0iiO_result[16] : nl0iOi;
	assign		wire_nli11i_dataout = (clken === 1'b1) ? wire_nl0iiO_result[11] : nl0l1O;
	assign		wire_nli11l_dataout = (clken === 1'b1) ? wire_nl0iiO_result[12] : nl0l1l;
	assign		wire_nli11O_dataout = (clken === 1'b1) ? wire_nl0iiO_result[13] : nl0l1i;
	assign		wire_nli1i_dataout = (clken === 1'b1) ? n00ii : niOii;
	assign		wire_nli1ii_dataout = (clken === 1'b1) ? wire_nl0iiO_result[17] : nl0ilO;
	assign		wire_nli1il_dataout = (clken === 1'b1) ? wire_nl0iiO_result[18] : nl0ill;
	assign		wire_nli1iO_dataout = (clken === 1'b1) ? wire_nl0iiO_result[19] : nl0ili;
	assign		wire_nli1l_dataout = (clken === 1'b1) ? n000O : niO0O;
	assign		wire_nli1O_dataout = (clken === 1'b1) ? n000l : niO0l;
	assign		wire_nlii0i_dataout = (clken === 1'b1) ? wire_nlil1i_dataout : nli00l;
	assign		wire_nlii0l_dataout = (clken === 1'b1) ? wire_nlil1l_dataout : nli00i;
	assign		wire_nlii0O_dataout = (clken === 1'b1) ? wire_nlil1O_dataout : nli01O;
	and(wire_nlii1i_dataout, wire_nliiOi_dataout, ~((~ reset_n)));
	and(wire_nlii1l_dataout, wire_nliiOl_dataout, ~((~ reset_n)));
	assign		wire_nlii1O_dataout = (clken === 1'b1) ? wire_nliiOO_dataout : nlillO;
	assign		wire_nliiii_dataout = (clken === 1'b1) ? wire_nlil0i_dataout : nli01l;
	assign		wire_nliiil_dataout = (clken === 1'b1) ? wire_nlil0l_dataout : nli01i;
	assign		wire_nliiiO_dataout = (clken === 1'b1) ? wire_nlil0O_dataout : nli1OO;
	assign		wire_nliili_dataout = (clken === 1'b1) ? wire_nlilii_dataout : nli1Ol;
	assign		wire_nliill_dataout = (clken === 1'b1) ? wire_nlilil_dataout : nli1Oi;
	assign		wire_nliilO_dataout = (clken === 1'b1) ? wire_nliliO_dataout : nli1lO;
	assign		wire_nliiOi_dataout = (clken === 1'b1) ? wire_nlilli_dataout : nli1ll;
	assign		wire_nliiOl_dataout = (clken === 1'b1) ? wire_nlilll_dataout : nli1li;
	assign		wire_nliiOO_dataout = ((~ nl0ilO) === 1'b1) ? nl0liO : (~ nl0liO);
	assign		wire_nlil0i_dataout = ((~ nl0ilO) === 1'b1) ? nl0l0l : (~ nl0l0l);
	assign		wire_nlil0l_dataout = ((~ nl0ilO) === 1'b1) ? nl0l0i : (~ nl0l0i);
	assign		wire_nlil0O_dataout = ((~ nl0ilO) === 1'b1) ? nl0l1O : (~ nl0l1O);
	assign		wire_nlil1i_dataout = ((~ nl0ilO) === 1'b1) ? nl0lil : (~ nl0lil);
	assign		wire_nlil1l_dataout = ((~ nl0ilO) === 1'b1) ? nl0lii : (~ nl0lii);
	assign		wire_nlil1O_dataout = ((~ nl0ilO) === 1'b1) ? nl0l0O : (~ nl0l0O);
	assign		wire_nlilii_dataout = ((~ nl0ilO) === 1'b1) ? nl0l1l : (~ nl0l1l);
	assign		wire_nlilil_dataout = ((~ nl0ilO) === 1'b1) ? nl0l1i : (~ nl0l1i);
	assign		wire_nliliO_dataout = ((~ nl0ilO) === 1'b1) ? nl0iOO : (~ nl0iOO);
	assign		wire_nlilli_dataout = ((~ nl0ilO) === 1'b1) ? nl0iOl : (~ nl0iOl);
	assign		wire_nlilll_dataout = ((~ nl0ilO) === 1'b1) ? nl0iOi : (~ nl0iOi);
	and(wire_nll0i_dataout, wire_nlO0i_dataout, ~((~ reset_n)));
	and(wire_nll0l_dataout, wire_nlO0l_dataout, ~((~ reset_n)));
	and(wire_nll0O_dataout, wire_nlO0O_dataout, ~((~ reset_n)));
	and(wire_nllii_dataout, wire_nlOii_dataout, ~((~ reset_n)));
	and(wire_nllil_dataout, wire_nlOil_dataout, ~((~ reset_n)));
	and(wire_nlliO_dataout, wire_nlOiO_dataout, ~((~ reset_n)));
	and(wire_nllli_dataout, wire_nlOli_dataout, ~((~ reset_n)));
	and(wire_nllll_dataout, wire_nlOll_dataout, ~((~ reset_n)));
	and(wire_nlllO_dataout, wire_nlOlO_dataout, ~((~ reset_n)));
	and(wire_nllOi_dataout, wire_nlOOi_dataout, ~((~ reset_n)));
	and(wire_nllOil_dataout, wire_n110i_dataout, ~((~ reset_n)));
	and(wire_nllOiO_dataout, wire_n110l_dataout, ~((~ reset_n)));
	and(wire_nllOl_dataout, wire_nlOOl_dataout, ~((~ reset_n)));
	and(wire_nllOli_dataout, wire_n110O_dataout, ~((~ reset_n)));
	and(wire_nllOll_dataout, wire_n11ii_dataout, ~((~ reset_n)));
	and(wire_nllOlO_dataout, wire_n11il_dataout, ~((~ reset_n)));
	and(wire_nllOO_dataout, wire_nlOOO_dataout, ~((~ reset_n)));
	and(wire_nllOOi_dataout, wire_n11iO_dataout, ~((~ reset_n)));
	and(wire_nllOOl_dataout, wire_n11li_dataout, ~((~ reset_n)));
	and(wire_nllOOO_dataout, wire_n11ll_dataout, ~((~ reset_n)));
	and(wire_nlO00i_dataout, wire_n10OO_dataout, ~((~ reset_n)));
	and(wire_nlO00l_dataout, wire_n1i1i_dataout, ~((~ reset_n)));
	and(wire_nlO00O_dataout, wire_n1i1l_dataout, ~((~ reset_n)));
	and(wire_nlO01i_dataout, wire_n10lO_dataout, ~((~ reset_n)));
	and(wire_nlO01l_dataout, wire_n10Oi_dataout, ~((~ reset_n)));
	and(wire_nlO01O_dataout, wire_n10Ol_dataout, ~((~ reset_n)));
	assign		wire_nlO0i_dataout = (clken === 1'b1) ? niO0i : n10i;
	and(wire_nlO0ii_dataout, wire_n1i1O_dataout, ~((~ reset_n)));
	and(wire_nlO0il_dataout, wire_n1i0i_dataout, ~((~ reset_n)));
	and(wire_nlO0iO_dataout, wire_n1i0l_dataout, ~((~ reset_n)));
	assign		wire_nlO0l_dataout = (clken === 1'b1) ? n0l1O : nll1O;
	and(wire_nlO0li_dataout, wire_n1i0O_dataout, ~((~ reset_n)));
	and(wire_nlO0ll_dataout, wire_n1iii_dataout, ~((~ reset_n)));
	and(wire_nlO0lO_dataout, wire_n1iil_dataout, ~((~ reset_n)));
	assign		wire_nlO0O_dataout = (clken === 1'b1) ? n0l1l : nll1l;
	and(wire_nlO0Oi_dataout, wire_n1iiO_dataout, ~((~ reset_n)));
	and(wire_nlO0Ol_dataout, wire_n1ili_dataout, ~((~ reset_n)));
	and(wire_nlO0OO_dataout, wire_n1ill_dataout, ~((~ reset_n)));
	and(wire_nlO10i_dataout, wire_n11OO_dataout, ~((~ reset_n)));
	and(wire_nlO10l_dataout, wire_n101i_dataout, ~((~ reset_n)));
	and(wire_nlO10O_dataout, wire_n101l_dataout, ~((~ reset_n)));
	and(wire_nlO11i_dataout, wire_n11lO_dataout, ~((~ reset_n)));
	and(wire_nlO11l_dataout, wire_n11Oi_dataout, ~((~ reset_n)));
	and(wire_nlO11O_dataout, wire_n11Ol_dataout, ~((~ reset_n)));
	and(wire_nlO1i_dataout, wire_n11i_dataout, ~((~ reset_n)));
	and(wire_nlO1ii_dataout, wire_n101O_dataout, ~((~ reset_n)));
	and(wire_nlO1il_dataout, wire_n100i_dataout, ~((~ reset_n)));
	and(wire_nlO1iO_dataout, wire_n100l_dataout, ~((~ reset_n)));
	and(wire_nlO1l_dataout, wire_n11l_dataout, ~((~ reset_n)));
	and(wire_nlO1li_dataout, wire_n100O_dataout, ~((~ reset_n)));
	and(wire_nlO1ll_dataout, wire_n10ii_dataout, ~((~ reset_n)));
	and(wire_nlO1lO_dataout, wire_n10il_dataout, ~((~ reset_n)));
	and(wire_nlO1O_dataout, wire_n11O_dataout, ~((~ reset_n)));
	and(wire_nlO1Oi_dataout, wire_n10iO_dataout, ~((~ reset_n)));
	and(wire_nlO1Ol_dataout, wire_n10li_dataout, ~((~ reset_n)));
	and(wire_nlO1OO_dataout, wire_n10ll_dataout, ~((~ reset_n)));
	and(wire_nlOi0i_dataout, wire_n1iOO_dataout, ~((~ reset_n)));
	and(wire_nlOi0l_dataout, wire_n1l1i_dataout, ~((~ reset_n)));
	and(wire_nlOi0O_dataout, wire_n1l1l_dataout, ~((~ reset_n)));
	and(wire_nlOi1i_dataout, wire_n1ilO_dataout, ~((~ reset_n)));
	and(wire_nlOi1l_dataout, wire_n1iOi_dataout, ~((~ reset_n)));
	and(wire_nlOi1O_dataout, wire_n1iOl_dataout, ~((~ reset_n)));
	assign		wire_nlOii_dataout = (clken === 1'b1) ? n0l1i : nll1i;
	and(wire_nlOiii_dataout, wire_n1l1O_dataout, ~((~ reset_n)));
	and(wire_nlOiil_dataout, wire_n1l0i_dataout, ~((~ reset_n)));
	and(wire_nlOiiO_dataout, wire_n1l0l_dataout, ~((~ reset_n)));
	assign		wire_nlOil_dataout = (clken === 1'b1) ? n0iOO : nliOO;
	and(wire_nlOili_dataout, wire_n1l0O_dataout, ~((~ reset_n)));
	and(wire_nlOill_dataout, wire_n1lii_dataout, ~((~ reset_n)));
	and(wire_nlOilO_dataout, wire_n1lil_dataout, ~((~ reset_n)));
	assign		wire_nlOiO_dataout = (clken === 1'b1) ? n0iOl : nliOl;
	and(wire_nlOiOi_dataout, wire_n1liO_dataout, ~((~ reset_n)));
	and(wire_nlOiOl_dataout, wire_n1lli_dataout, ~((~ reset_n)));
	and(wire_nlOiOO_dataout, wire_n1lll_dataout, ~((~ reset_n)));
	and(wire_nlOl0i_dataout, wire_n1lOO_dataout, ~((~ reset_n)));
	and(wire_nlOl0l_dataout, wire_n1O1i_dataout, ~((~ reset_n)));
	and(wire_nlOl0O_dataout, wire_n1O1l_dataout, ~((~ reset_n)));
	and(wire_nlOl1i_dataout, wire_n1llO_dataout, ~((~ reset_n)));
	and(wire_nlOl1l_dataout, wire_n1lOi_dataout, ~((~ reset_n)));
	and(wire_nlOl1O_dataout, wire_n1lOl_dataout, ~((~ reset_n)));
	assign		wire_nlOli_dataout = (clken === 1'b1) ? n0iOi : nliOi;
	and(wire_nlOlii_dataout, wire_n1O1O_dataout, ~((~ reset_n)));
	and(wire_nlOlil_dataout, wire_n1O0i_dataout, ~((~ reset_n)));
	and(wire_nlOliO_dataout, wire_n1O0l_dataout, ~((~ reset_n)));
	assign		wire_nlOll_dataout = (clken === 1'b1) ? n0ilO : nlilO;
	and(wire_nlOlli_dataout, wire_n1O0O_dataout, ~((~ reset_n)));
	and(wire_nlOlll_dataout, wire_n1Oii_dataout, ~((~ reset_n)));
	and(wire_nlOllO_dataout, wire_n1Oil_dataout, ~((~ reset_n)));
	assign		wire_nlOlO_dataout = (clken === 1'b1) ? n0ill : nlill;
	and(wire_nlOlOi_dataout, wire_n1OiO_dataout, ~((~ reset_n)));
	and(wire_nlOlOl_dataout, wire_n1Oli_dataout, ~((~ reset_n)));
	and(wire_nlOlOO_dataout, wire_n1Oll_dataout, ~((~ reset_n)));
	and(wire_nlOO0i_dataout, wire_n1OOO_dataout, ~((~ reset_n)));
	and(wire_nlOO0l_dataout, wire_n011i_dataout, ~((~ reset_n)));
	and(wire_nlOO0O_dataout, wire_n011l_dataout, ~((~ reset_n)));
	and(wire_nlOO1i_dataout, wire_n1OlO_dataout, ~((~ reset_n)));
	and(wire_nlOO1l_dataout, wire_n1OOi_dataout, ~((~ reset_n)));
	and(wire_nlOO1O_dataout, wire_n1OOl_dataout, ~((~ reset_n)));
	assign		wire_nlOOi_dataout = (clken === 1'b1) ? n0ili : nlili;
	and(wire_nlOOii_dataout, wire_n011O_dataout, ~((~ reset_n)));
	and(wire_nlOOil_dataout, wire_n010i_dataout, ~((~ reset_n)));
	and(wire_nlOOiO_dataout, wire_n010l_dataout, ~((~ reset_n)));
	assign		wire_nlOOl_dataout = (clken === 1'b1) ? n0iiO : nliiO;
	and(wire_nlOOli_dataout, wire_n010O_dataout, ~((~ reset_n)));
	and(wire_nlOOll_dataout, wire_n01ii_dataout, ~((~ reset_n)));
	and(wire_nlOOlO_dataout, wire_n01il_dataout, ~((~ reset_n)));
	assign		wire_nlOOO_dataout = (clken === 1'b1) ? n0iil : nliil;
	and(wire_nlOOOi_dataout, wire_n01iO_dataout, ~((~ reset_n)));
	and(wire_nlOOOl_dataout, wire_n01li_dataout, ~((~ reset_n)));
	and(wire_nlOOOO_dataout, wire_n01ll_dataout, ~((~ reset_n)));
	oper_add   n001i
	( 
	.a({1'b0, (~ nlilOi), (~ nlilOl), (~ nlilOO), (~ nliO1i), (~ nliO1l), (~ nliO1O), (~ nliO0i), (~ nliO0l), (~ nliO0O), (~ nliOii), (~ nliOil), (~ nliOiO), (~ nliOli), (~ nliOll)}),
	.b({{14{1'b0}}, 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_n001i_o));
	defparam
		n001i.sgate_representation = 0,
		n001i.width_a = 15,
		n001i.width_b = 15,
		n001i.width_o = 15;
	oper_add   n01OO
	( 
	.a({1'b0, (~ nliOlO), (~ nliOOi), (~ nliOOl), (~ nliOOO), (~ nll11i), (~ nll11l), (~ nll11O), (~ nll10i), (~ nll10l), (~ nll10O), (~ nll1ii), (~ nll1il), (~ nll1iO), (~ nll1li)}),
	.b({{14{1'b0}}, 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_n01OO_o));
	defparam
		n01OO.sgate_representation = 0,
		n01OO.width_a = 15,
		n01OO.width_b = 15,
		n01OO.width_o = 15;
	oper_add   nl0i0i
	( 
	.a({nl1l1l, nl1l1O, nl1l0i, nl1l0l, nl1l0O}),
	.b({{4{1'b0}}, nl1l1l}),
	.cin(1'b0),
	.cout(),
	.o(wire_nl0i0i_o));
	defparam
		nl0i0i.sgate_representation = 0,
		nl0i0i.width_a = 5,
		nl0i0i.width_b = 5,
		nl0i0i.width_o = 5;
	oper_mux   nii0i
	( 
	.data({n001l, nllliO, nll0li, {2{nllili}}, nll0li, nllliO, n001l}),
	.o(wire_nii0i_o),
	.sel({nilO1O, nilO1l, nilO1i}));
	defparam
		nii0i.width_data = 8,
		nii0i.width_sel = 3;
	oper_mux   nii0l
	( 
	.data({nllOii, nlllil, nll0iO, {2{nlliiO}}, nll0iO, nlllil, nllOii}),
	.o(wire_nii0l_o),
	.sel({nilO1O, nilO1l, nilO1i}));
	defparam
		nii0l.width_data = 8,
		nii0l.width_sel = 3;
	oper_mux   nii0O
	( 
	.data({nllO0O, nlllii, nll0il, {2{nlliil}}, nll0il, nlllii, nllO0O}),
	.o(wire_nii0O_o),
	.sel({nilO1O, nilO1l, nilO1i}));
	defparam
		nii0O.width_data = 8,
		nii0O.width_sel = 3;
	oper_mux   niiii
	( 
	.data({nllO0l, nlll0O, nll0ii, {2{nlliii}}, nll0ii, nlll0O, nllO0l}),
	.o(wire_niiii_o),
	.sel({nilO1O, nilO1l, nilO1i}));
	defparam
		niiii.width_data = 8,
		niiii.width_sel = 3;
	oper_mux   niiil
	( 
	.data({nllO0i, nlll0l, nll00O, {2{nlli0O}}, nll00O, nlll0l, nllO0i}),
	.o(wire_niiil_o),
	.sel({nilO1O, nilO1l, nilO1i}));
	defparam
		niiil.width_data = 8,
		niiil.width_sel = 3;
	oper_mux   niiiO
	( 
	.data({nllO1O, nlll0i, nll00l, {2{nlli0l}}, nll00l, nlll0i, nllO1O}),
	.o(wire_niiiO_o),
	.sel({nilO1O, nilO1l, nilO1i}));
	defparam
		niiiO.width_data = 8,
		niiiO.width_sel = 3;
	oper_mux   niili
	( 
	.data({nllO1l, nlll1O, nll00i, {2{nlli0i}}, nll00i, nlll1O, nllO1l}),
	.o(wire_niili_o),
	.sel({nilO1O, nilO1l, nilO1i}));
	defparam
		niili.width_data = 8,
		niili.width_sel = 3;
	oper_mux   niill
	( 
	.data({nllO1i, nlll1l, nll01O, {2{nlli1O}}, nll01O, nlll1l, nllO1i}),
	.o(wire_niill_o),
	.sel({nilO1O, nilO1l, nilO1i}));
	defparam
		niill.width_data = 8,
		niill.width_sel = 3;
	oper_mux   niilO
	( 
	.data({nlllOO, nlll1i, nll01l, {2{nlli1l}}, nll01l, nlll1i, nlllOO}),
	.o(wire_niilO_o),
	.sel({nilO1O, nilO1l, nilO1i}));
	defparam
		niilO.width_data = 8,
		niilO.width_sel = 3;
	oper_mux   niiOi
	( 
	.data({nlllOl, nlliOO, nll01i, {2{nlli1i}}, nll01i, nlliOO, nlllOl}),
	.o(wire_niiOi_o),
	.sel({nilO1O, nilO1l, nilO1i}));
	defparam
		niiOi.width_data = 8,
		niiOi.width_sel = 3;
	oper_mux   niiOl
	( 
	.data({nlllOi, nlliOl, nll1OO, {2{nll0OO}}, nll1OO, nlliOl, nlllOi}),
	.o(wire_niiOl_o),
	.sel({nilO1O, nilO1l, nilO1i}));
	defparam
		niiOl.width_data = 8,
		niiOl.width_sel = 3;
	oper_mux   niiOO
	( 
	.data({nllllO, nlliOi, nll1Ol, {2{nll0Ol}}, nll1Ol, nlliOi, nllllO}),
	.o(wire_niiOO_o),
	.sel({nilO1O, nilO1l, nilO1i}));
	defparam
		niiOO.width_data = 8,
		niiOO.width_sel = 3;
	oper_mux   nil0i
	( 
	.data({nll0li, {2{nllili}}, nll0li, nllliO, {2{n001l}}, nllliO}),
	.o(wire_nil0i_o),
	.sel({nilO1O, nilO1l, nilO1i}));
	defparam
		nil0i.width_data = 8,
		nil0i.width_sel = 3;
	oper_mux   nil0l
	( 
	.data({nll0iO, {2{nlliiO}}, nll0iO, nlllil, {2{nllOii}}, nlllil}),
	.o(wire_nil0l_o),
	.sel({nilO1O, nilO1l, nilO1i}));
	defparam
		nil0l.width_data = 8,
		nil0l.width_sel = 3;
	oper_mux   nil0O
	( 
	.data({nll0il, {2{nlliil}}, nll0il, nlllii, {2{nllO0O}}, nlllii}),
	.o(wire_nil0O_o),
	.sel({nilO1O, nilO1l, nilO1i}));
	defparam
		nil0O.width_data = 8,
		nil0O.width_sel = 3;
	oper_mux   nil1i
	( 
	.data({nlllll, nllilO, nll1Oi, {2{nll0Oi}}, nll1Oi, nllilO, nlllll}),
	.o(wire_nil1i_o),
	.sel({nilO1O, nilO1l, nilO1i}));
	defparam
		nil1i.width_data = 8,
		nil1i.width_sel = 3;
	oper_mux   nil1l
	( 
	.data({nlllli, nllill, nll1lO, {2{nll0lO}}, nll1lO, nllill, nlllli}),
	.o(wire_nil1l_o),
	.sel({nilO1O, nilO1l, nilO1i}));
	defparam
		nil1l.width_data = 8,
		nil1l.width_sel = 3;
	oper_mux   nil1O
	( 
	.data({{2{1'b0}}, nll1ll, {2{nll0ll}}, nll1ll, {2{1'b0}}}),
	.o(wire_nil1O_o),
	.sel({nilO1O, nilO1l, nilO1i}));
	defparam
		nil1O.width_data = 8,
		nil1O.width_sel = 3;
	oper_mux   nilii
	( 
	.data({nll0ii, {2{nlliii}}, nll0ii, nlll0O, {2{nllO0l}}, nlll0O}),
	.o(wire_nilii_o),
	.sel({nilO1O, nilO1l, nilO1i}));
	defparam
		nilii.width_data = 8,
		nilii.width_sel = 3;
	oper_mux   nilil
	( 
	.data({nll00O, {2{nlli0O}}, nll00O, nlll0l, {2{nllO0i}}, nlll0l}),
	.o(wire_nilil_o),
	.sel({nilO1O, nilO1l, nilO1i}));
	defparam
		nilil.width_data = 8,
		nilil.width_sel = 3;
	oper_mux   niliO
	( 
	.data({nll00l, {2{nlli0l}}, nll00l, nlll0i, {2{nllO1O}}, nlll0i}),
	.o(wire_niliO_o),
	.sel({nilO1O, ((nili0l42 ^ nili0l41) & nilO1l), nilO1i}));
	defparam
		niliO.width_data = 8,
		niliO.width_sel = 3;
	oper_mux   nilli
	( 
	.data({((nili0O40 ^ nili0O39) & nll00i), {2{nlli0i}}, ((niliii38 ^ niliii37) & nll00i), ((niliil36 ^ niliil35) & nlll1O), {2{nllO1l}}, nlll1O}),
	.o(wire_nilli_o),
	.sel({nilO1O, nilO1l, nilO1i}));
	defparam
		nilli.width_data = 8,
		nilli.width_sel = 3;
	oper_mux   nilll
	( 
	.data({nll01O, {2{nlli1O}}, nll01O, nlll1l, ((niliiO34 ^ niliiO33) & nllO1i), ((nilili32 ^ nilili31) & nllO1i), nlll1l}),
	.o(wire_nilll_o),
	.sel({nilO1O, nilO1l, ((nilill30 ^ nilill29) & nilO1i)}));
	defparam
		nilll.width_data = 8,
		nilll.width_sel = 3;
	oper_mux   nillO
	( 
	.data({((nililO28 ^ nililO27) & nll01l), {2{nlli1l}}, nll01l, nlll1i, {2{nlllOO}}, ((niliOi26 ^ niliOi25) & nlll1i)}),
	.o(wire_nillO_o),
	.sel({nilO1O, ((niliOl24 ^ niliOl23) & nilO1l), nilO1i}));
	defparam
		nillO.width_data = 8,
		nillO.width_sel = 3;
	oper_mux   nilOi
	( 
	.data({nll01i, nlli1i, ((niliOO22 ^ niliOO21) & nlli1i), nll01i, ((nill1i20 ^ nill1i19) & nlliOO), {2{nlllOl}}, nlliOO}),
	.o(wire_nilOi_o),
	.sel({nilO1O, nilO1l, nilO1i}));
	defparam
		nilOi.width_data = 8,
		nilOi.width_sel = 3;
	oper_mux   nilOl
	( 
	.data({nll1OO, {2{nll0OO}}, nll1OO, ((nill1l18 ^ nill1l17) & nlliOl), {2{nlllOi}}, nlliOl}),
	.o(wire_nilOl_o),
	.sel({nilO1O, nilO1l, nilO1i}));
	defparam
		nilOl.width_data = 8,
		nilOl.width_sel = 3;
	oper_mux   nilOO
	( 
	.data({((nill1O16 ^ nill1O15) & nll1Ol), nll0Ol, ((nill0i14 ^ nill0i13) & nll0Ol), nll1Ol, nlliOi, {2{nllllO}}, nlliOi}),
	.o(wire_nilOO_o),
	.sel({nilO1O, nilO1l, nilO1i}));
	defparam
		nilOO.width_data = 8,
		nilOO.width_sel = 3;
	oper_mux   niO1i
	( 
	.data({nll1Oi, {2{nll0Oi}}, nll1Oi, nllilO, {2{nlllll}}, nllilO}),
	.o(wire_niO1i_o),
	.sel({nilO1O, nilO1l, nilO1i}));
	defparam
		niO1i.width_data = 8,
		niO1i.width_sel = 3;
	oper_mux   niO1l
	( 
	.data({((nill0l12 ^ nill0l11) & nll1lO), {2{nll0lO}}, nll1lO, nllill, {2{nlllli}}, nllill}),
	.o(wire_niO1l_o),
	.sel({nilO1O, nilO1l, nilO1i}));
	defparam
		niO1l.width_data = 8,
		niO1l.width_sel = 3;
	oper_mux   niO1O
	( 
	.data({((nill0O10 ^ nill0O9) & nll1ll), {2{nll0ll}}, ((nillii8 ^ nillii7) & nll1ll), {4{1'b0}}}),
	.o(wire_niO1O_o),
	.sel({nilO1O, nilO1l, nilO1i}));
	defparam
		niO1O.width_data = 8,
		niO1O.width_sel = 3;
	assign
		fcos_o = {nli0l, nli0O, nliii, nliil, nliiO, nlili, nlill, nlilO, nliOi, nliOl, nliOO, nll1i, nll1l, nll1O, n10i},
		fsin_o = {niO0l, niO0O, niOii, niOil, niOiO, niOli, niOll, niOlO, niOOi, niOOl, niOOO, nl11i, nl11l, nl11O, nli0i},
		nillOi = 1'b1,
		out_valid = n1ll;
endmodule //nco
//synopsys translate_on
//VALID FILE
