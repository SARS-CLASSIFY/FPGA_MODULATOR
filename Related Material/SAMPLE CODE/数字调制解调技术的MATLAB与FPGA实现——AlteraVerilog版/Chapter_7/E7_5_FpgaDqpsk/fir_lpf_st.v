// Generated by FIR Compiler
// ************************************************************
// THIS IS A WIZARD-GENERATED FILE. DO NOT EDIT THIS FILE!
// ************************************************************
// Copyright (C) 1991-2005 Altera Corporation
// Any megafunction design, and related net list (encrypted or decrypted),
// support information, device programming or simulation file, and any other
// associated documentation or information provided by Altera or a partner
// under Altera's Megafunction Partnership Program may be used only to
// program PLD devices (but not masked PLD devices) from Altera.  Any other
// use of such megafunction design, net list, support information, device
// programming or simulation file, or any other related documentation or
// information is prohibited for any other purpose, including, but not
// limited to modification, reverse engineering, de-compiling, or use with
// any other silicon devices, unless such use is explicitly licensed under
// a separate agreement with Altera or a megafunction partner.  Title to
// the intellectual property, including patents, copyrights, trademarks,
// trade secrets, or maskworks, embodied in any such megafunction design,
// net list, support information, device programming or simulation file, or
// any other related documentation or information provided by Altera or a
// megafunction partner, remains with Altera, the megafunction partner, or
// their respective licensors.  No other licenses, including any licenses
// needed under any third party's intellectual property, are provided herein.
// 00
// altera message_off 10036
(* altera_attribute = "-name MESSAGE_DISABLE 15400; -name MESSAGE_DISABLE 14130; -name MESSAGE_DISABLE 10036; -name MESSAGE_DISABLE 12020; -name MESSAGE_DISABLE 12030; -name MESSAGE_DISABLE 12010; -name MESSAGE_DISABLE 12110; -name MESSAGE_DISABLE 14320; -name MESSAGE_DISABLE 13410" *)
module fir_lpf_st (clk, 
              rst, 
              data_in, 
              clk_en, 
              rdy_to_ld, 
              done, 
              fir_result); 
parameter DATA_WIDTH  = 2;
parameter COEF_WIDTH  = 10;
parameter ACCUM_WIDTH = 15;

input clk, rst;
input [DATA_WIDTH-1:0] data_in;
input clk_en;
output rdy_to_ld;
wire rdy_to_ld;
wire rdy_int;
wire data_ld;
output done;
wire done;
wire done_int;
output [ACCUM_WIDTH-1:0] fir_result;
wire addr_low;
assign addr_low = 1'b0;


//--- Parallel TDL Storage ---
wire inv_rst;
assign inv_rst = ~rst;
assign data_ld = rdy_int;
wire [1:0] tdl_0_n;
wire [1:0] tdl_1_n;
wire [1:0] tdl_2_n;
wire [1:0] tdl_3_n;
wire [1:0] tdl_4_n;
wire [1:0] tdl_5_n;
wire [1:0] tdl_6_n;
wire [1:0] tdl_7_n;
wire [1:0] tdl_8_n;
wire [1:0] tdl_9_n;
wire [1:0] tdl_10_n;
wire [1:0] tdl_11_n;
wire [1:0] tdl_12_n;
wire [1:0] tdl_13_n;
wire [1:0] tdl_14_n;
wire [1:0] tdl_15_n;
wire [1:0] tdl_16_n;
wire [1:0] tdl_17_n;
wire [1:0] tdl_18_n;
wire [1:0] tdl_19_n;
wire [1:0] tdl_20_n;
wire [1:0] tdl_21_n;
wire [1:0] tdl_22_n;
wire [1:0] tdl_23_n;
wire [1:0] tdl_24_n;
wire [1:0] tdl_25_n;
wire [1:0] tdl_26_n;
wire [1:0] tdl_27_n;
wire [1:0] tdl_28_n;
wire [1:0] tdl_29_n;
wire [1:0] tdl_30_n;
wire [1:0] tdl_31_n;
wire [1:0] tdl_32_n;


//--- TDL  ---
tdl_da_lc Utdldalc0n (.clk(clk), .clk_en(rdy_int & clk_en),.rst(rst),.data_in(data_in), .data_out(tdl_0_n) );
defparam Utdldalc0n.WIDTH = DATA_WIDTH;
tdl_da_lc Utdldalc1n (.clk(clk), .clk_en(rdy_int & clk_en),.rst(rst),.data_in(tdl_0_n), .data_out(tdl_1_n) );
defparam Utdldalc1n.WIDTH = DATA_WIDTH;
tdl_da_lc Utdldalc2n (.clk(clk), .clk_en(rdy_int & clk_en),.rst(rst),.data_in(tdl_1_n), .data_out(tdl_2_n) );
defparam Utdldalc2n.WIDTH = DATA_WIDTH;
tdl_da_lc Utdldalc3n (.clk(clk), .clk_en(rdy_int & clk_en),.rst(rst),.data_in(tdl_2_n), .data_out(tdl_3_n) );
defparam Utdldalc3n.WIDTH = DATA_WIDTH;
tdl_da_lc Utdldalc4n (.clk(clk), .clk_en(rdy_int & clk_en),.rst(rst),.data_in(tdl_3_n), .data_out(tdl_4_n) );
defparam Utdldalc4n.WIDTH = DATA_WIDTH;
tdl_da_lc Utdldalc5n (.clk(clk), .clk_en(rdy_int & clk_en),.rst(rst),.data_in(tdl_4_n), .data_out(tdl_5_n) );
defparam Utdldalc5n.WIDTH = DATA_WIDTH;
tdl_da_lc Utdldalc6n (.clk(clk), .clk_en(rdy_int & clk_en),.rst(rst),.data_in(tdl_5_n), .data_out(tdl_6_n) );
defparam Utdldalc6n.WIDTH = DATA_WIDTH;
tdl_da_lc Utdldalc7n (.clk(clk), .clk_en(rdy_int & clk_en),.rst(rst),.data_in(tdl_6_n), .data_out(tdl_7_n) );
defparam Utdldalc7n.WIDTH = DATA_WIDTH;
tdl_da_lc Utdldalc8n (.clk(clk), .clk_en(rdy_int & clk_en),.rst(rst),.data_in(tdl_7_n), .data_out(tdl_8_n) );
defparam Utdldalc8n.WIDTH = DATA_WIDTH;
tdl_da_lc Utdldalc9n (.clk(clk), .clk_en(rdy_int & clk_en),.rst(rst),.data_in(tdl_8_n), .data_out(tdl_9_n) );
defparam Utdldalc9n.WIDTH = DATA_WIDTH;
tdl_da_lc Utdldalc10n (.clk(clk), .clk_en(rdy_int & clk_en),.rst(rst),.data_in(tdl_9_n), .data_out(tdl_10_n) );
defparam Utdldalc10n.WIDTH = DATA_WIDTH;
tdl_da_lc Utdldalc11n (.clk(clk), .clk_en(rdy_int & clk_en),.rst(rst),.data_in(tdl_10_n), .data_out(tdl_11_n) );
defparam Utdldalc11n.WIDTH = DATA_WIDTH;
tdl_da_lc Utdldalc12n (.clk(clk), .clk_en(rdy_int & clk_en),.rst(rst),.data_in(tdl_11_n), .data_out(tdl_12_n) );
defparam Utdldalc12n.WIDTH = DATA_WIDTH;
tdl_da_lc Utdldalc13n (.clk(clk), .clk_en(rdy_int & clk_en),.rst(rst),.data_in(tdl_12_n), .data_out(tdl_13_n) );
defparam Utdldalc13n.WIDTH = DATA_WIDTH;
tdl_da_lc Utdldalc14n (.clk(clk), .clk_en(rdy_int & clk_en),.rst(rst),.data_in(tdl_13_n), .data_out(tdl_14_n) );
defparam Utdldalc14n.WIDTH = DATA_WIDTH;
tdl_da_lc Utdldalc15n (.clk(clk), .clk_en(rdy_int & clk_en),.rst(rst),.data_in(tdl_14_n), .data_out(tdl_15_n) );
defparam Utdldalc15n.WIDTH = DATA_WIDTH;
tdl_da_lc Utdldalc16n (.clk(clk), .clk_en(rdy_int & clk_en),.rst(rst),.data_in(tdl_15_n), .data_out(tdl_16_n) );
defparam Utdldalc16n.WIDTH = DATA_WIDTH;
tdl_da_lc Utdldalc17n (.clk(clk), .clk_en(rdy_int & clk_en),.rst(rst),.data_in(tdl_16_n), .data_out(tdl_17_n) );
defparam Utdldalc17n.WIDTH = DATA_WIDTH;
tdl_da_lc Utdldalc18n (.clk(clk), .clk_en(rdy_int & clk_en),.rst(rst),.data_in(tdl_17_n), .data_out(tdl_18_n) );
defparam Utdldalc18n.WIDTH = DATA_WIDTH;
tdl_da_lc Utdldalc19n (.clk(clk), .clk_en(rdy_int & clk_en),.rst(rst),.data_in(tdl_18_n), .data_out(tdl_19_n) );
defparam Utdldalc19n.WIDTH = DATA_WIDTH;
tdl_da_lc Utdldalc20n (.clk(clk), .clk_en(rdy_int & clk_en),.rst(rst),.data_in(tdl_19_n), .data_out(tdl_20_n) );
defparam Utdldalc20n.WIDTH = DATA_WIDTH;
tdl_da_lc Utdldalc21n (.clk(clk), .clk_en(rdy_int & clk_en),.rst(rst),.data_in(tdl_20_n), .data_out(tdl_21_n) );
defparam Utdldalc21n.WIDTH = DATA_WIDTH;
tdl_da_lc Utdldalc22n (.clk(clk), .clk_en(rdy_int & clk_en),.rst(rst),.data_in(tdl_21_n), .data_out(tdl_22_n) );
defparam Utdldalc22n.WIDTH = DATA_WIDTH;
tdl_da_lc Utdldalc23n (.clk(clk), .clk_en(rdy_int & clk_en),.rst(rst),.data_in(tdl_22_n), .data_out(tdl_23_n) );
defparam Utdldalc23n.WIDTH = DATA_WIDTH;
tdl_da_lc Utdldalc24n (.clk(clk), .clk_en(rdy_int & clk_en),.rst(rst),.data_in(tdl_23_n), .data_out(tdl_24_n) );
defparam Utdldalc24n.WIDTH = DATA_WIDTH;
tdl_da_lc Utdldalc25n (.clk(clk), .clk_en(rdy_int & clk_en),.rst(rst),.data_in(tdl_24_n), .data_out(tdl_25_n) );
defparam Utdldalc25n.WIDTH = DATA_WIDTH;
tdl_da_lc Utdldalc26n (.clk(clk), .clk_en(rdy_int & clk_en),.rst(rst),.data_in(tdl_25_n), .data_out(tdl_26_n) );
defparam Utdldalc26n.WIDTH = DATA_WIDTH;
tdl_da_lc Utdldalc27n (.clk(clk), .clk_en(rdy_int & clk_en),.rst(rst),.data_in(tdl_26_n), .data_out(tdl_27_n) );
defparam Utdldalc27n.WIDTH = DATA_WIDTH;
tdl_da_lc Utdldalc28n (.clk(clk), .clk_en(rdy_int & clk_en),.rst(rst),.data_in(tdl_27_n), .data_out(tdl_28_n) );
defparam Utdldalc28n.WIDTH = DATA_WIDTH;
tdl_da_lc Utdldalc29n (.clk(clk), .clk_en(rdy_int & clk_en),.rst(rst),.data_in(tdl_28_n), .data_out(tdl_29_n) );
defparam Utdldalc29n.WIDTH = DATA_WIDTH;
tdl_da_lc Utdldalc30n (.clk(clk), .clk_en(rdy_int & clk_en),.rst(rst),.data_in(tdl_29_n), .data_out(tdl_30_n) );
defparam Utdldalc30n.WIDTH = DATA_WIDTH;
tdl_da_lc Utdldalc31n (.clk(clk), .clk_en(rdy_int & clk_en),.rst(rst),.data_in(tdl_30_n), .data_out(tdl_31_n) );
defparam Utdldalc31n.WIDTH = DATA_WIDTH;
tdl_da_lc Utdldalc32n (.clk(clk), .clk_en(rdy_int & clk_en),.rst(rst),.data_in(tdl_31_n), .data_out(tdl_32_n) );
defparam Utdldalc32n.WIDTH = DATA_WIDTH;


// --- ROM LUTs ---- 
// symmetrical adders ...
wire [2:0] sym_res_0_n;
sadd_cen U_0_sym_add (.clk(clk), .gclk_en(clk_en), .ain(tdl_0_n), .bin(tdl_32_n), .res(sym_res_0_n) );
defparam U_0_sym_add.IN_WIDTH = 2;
defparam U_0_sym_add.PIPE_DEPTH = 1;
wire [2:0] sym_res_1_n;
sadd_cen U_1_sym_add (.clk(clk), .gclk_en(clk_en), .ain(tdl_1_n), .bin(tdl_31_n), .res(sym_res_1_n) );
defparam U_1_sym_add.IN_WIDTH = 2;
defparam U_1_sym_add.PIPE_DEPTH = 1;
wire [2:0] sym_res_2_n;
sadd_cen U_2_sym_add (.clk(clk), .gclk_en(clk_en), .ain(tdl_2_n), .bin(tdl_30_n), .res(sym_res_2_n) );
defparam U_2_sym_add.IN_WIDTH = 2;
defparam U_2_sym_add.PIPE_DEPTH = 1;
wire [2:0] sym_res_3_n;
sadd_cen U_3_sym_add (.clk(clk), .gclk_en(clk_en), .ain(tdl_3_n), .bin(tdl_29_n), .res(sym_res_3_n) );
defparam U_3_sym_add.IN_WIDTH = 2;
defparam U_3_sym_add.PIPE_DEPTH = 1;
wire [2:0] sym_res_4_n;
sadd_cen U_4_sym_add (.clk(clk), .gclk_en(clk_en), .ain(tdl_4_n), .bin(tdl_28_n), .res(sym_res_4_n) );
defparam U_4_sym_add.IN_WIDTH = 2;
defparam U_4_sym_add.PIPE_DEPTH = 1;
wire [2:0] sym_res_5_n;
sadd_cen U_5_sym_add (.clk(clk), .gclk_en(clk_en), .ain(tdl_5_n), .bin(tdl_27_n), .res(sym_res_5_n) );
defparam U_5_sym_add.IN_WIDTH = 2;
defparam U_5_sym_add.PIPE_DEPTH = 1;
wire [2:0] sym_res_6_n;
sadd_cen U_6_sym_add (.clk(clk), .gclk_en(clk_en), .ain(tdl_6_n), .bin(tdl_26_n), .res(sym_res_6_n) );
defparam U_6_sym_add.IN_WIDTH = 2;
defparam U_6_sym_add.PIPE_DEPTH = 1;
wire [2:0] sym_res_7_n;
sadd_cen U_7_sym_add (.clk(clk), .gclk_en(clk_en), .ain(tdl_7_n), .bin(tdl_25_n), .res(sym_res_7_n) );
defparam U_7_sym_add.IN_WIDTH = 2;
defparam U_7_sym_add.PIPE_DEPTH = 1;
wire [2:0] sym_res_8_n;
sadd_cen U_8_sym_add (.clk(clk), .gclk_en(clk_en), .ain(tdl_8_n), .bin(tdl_24_n), .res(sym_res_8_n) );
defparam U_8_sym_add.IN_WIDTH = 2;
defparam U_8_sym_add.PIPE_DEPTH = 1;
wire [2:0] sym_res_9_n;
sadd_cen U_9_sym_add (.clk(clk), .gclk_en(clk_en), .ain(tdl_9_n), .bin(tdl_23_n), .res(sym_res_9_n) );
defparam U_9_sym_add.IN_WIDTH = 2;
defparam U_9_sym_add.PIPE_DEPTH = 1;
wire [2:0] sym_res_10_n;
sadd_cen U_10_sym_add (.clk(clk), .gclk_en(clk_en), .ain(tdl_10_n), .bin(tdl_22_n), .res(sym_res_10_n) );
defparam U_10_sym_add.IN_WIDTH = 2;
defparam U_10_sym_add.PIPE_DEPTH = 1;
wire [2:0] sym_res_11_n;
sadd_cen U_11_sym_add (.clk(clk), .gclk_en(clk_en), .ain(tdl_11_n), .bin(tdl_21_n), .res(sym_res_11_n) );
defparam U_11_sym_add.IN_WIDTH = 2;
defparam U_11_sym_add.PIPE_DEPTH = 1;
wire [2:0] sym_res_12_n;
sadd_cen U_12_sym_add (.clk(clk), .gclk_en(clk_en), .ain(tdl_12_n), .bin(tdl_20_n), .res(sym_res_12_n) );
defparam U_12_sym_add.IN_WIDTH = 2;
defparam U_12_sym_add.PIPE_DEPTH = 1;
wire [2:0] sym_res_13_n;
sadd_cen U_13_sym_add (.clk(clk), .gclk_en(clk_en), .ain(tdl_13_n), .bin(tdl_19_n), .res(sym_res_13_n) );
defparam U_13_sym_add.IN_WIDTH = 2;
defparam U_13_sym_add.PIPE_DEPTH = 1;
wire [2:0] sym_res_14_n;
sadd_cen U_14_sym_add (.clk(clk), .gclk_en(clk_en), .ain(tdl_14_n), .bin(tdl_18_n), .res(sym_res_14_n) );
defparam U_14_sym_add.IN_WIDTH = 2;
defparam U_14_sym_add.PIPE_DEPTH = 1;
wire [2:0] sym_res_15_n;
sadd_cen U_15_sym_add (.clk(clk), .gclk_en(clk_en), .ain(tdl_15_n), .bin(tdl_17_n), .res(sym_res_15_n) );
defparam U_15_sym_add.IN_WIDTH = 2;
defparam U_15_sym_add.PIPE_DEPTH = 1;
wire [2:0] sym_res_16_n;
sadd_cen U_16_sym_add (.clk(clk), .gclk_en(clk_en), .ain(tdl_16_n), .bin(2'd0), .res(sym_res_16_n) );
defparam U_16_sym_add.IN_WIDTH = 2;
defparam U_16_sym_add.PIPE_DEPTH = 1;


wire [11:0] lut_val_0_n_0_pp;
rom_lut_r_cen Ur0_n_0_pp (.clk(clk),.gclk_en(clk_en),.addr_in( {sym_res_5_n[0],sym_res_4_n[0],sym_res_3_n[0],sym_res_2_n[0] } ), .data_out( lut_val_0_n_0_pp[6:0]) ) ;
 defparam Ur0_n_0_pp.DATA_WIDTH = 7;
defparam Ur0_n_0_pp.C0 = 7'd                   0;
defparam Ur0_n_0_pp.C1 = 7'd                 126;
defparam Ur0_n_0_pp.C2 = 7'd                 119;
defparam Ur0_n_0_pp.C3 = 7'd                 117;
defparam Ur0_n_0_pp.C4 = 7'd                 110;
defparam Ur0_n_0_pp.C5 = 7'd                 108;
defparam Ur0_n_0_pp.C6 = 7'd                 101;
defparam Ur0_n_0_pp.C7 = 7'd                  99;
defparam Ur0_n_0_pp.C8 = 7'd                 101;
defparam Ur0_n_0_pp.C9 = 7'd                  99;
defparam Ur0_n_0_pp.CA = 7'd                  92;
defparam Ur0_n_0_pp.CB = 7'd                  90;
defparam Ur0_n_0_pp.CC = 7'd                  83;
defparam Ur0_n_0_pp.CD = 7'd                  81;
defparam Ur0_n_0_pp.CE = 7'd                  74;
defparam Ur0_n_0_pp.CF = 7'd                  72;
assign lut_val_0_n_0_pp[11] = lut_val_0_n_0_pp[6];
assign lut_val_0_n_0_pp[10] = lut_val_0_n_0_pp[6];
assign lut_val_0_n_0_pp[9] = lut_val_0_n_0_pp[6];
assign lut_val_0_n_0_pp[8] = lut_val_0_n_0_pp[6];
assign lut_val_0_n_0_pp[7] = lut_val_0_n_0_pp[6];
wire [11:0] lut_val_0_n_1_pp;
rom_lut_r_cen Ur0_n_1_pp (.clk(clk),.gclk_en(clk_en),.addr_in( {sym_res_5_n[1],sym_res_4_n[1],sym_res_3_n[1],sym_res_2_n[1] } ), .data_out( lut_val_0_n_1_pp[6:0]) ) ;
 defparam Ur0_n_1_pp.DATA_WIDTH = 7;
defparam Ur0_n_1_pp.C0 = 7'd                   0;
defparam Ur0_n_1_pp.C1 = 7'd                 126;
defparam Ur0_n_1_pp.C2 = 7'd                 119;
defparam Ur0_n_1_pp.C3 = 7'd                 117;
defparam Ur0_n_1_pp.C4 = 7'd                 110;
defparam Ur0_n_1_pp.C5 = 7'd                 108;
defparam Ur0_n_1_pp.C6 = 7'd                 101;
defparam Ur0_n_1_pp.C7 = 7'd                  99;
defparam Ur0_n_1_pp.C8 = 7'd                 101;
defparam Ur0_n_1_pp.C9 = 7'd                  99;
defparam Ur0_n_1_pp.CA = 7'd                  92;
defparam Ur0_n_1_pp.CB = 7'd                  90;
defparam Ur0_n_1_pp.CC = 7'd                  83;
defparam Ur0_n_1_pp.CD = 7'd                  81;
defparam Ur0_n_1_pp.CE = 7'd                  74;
defparam Ur0_n_1_pp.CF = 7'd                  72;
assign lut_val_0_n_1_pp[11] = lut_val_0_n_1_pp[6];
assign lut_val_0_n_1_pp[10] = lut_val_0_n_1_pp[6];
assign lut_val_0_n_1_pp[9] = lut_val_0_n_1_pp[6];
assign lut_val_0_n_1_pp[8] = lut_val_0_n_1_pp[6];
assign lut_val_0_n_1_pp[7] = lut_val_0_n_1_pp[6];
wire [11:0] lut_val_0_n_2_pp;
rom_lut_r_cen Ur0_n_2_pp (.clk(clk),.gclk_en(clk_en),.addr_in( {sym_res_5_n[2],sym_res_4_n[2],sym_res_3_n[2],sym_res_2_n[2] } ), .data_out( lut_val_0_n_2_pp[6:0]) ) ;
 defparam Ur0_n_2_pp.DATA_WIDTH = 7;
defparam Ur0_n_2_pp.C0 = 7'd                   0;
defparam Ur0_n_2_pp.C1 = 7'd                   2;
defparam Ur0_n_2_pp.C2 = 7'd                   9;
defparam Ur0_n_2_pp.C3 = 7'd                  11;
defparam Ur0_n_2_pp.C4 = 7'd                  18;
defparam Ur0_n_2_pp.C5 = 7'd                  20;
defparam Ur0_n_2_pp.C6 = 7'd                  27;
defparam Ur0_n_2_pp.C7 = 7'd                  29;
defparam Ur0_n_2_pp.C8 = 7'd                  27;
defparam Ur0_n_2_pp.C9 = 7'd                  29;
defparam Ur0_n_2_pp.CA = 7'd                  36;
defparam Ur0_n_2_pp.CB = 7'd                  38;
defparam Ur0_n_2_pp.CC = 7'd                  45;
defparam Ur0_n_2_pp.CD = 7'd                  47;
defparam Ur0_n_2_pp.CE = 7'd                  54;
defparam Ur0_n_2_pp.CF = 7'd                  56;
assign lut_val_0_n_2_pp[11] = lut_val_0_n_2_pp[6];
assign lut_val_0_n_2_pp[10] = lut_val_0_n_2_pp[6];
assign lut_val_0_n_2_pp[9] = lut_val_0_n_2_pp[6];
assign lut_val_0_n_2_pp[8] = lut_val_0_n_2_pp[6];
assign lut_val_0_n_2_pp[7] = lut_val_0_n_2_pp[6];
wire [11:0] lut_val_1_n_0_pp;
rom_lut_r_cen Ur1_n_0_pp (.clk(clk),.gclk_en(clk_en),.addr_in( {sym_res_10_n[0],sym_res_9_n[0],sym_res_7_n[0],sym_res_6_n[0] } ), .data_out( lut_val_1_n_0_pp[8:0]) ) ;
 defparam Ur1_n_0_pp.DATA_WIDTH = 9;
defparam Ur1_n_0_pp.C0 = 9'd                   0;
defparam Ur1_n_0_pp.C1 = 9'd                 482;
defparam Ur1_n_0_pp.C2 = 9'd                 489;
defparam Ur1_n_0_pp.C3 = 9'd                 459;
defparam Ur1_n_0_pp.C4 = 9'd                  43;
defparam Ur1_n_0_pp.C5 = 9'd                  13;
defparam Ur1_n_0_pp.C6 = 9'd                  20;
defparam Ur1_n_0_pp.C7 = 9'd                 502;
defparam Ur1_n_0_pp.C8 = 9'd                 107;
defparam Ur1_n_0_pp.C9 = 9'd                  77;
defparam Ur1_n_0_pp.CA = 9'd                  84;
defparam Ur1_n_0_pp.CB = 9'd                  54;
defparam Ur1_n_0_pp.CC = 9'd                 150;
defparam Ur1_n_0_pp.CD = 9'd                 120;
defparam Ur1_n_0_pp.CE = 9'd                 127;
defparam Ur1_n_0_pp.CF = 9'd                  97;
assign lut_val_1_n_0_pp[11] = lut_val_1_n_0_pp[8];
assign lut_val_1_n_0_pp[10] = lut_val_1_n_0_pp[8];
assign lut_val_1_n_0_pp[9] = lut_val_1_n_0_pp[8];
wire [11:0] lut_val_1_n_1_pp;
rom_lut_r_cen Ur1_n_1_pp (.clk(clk),.gclk_en(clk_en),.addr_in( {sym_res_10_n[1],sym_res_9_n[1],sym_res_7_n[1],sym_res_6_n[1] } ), .data_out( lut_val_1_n_1_pp[8:0]) ) ;
 defparam Ur1_n_1_pp.DATA_WIDTH = 9;
defparam Ur1_n_1_pp.C0 = 9'd                   0;
defparam Ur1_n_1_pp.C1 = 9'd                 482;
defparam Ur1_n_1_pp.C2 = 9'd                 489;
defparam Ur1_n_1_pp.C3 = 9'd                 459;
defparam Ur1_n_1_pp.C4 = 9'd                  43;
defparam Ur1_n_1_pp.C5 = 9'd                  13;
defparam Ur1_n_1_pp.C6 = 9'd                  20;
defparam Ur1_n_1_pp.C7 = 9'd                 502;
defparam Ur1_n_1_pp.C8 = 9'd                 107;
defparam Ur1_n_1_pp.C9 = 9'd                  77;
defparam Ur1_n_1_pp.CA = 9'd                  84;
defparam Ur1_n_1_pp.CB = 9'd                  54;
defparam Ur1_n_1_pp.CC = 9'd                 150;
defparam Ur1_n_1_pp.CD = 9'd                 120;
defparam Ur1_n_1_pp.CE = 9'd                 127;
defparam Ur1_n_1_pp.CF = 9'd                  97;
assign lut_val_1_n_1_pp[11] = lut_val_1_n_1_pp[8];
assign lut_val_1_n_1_pp[10] = lut_val_1_n_1_pp[8];
assign lut_val_1_n_1_pp[9] = lut_val_1_n_1_pp[8];
wire [11:0] lut_val_1_n_2_pp;
rom_lut_r_cen Ur1_n_2_pp (.clk(clk),.gclk_en(clk_en),.addr_in( {sym_res_10_n[2],sym_res_9_n[2],sym_res_7_n[2],sym_res_6_n[2] } ), .data_out( lut_val_1_n_2_pp[8:0]) ) ;
 defparam Ur1_n_2_pp.DATA_WIDTH = 9;
defparam Ur1_n_2_pp.C0 = 9'd                   0;
defparam Ur1_n_2_pp.C1 = 9'd                  30;
defparam Ur1_n_2_pp.C2 = 9'd                  23;
defparam Ur1_n_2_pp.C3 = 9'd                  53;
defparam Ur1_n_2_pp.C4 = 9'd                 469;
defparam Ur1_n_2_pp.C5 = 9'd                 499;
defparam Ur1_n_2_pp.C6 = 9'd                 492;
defparam Ur1_n_2_pp.C7 = 9'd                  10;
defparam Ur1_n_2_pp.C8 = 9'd                 405;
defparam Ur1_n_2_pp.C9 = 9'd                 435;
defparam Ur1_n_2_pp.CA = 9'd                 428;
defparam Ur1_n_2_pp.CB = 9'd                 458;
defparam Ur1_n_2_pp.CC = 9'd                 362;
defparam Ur1_n_2_pp.CD = 9'd                 392;
defparam Ur1_n_2_pp.CE = 9'd                 385;
defparam Ur1_n_2_pp.CF = 9'd                 415;
assign lut_val_1_n_2_pp[11] = lut_val_1_n_2_pp[8];
assign lut_val_1_n_2_pp[10] = lut_val_1_n_2_pp[8];
assign lut_val_1_n_2_pp[9] = lut_val_1_n_2_pp[8];
wire [11:0] lut_val_2_n_0_pp;
rom_lut_r_cen Ur2_n_0_pp (.clk(clk),.gclk_en(clk_en),.addr_in( {sym_res_14_n[0],sym_res_13_n[0],sym_res_12_n[0],sym_res_11_n[0] } ), .data_out( lut_val_2_n_0_pp[11:0]) ) ;
 defparam Ur2_n_0_pp.DATA_WIDTH = 12;
defparam Ur2_n_0_pp.C0 = 12'd                   0;
defparam Ur2_n_0_pp.C1 = 12'd                 188;
defparam Ur2_n_0_pp.C2 = 12'd                 279;
defparam Ur2_n_0_pp.C3 = 12'd                 467;
defparam Ur2_n_0_pp.C4 = 12'd                 368;
defparam Ur2_n_0_pp.C5 = 12'd                 556;
defparam Ur2_n_0_pp.C6 = 12'd                 647;
defparam Ur2_n_0_pp.C7 = 12'd                 835;
defparam Ur2_n_0_pp.C8 = 12'd                 443;
defparam Ur2_n_0_pp.C9 = 12'd                 631;
defparam Ur2_n_0_pp.CA = 12'd                 722;
defparam Ur2_n_0_pp.CB = 12'd                 910;
defparam Ur2_n_0_pp.CC = 12'd                 811;
defparam Ur2_n_0_pp.CD = 12'd                 999;
defparam Ur2_n_0_pp.CE = 12'd                1090;
defparam Ur2_n_0_pp.CF = 12'd                1278;
wire [11:0] lut_val_2_n_1_pp;
rom_lut_r_cen Ur2_n_1_pp (.clk(clk),.gclk_en(clk_en),.addr_in( {sym_res_14_n[1],sym_res_13_n[1],sym_res_12_n[1],sym_res_11_n[1] } ), .data_out( lut_val_2_n_1_pp[11:0]) ) ;
 defparam Ur2_n_1_pp.DATA_WIDTH = 12;
defparam Ur2_n_1_pp.C0 = 12'd                   0;
defparam Ur2_n_1_pp.C1 = 12'd                 188;
defparam Ur2_n_1_pp.C2 = 12'd                 279;
defparam Ur2_n_1_pp.C3 = 12'd                 467;
defparam Ur2_n_1_pp.C4 = 12'd                 368;
defparam Ur2_n_1_pp.C5 = 12'd                 556;
defparam Ur2_n_1_pp.C6 = 12'd                 647;
defparam Ur2_n_1_pp.C7 = 12'd                 835;
defparam Ur2_n_1_pp.C8 = 12'd                 443;
defparam Ur2_n_1_pp.C9 = 12'd                 631;
defparam Ur2_n_1_pp.CA = 12'd                 722;
defparam Ur2_n_1_pp.CB = 12'd                 910;
defparam Ur2_n_1_pp.CC = 12'd                 811;
defparam Ur2_n_1_pp.CD = 12'd                 999;
defparam Ur2_n_1_pp.CE = 12'd                1090;
defparam Ur2_n_1_pp.CF = 12'd                1278;
wire [11:0] lut_val_2_n_2_pp;
rom_lut_r_cen Ur2_n_2_pp (.clk(clk),.gclk_en(clk_en),.addr_in( {sym_res_14_n[2],sym_res_13_n[2],sym_res_12_n[2],sym_res_11_n[2] } ), .data_out( lut_val_2_n_2_pp[11:0]) ) ;
 defparam Ur2_n_2_pp.DATA_WIDTH = 12;
defparam Ur2_n_2_pp.C0 = 12'd                   0;
defparam Ur2_n_2_pp.C1 = 12'd                3908;
defparam Ur2_n_2_pp.C2 = 12'd                3817;
defparam Ur2_n_2_pp.C3 = 12'd                3629;
defparam Ur2_n_2_pp.C4 = 12'd                3728;
defparam Ur2_n_2_pp.C5 = 12'd                3540;
defparam Ur2_n_2_pp.C6 = 12'd                3449;
defparam Ur2_n_2_pp.C7 = 12'd                3261;
defparam Ur2_n_2_pp.C8 = 12'd                3653;
defparam Ur2_n_2_pp.C9 = 12'd                3465;
defparam Ur2_n_2_pp.CA = 12'd                3374;
defparam Ur2_n_2_pp.CB = 12'd                3186;
defparam Ur2_n_2_pp.CC = 12'd                3285;
defparam Ur2_n_2_pp.CD = 12'd                3097;
defparam Ur2_n_2_pp.CE = 12'd                3006;
defparam Ur2_n_2_pp.CF = 12'd                2818;
wire [11:0] lut_val_3_n_0_pp;
rom_lut_r_cen Ur3_n_0_pp (.clk(clk),.gclk_en(clk_en),.addr_in( {addr_low,addr_low,sym_res_16_n[0],sym_res_15_n[0] } ), .data_out( lut_val_3_n_0_pp[10:0]) ) ;
 defparam Ur3_n_0_pp.DATA_WIDTH = 11;
defparam Ur3_n_0_pp.C0 = 11'd                   0;
defparam Ur3_n_0_pp.C1 = 11'd                 493;
defparam Ur3_n_0_pp.C2 = 11'd                 511;
defparam Ur3_n_0_pp.C3 = 11'd                1004;
defparam Ur3_n_0_pp.C4 = 11'd                   0;
defparam Ur3_n_0_pp.C5 = 11'd                 493;
defparam Ur3_n_0_pp.C6 = 11'd                 511;
defparam Ur3_n_0_pp.C7 = 11'd                1004;
defparam Ur3_n_0_pp.C8 = 11'd                   0;
defparam Ur3_n_0_pp.C9 = 11'd                 493;
defparam Ur3_n_0_pp.CA = 11'd                 511;
defparam Ur3_n_0_pp.CB = 11'd                1004;
defparam Ur3_n_0_pp.CC = 11'd                   0;
defparam Ur3_n_0_pp.CD = 11'd                 493;
defparam Ur3_n_0_pp.CE = 11'd                 511;
defparam Ur3_n_0_pp.CF = 11'd                1004;
assign lut_val_3_n_0_pp[11] = lut_val_3_n_0_pp[10];
wire [11:0] lut_val_3_n_1_pp;
rom_lut_r_cen Ur3_n_1_pp (.clk(clk),.gclk_en(clk_en),.addr_in( {addr_low,addr_low,sym_res_16_n[1],sym_res_15_n[1] } ), .data_out( lut_val_3_n_1_pp[10:0]) ) ;
 defparam Ur3_n_1_pp.DATA_WIDTH = 11;
defparam Ur3_n_1_pp.C0 = 11'd                   0;
defparam Ur3_n_1_pp.C1 = 11'd                 493;
defparam Ur3_n_1_pp.C2 = 11'd                 511;
defparam Ur3_n_1_pp.C3 = 11'd                1004;
defparam Ur3_n_1_pp.C4 = 11'd                   0;
defparam Ur3_n_1_pp.C5 = 11'd                 493;
defparam Ur3_n_1_pp.C6 = 11'd                 511;
defparam Ur3_n_1_pp.C7 = 11'd                1004;
defparam Ur3_n_1_pp.C8 = 11'd                   0;
defparam Ur3_n_1_pp.C9 = 11'd                 493;
defparam Ur3_n_1_pp.CA = 11'd                 511;
defparam Ur3_n_1_pp.CB = 11'd                1004;
defparam Ur3_n_1_pp.CC = 11'd                   0;
defparam Ur3_n_1_pp.CD = 11'd                 493;
defparam Ur3_n_1_pp.CE = 11'd                 511;
defparam Ur3_n_1_pp.CF = 11'd                1004;
assign lut_val_3_n_1_pp[11] = lut_val_3_n_1_pp[10];
wire [11:0] lut_val_3_n_2_pp;
rom_lut_r_cen Ur3_n_2_pp (.clk(clk),.gclk_en(clk_en),.addr_in( {addr_low,addr_low,sym_res_16_n[2],sym_res_15_n[2] } ), .data_out( lut_val_3_n_2_pp[10:0]) ) ;
 defparam Ur3_n_2_pp.DATA_WIDTH = 11;
defparam Ur3_n_2_pp.C0 = 11'd                   0;
defparam Ur3_n_2_pp.C1 = 11'd                1555;
defparam Ur3_n_2_pp.C2 = 11'd                1537;
defparam Ur3_n_2_pp.C3 = 11'd                1044;
defparam Ur3_n_2_pp.C4 = 11'd                   0;
defparam Ur3_n_2_pp.C5 = 11'd                1555;
defparam Ur3_n_2_pp.C6 = 11'd                1537;
defparam Ur3_n_2_pp.C7 = 11'd                1044;
defparam Ur3_n_2_pp.C8 = 11'd                   0;
defparam Ur3_n_2_pp.C9 = 11'd                1555;
defparam Ur3_n_2_pp.CA = 11'd                1537;
defparam Ur3_n_2_pp.CB = 11'd                1044;
defparam Ur3_n_2_pp.CC = 11'd                   0;
defparam Ur3_n_2_pp.CD = 11'd                1555;
defparam Ur3_n_2_pp.CE = 11'd                1537;
defparam Ur3_n_2_pp.CF = 11'd                1044;
assign lut_val_3_n_2_pp[11] = lut_val_3_n_2_pp[10];


// ---- partial product adder tree ----

wire [13:0] lut_0_bit_0_fill;
wire [13:0] lut_0_bit_1_fill;
wire [13:0] lut_0_bit_2_fill;
assign lut_0_bit_0_fill = {lut_val_0_n_0_pp[11], lut_val_0_n_0_pp[11],  lut_val_0_n_0_pp };
assign lut_0_bit_1_fill = {lut_val_0_n_1_pp[11],  lut_val_0_n_1_pp, 1'd0 };
assign lut_0_bit_2_fill = { lut_val_0_n_2_pp, 2'd0 };
wire [14:0] tree_0_pp_l_0_n_0_n;
sadd_lpm_cen Uadd_0_lut_l_0_n_0_n (.clk(clk),  .gclk_en(clk_en), .ain(lut_0_bit_0_fill), .bin(lut_0_bit_1_fill), .res(tree_0_pp_l_0_n_0_n) );
defparam Uadd_0_lut_l_0_n_0_n.IN_WIDTH = 14;
defparam Uadd_0_lut_l_0_n_0_n.PIPE_DEPTH = 1;
wire [14:0] tree_0_pp_l_0_n_1_n;
sadd_lpm_cen Uadd_0_lut_l_0_n_1_n (.clk(clk),  .gclk_en(clk_en), .ain(lut_0_bit_2_fill), .bin(14'd0), .res(tree_0_pp_l_0_n_1_n) );
defparam Uadd_0_lut_l_0_n_1_n.IN_WIDTH = 14;
defparam Uadd_0_lut_l_0_n_1_n.PIPE_DEPTH = 1;

wire [15:0] tree_0_pp_l_1_n_0_n;
sadd_lpm_cen Uadd_0_lut_l_1_n_0_n (.clk(clk),  .gclk_en(clk_en), .ain(tree_0_pp_l_0_n_0_n), .bin(tree_0_pp_l_0_n_1_n), .res(tree_0_pp_l_1_n_0_n) );
defparam Uadd_0_lut_l_1_n_0_n.IN_WIDTH = 15;
defparam Uadd_0_lut_l_1_n_0_n.PIPE_DEPTH = 1;

wire [15:0] lut_val_0_n;
assign lut_val_0_n=tree_0_pp_l_1_n_0_n;


// ---- partial product adder tree ----

wire [13:0] lut_1_bit_0_fill;
wire [13:0] lut_1_bit_1_fill;
wire [13:0] lut_1_bit_2_fill;
assign lut_1_bit_0_fill = {lut_val_1_n_0_pp[11], lut_val_1_n_0_pp[11],  lut_val_1_n_0_pp };
assign lut_1_bit_1_fill = {lut_val_1_n_1_pp[11],  lut_val_1_n_1_pp, 1'd0 };
assign lut_1_bit_2_fill = { lut_val_1_n_2_pp, 2'd0 };
wire [14:0] tree_1_pp_l_0_n_0_n;
sadd_lpm_cen Uadd_1_lut_l_0_n_0_n (.clk(clk),  .gclk_en(clk_en), .ain(lut_1_bit_0_fill), .bin(lut_1_bit_1_fill), .res(tree_1_pp_l_0_n_0_n) );
defparam Uadd_1_lut_l_0_n_0_n.IN_WIDTH = 14;
defparam Uadd_1_lut_l_0_n_0_n.PIPE_DEPTH = 1;
wire [14:0] tree_1_pp_l_0_n_1_n;
sadd_lpm_cen Uadd_1_lut_l_0_n_1_n (.clk(clk),  .gclk_en(clk_en), .ain(lut_1_bit_2_fill), .bin(14'd0), .res(tree_1_pp_l_0_n_1_n) );
defparam Uadd_1_lut_l_0_n_1_n.IN_WIDTH = 14;
defparam Uadd_1_lut_l_0_n_1_n.PIPE_DEPTH = 1;

wire [15:0] tree_1_pp_l_1_n_0_n;
sadd_lpm_cen Uadd_1_lut_l_1_n_0_n (.clk(clk),  .gclk_en(clk_en), .ain(tree_1_pp_l_0_n_0_n), .bin(tree_1_pp_l_0_n_1_n), .res(tree_1_pp_l_1_n_0_n) );
defparam Uadd_1_lut_l_1_n_0_n.IN_WIDTH = 15;
defparam Uadd_1_lut_l_1_n_0_n.PIPE_DEPTH = 1;

wire [15:0] lut_val_1_n;
assign lut_val_1_n=tree_1_pp_l_1_n_0_n;


// ---- partial product adder tree ----

wire [13:0] lut_2_bit_0_fill;
wire [13:0] lut_2_bit_1_fill;
wire [13:0] lut_2_bit_2_fill;
assign lut_2_bit_0_fill = {lut_val_2_n_0_pp[11], lut_val_2_n_0_pp[11],  lut_val_2_n_0_pp };
assign lut_2_bit_1_fill = {lut_val_2_n_1_pp[11],  lut_val_2_n_1_pp, 1'd0 };
assign lut_2_bit_2_fill = { lut_val_2_n_2_pp, 2'd0 };
wire [14:0] tree_2_pp_l_0_n_0_n;
sadd_lpm_cen Uadd_2_lut_l_0_n_0_n (.clk(clk),  .gclk_en(clk_en), .ain(lut_2_bit_0_fill), .bin(lut_2_bit_1_fill), .res(tree_2_pp_l_0_n_0_n) );
defparam Uadd_2_lut_l_0_n_0_n.IN_WIDTH = 14;
defparam Uadd_2_lut_l_0_n_0_n.PIPE_DEPTH = 1;
wire [14:0] tree_2_pp_l_0_n_1_n;
sadd_lpm_cen Uadd_2_lut_l_0_n_1_n (.clk(clk),  .gclk_en(clk_en), .ain(lut_2_bit_2_fill), .bin(14'd0), .res(tree_2_pp_l_0_n_1_n) );
defparam Uadd_2_lut_l_0_n_1_n.IN_WIDTH = 14;
defparam Uadd_2_lut_l_0_n_1_n.PIPE_DEPTH = 1;

wire [15:0] tree_2_pp_l_1_n_0_n;
sadd_lpm_cen Uadd_2_lut_l_1_n_0_n (.clk(clk),  .gclk_en(clk_en), .ain(tree_2_pp_l_0_n_0_n), .bin(tree_2_pp_l_0_n_1_n), .res(tree_2_pp_l_1_n_0_n) );
defparam Uadd_2_lut_l_1_n_0_n.IN_WIDTH = 15;
defparam Uadd_2_lut_l_1_n_0_n.PIPE_DEPTH = 1;

wire [15:0] lut_val_2_n;
assign lut_val_2_n=tree_2_pp_l_1_n_0_n;


// ---- partial product adder tree ----

wire [13:0] lut_3_bit_0_fill;
wire [13:0] lut_3_bit_1_fill;
wire [13:0] lut_3_bit_2_fill;
assign lut_3_bit_0_fill = {lut_val_3_n_0_pp[11], lut_val_3_n_0_pp[11],  lut_val_3_n_0_pp };
assign lut_3_bit_1_fill = {lut_val_3_n_1_pp[11],  lut_val_3_n_1_pp, 1'd0 };
assign lut_3_bit_2_fill = { lut_val_3_n_2_pp, 2'd0 };
wire [14:0] tree_3_pp_l_0_n_0_n;
sadd_lpm_cen Uadd_3_lut_l_0_n_0_n (.clk(clk),  .gclk_en(clk_en), .ain(lut_3_bit_0_fill), .bin(lut_3_bit_1_fill), .res(tree_3_pp_l_0_n_0_n) );
defparam Uadd_3_lut_l_0_n_0_n.IN_WIDTH = 14;
defparam Uadd_3_lut_l_0_n_0_n.PIPE_DEPTH = 1;
wire [14:0] tree_3_pp_l_0_n_1_n;
sadd_lpm_cen Uadd_3_lut_l_0_n_1_n (.clk(clk),  .gclk_en(clk_en), .ain(lut_3_bit_2_fill), .bin(14'd0), .res(tree_3_pp_l_0_n_1_n) );
defparam Uadd_3_lut_l_0_n_1_n.IN_WIDTH = 14;
defparam Uadd_3_lut_l_0_n_1_n.PIPE_DEPTH = 1;

wire [15:0] tree_3_pp_l_1_n_0_n;
sadd_lpm_cen Uadd_3_lut_l_1_n_0_n (.clk(clk),  .gclk_en(clk_en), .ain(tree_3_pp_l_0_n_0_n), .bin(tree_3_pp_l_0_n_1_n), .res(tree_3_pp_l_1_n_0_n) );
defparam Uadd_3_lut_l_1_n_0_n.IN_WIDTH = 15;
defparam Uadd_3_lut_l_1_n_0_n.PIPE_DEPTH = 1;

wire [15:0] lut_val_3_n;
assign lut_val_3_n=tree_3_pp_l_1_n_0_n;


// ---- final adder tree ----

wire [16:0] fin_atree_l_0_n_0_n;
sadd_lpm_cen Uadd_cen_l_0_n_0_n (.clk(clk),  .gclk_en(clk_en), .ain(lut_val_0_n), .bin(lut_val_1_n), .res(fin_atree_l_0_n_0_n) );
defparam Uadd_cen_l_0_n_0_n.IN_WIDTH = 16;
defparam Uadd_cen_l_0_n_0_n.PIPE_DEPTH = 1;
wire [16:0] fin_atree_l_0_n_1_n;
sadd_lpm_cen Uadd_cen_l_0_n_1_n (.clk(clk),  .gclk_en(clk_en), .ain(lut_val_2_n), .bin(lut_val_3_n), .res(fin_atree_l_0_n_1_n) );
defparam Uadd_cen_l_0_n_1_n.IN_WIDTH = 16;
defparam Uadd_cen_l_0_n_1_n.PIPE_DEPTH = 1;

wire [17:0] fin_atree_l_1_n_0_n;
sadd_lpm_cen Uadd_cen_l_1_n_0_n (.clk(clk),  .gclk_en(clk_en), .ain(fin_atree_l_0_n_0_n), .bin(fin_atree_l_0_n_1_n), .res(fin_atree_l_1_n_0_n) );
defparam Uadd_cen_l_1_n_0_n.IN_WIDTH = 17;
defparam Uadd_cen_l_1_n_0_n.PIPE_DEPTH = 1;

wire [17:0] mac_res;
assign mac_res=fin_atree_l_1_n_0_n;
wire [17:0] atree_res;
mac_tl Umtl (.clk(clk), 
             .data_in(mac_res),
             .data_out(atree_res));
defparam Umtl.DATA_WIDTH = 18;

// ---- Adder Tree Complete ---- 
wire [14:0] fir_int_res;
assign fir_int_res = atree_res [14:0];

assign fir_result = fir_int_res[ACCUM_WIDTH-1:0];
wire pre_rdy;
assign rdy_to_ld = pre_rdy;
assign done = done_int;
par_ctrl Uctrl(.rst(rst),
		.clk(clk),
		.clk_en(clk_en),
		.done(done_int),
		.rdy_int(rdy_int),
		.rdy_to_ld(pre_rdy));
defparam Uctrl.REG_LEN = 7;
defparam Uctrl.REG_BIT = 3;
defparam Uctrl.CH_WIDTH =0; 
defparam Uctrl.NUM_CH =1; 
endmodule
