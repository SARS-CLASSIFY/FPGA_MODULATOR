//IP Functional Simulation Model
//VERSION_BEGIN 12.1 cbx_mgl 2012:11:07:18:06:30:SJ cbx_simgen 2012:11:07:18:03:51:SJ  VERSION_END
// synthesis VERILOG_INPUT_VERSION VERILOG_2001
// altera message_off 10463



// Copyright (C) 1991-2012 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// You may only use these simulation model output files for simulation
// purposes and expressly not for synthesis or any other purposes (in which
// event Altera disclaims all warranties of any kind).


//synopsys translate_off

//synthesis_resources = altsyncram 2 lpm_add_sub 3 lpm_counter 1 lut 277 mux21 482 oper_add 3 oper_mux 30 
`timescale 1 ps / 1 ps
module  dds
	( 
	clk,
	clken,
	fcos_o,
	freq_mod_i,
	fsin_o,
	out_valid,
	phi_inc_i,
	reset_n) /* synthesis synthesis_clearbox=1 */;
	input   clk;
	input   clken;
	output   [14:0]  fcos_o;
	input   [24:0]  freq_mod_i;
	output   [14:0]  fsin_o;
	output   out_valid;
	input   [24:0]  phi_inc_i;
	input   reset_n;

	wire  [13:0]   wire_n1OOi_q_a;
	wire  [13:0]   wire_n1OOl_q_a;
	reg	nil0OO41;
	reg	nil0OO42;
	reg	nili0i33;
	reg	nili0i34;
	reg	nili0l31;
	reg	nili0l32;
	reg	nili0O29;
	reg	nili0O30;
	reg	nili1i39;
	reg	nili1i40;
	reg	nili1l37;
	reg	nili1l38;
	reg	nili1O35;
	reg	nili1O36;
	reg	niliii27;
	reg	niliii28;
	reg	niliil25;
	reg	niliil26;
	reg	niliiO23;
	reg	niliiO24;
	reg	nilili21;
	reg	nilili22;
	reg	nilill19;
	reg	nilill20;
	reg	nililO17;
	reg	nililO18;
	reg	niliOi15;
	reg	niliOi16;
	reg	niliOl13;
	reg	niliOl14;
	reg	niliOO11;
	reg	niliOO12;
	reg	nill0i3;
	reg	nill0i4;
	reg	nill1i10;
	reg	nill1i9;
	reg	nill1l7;
	reg	nill1l8;
	reg	nill1O5;
	reg	nill1O6;
	reg	nilliO1;
	reg	nilliO2;
	reg	n000i;
	reg	n000l;
	reg	n000O;
	reg	n001i;
	reg	n001l;
	reg	n001O;
	reg	n00ii;
	reg	n00il;
	reg	n00iO;
	reg	n00li;
	reg	n00ll;
	reg	n00lO;
	reg	n00Oi;
	reg	n010i;
	reg	n010l;
	reg	n010O;
	reg	n011i;
	reg	n011l;
	reg	n011O;
	reg	n01ii;
	reg	n01il;
	reg	n01iO;
	reg	n01li;
	reg	n01ll;
	reg	n01lO;
	reg	n01Oi;
	reg	n01Ol;
	reg	n01OO;
	reg	n1OlO;
	reg	n1OOO;
	reg	niiOl;
	reg	niiOO;
	reg	nil0i;
	reg	nil0l;
	reg	nil0O;
	reg	nil1i;
	reg	nil1l;
	reg	nil1O;
	reg	nilii;
	reg	nilil;
	reg	niliO;
	reg	nilli;
	reg	nilll;
	reg	nillli;
	reg	nillll;
	reg	nilllO;
	reg	nillO;
	reg	nillOi;
	reg	nillOl;
	reg	nillOO;
	reg	nilO0i;
	reg	nilO0l;
	reg	nilO1i;
	reg	nilO1l;
	reg	nilO1O;
	reg	nilOi;
	reg	niO0lO;
	reg	niO0Oi;
	reg	niO0Ol;
	reg	niO0OO;
	reg	niO10O;
	reg	niO1ii;
	reg	niO1il;
	reg	niO1iO;
	reg	niOi0i;
	reg	niOi0l;
	reg	niOi0O;
	reg	niOi1i;
	reg	niOi1l;
	reg	niOi1O;
	reg	niOiii;
	reg	niOiil;
	reg	niOiiO;
	reg	niOili;
	reg	niOill;
	reg	niOilO;
	reg	niOiOi;
	reg	niOiOl;
	reg	niOiOO;
	reg	niOl0i;
	reg	niOl0l;
	reg	niOl1i;
	reg	niOl1l;
	reg	niOl1O;
	reg	nl000l;
	reg	nl000O;
	reg	nl001O;
	reg	nl00i;
	reg	nl00ii;
	reg	nl00il;
	reg	nl00iO;
	reg	nl00l;
	reg	nl00li;
	reg	nl00ll;
	reg	nl00lO;
	reg	nl00O;
	reg	nl00Oi;
	reg	nl00Ol;
	reg	nl00OO;
	reg	nl01i;
	reg	nl01l;
	reg	nl01O;
	reg	nl0i0i;
	reg	nl0i1i;
	reg	nl0i1l;
	reg	nl0i1O;
	reg	nl0ii;
	reg	nl0il;
	reg	nl0iO;
	reg	nl0li;
	reg	nl0ll;
	reg	nl0lO;
	reg	nl0O0l;
	reg	nl0O0O;
	reg	nl0Oi;
	reg	nl0Oii;
	reg	nl0Oil;
	reg	nl0OiO;
	reg	nl0Oli;
	reg	nl0Oll;
	reg	nl0OlO;
	reg	nl0OOi;
	reg	nl0OOl;
	reg	nl0OOO;
	reg	nl10ll;
	reg	nl10lO;
	reg	nl10Oi;
	reg	nl10Ol;
	reg	nl10OO;
	reg	nl1i0i;
	reg	nl1i0l;
	reg	nl1i0O;
	reg	nl1i1i;
	reg	nl1i1l;
	reg	nl1i1O;
	reg	nl1iii;
	reg	nl1iil;
	reg	nl1iiO;
	reg	nl1ili;
	reg	nl1ill;
	reg	nl1ilO;
	reg	nl1iOi;
	reg	nl1iOl;
	reg	nl1iOO;
	reg	nl1l1i;
	reg	nl1Ol;
	reg	nl1OO;
	reg	nliiii;
	reg	nliiil;
	reg	nliiiO;
	reg	nliili;
	reg	nliill;
	reg	nliilO;
	reg	nliiOi;
	reg	nliiOl;
	reg	nliiOO;
	reg	nlil0i;
	reg	nlil0l;
	reg	nlil0O;
	reg	nlil1i;
	reg	nlil1l;
	reg	nlil1O;
	reg	nlilii;
	reg	nlilil;
	reg	nliliO;
	reg	nlilli;
	reg	nlilll;
	reg	nlillO;
	reg	nlilOi;
	reg	nlilOl;
	reg	nlilOO;
	reg	nliO0i;
	reg	nliO0l;
	reg	nliO0O;
	reg	nliO1i;
	reg	nliO1l;
	reg	nliO1O;
	reg	nliOii;
	reg	nliOil;
	reg	nliOiO;
	reg	nliOli;
	reg	nliOll;
	reg	nliOlO;
	reg	nliOOi;
	reg	nliOOl;
	reg	nliOOO;
	reg	nll00i;
	reg	nll00l;
	reg	nll00O;
	reg	nll01i;
	reg	nll01l;
	reg	nll01O;
	reg	nll0ii;
	reg	nll0il;
	reg	nll0iO;
	reg	nll0li;
	reg	nll0ll;
	reg	nll0lO;
	reg	nll0Oi;
	reg	nll0Ol;
	reg	nll0OO;
	reg	nll10i;
	reg	nll10l;
	reg	nll10O;
	reg	nll11i;
	reg	nll11l;
	reg	nll11O;
	reg	nll1ii;
	reg	nll1il;
	reg	nll1iO;
	reg	nll1li;
	reg	nll1ll;
	reg	nll1lO;
	reg	nll1Oi;
	reg	nll1Ol;
	reg	nll1OO;
	reg	nlli0i;
	reg	nlli0l;
	reg	nlli0O;
	reg	nlli1i;
	reg	nlli1l;
	reg	nlli1O;
	reg	nlliii;
	reg	nlliil;
	reg	nlliiO;
	reg	nllili;
	reg	nllill;
	reg	nllilO;
	reg	nlliOi;
	reg	nlliOl;
	reg	nlliOO;
	reg	nlll1i;
	reg	nlll1l;
	reg	nllOl;
	reg	nlO0O;
	wire	wire_nlO0l_CLRN;
	wire  [24:0]   wire_niO0li_result;
	wire  [24:0]   wire_niO0ll_result;
	wire  [19:0]   wire_nl000i_result;
	wire  [3:0]   wire_nllOO_q;
	wire	wire_n00Ol_dataout;
	wire	wire_n00OO_dataout;
	wire	wire_n0i0i_dataout;
	wire	wire_n0i0l_dataout;
	wire	wire_n0i0O_dataout;
	wire	wire_n0i1i_dataout;
	wire	wire_n0i1l_dataout;
	wire	wire_n0i1O_dataout;
	wire	wire_n0iii_dataout;
	wire	wire_n0iil_dataout;
	wire	wire_n0iiO_dataout;
	wire	wire_n0ili_dataout;
	wire	wire_n0ill_dataout;
	wire	wire_n0ilO_dataout;
	wire	wire_n0iOi_dataout;
	wire	wire_n0iOl_dataout;
	wire	wire_n0iOO_dataout;
	wire	wire_n0l0i_dataout;
	wire	wire_n0l0l_dataout;
	wire	wire_n0l0O_dataout;
	wire	wire_n0l1i_dataout;
	wire	wire_n0l1l_dataout;
	wire	wire_n0l1O_dataout;
	wire	wire_n0lii_dataout;
	wire	wire_n0lil_dataout;
	wire	wire_n0liO_dataout;
	wire	wire_n0lli_dataout;
	wire	wire_n0lll_dataout;
	wire	wire_n0llO_dataout;
	wire	wire_n0lOi_dataout;
	wire	wire_n0lOl_dataout;
	wire	wire_n0lOO_dataout;
	wire	wire_n0O0i_dataout;
	wire	wire_n0O0l_dataout;
	wire	wire_n0O0O_dataout;
	wire	wire_n0O1i_dataout;
	wire	wire_n0O1l_dataout;
	wire	wire_n0O1O_dataout;
	wire	wire_n0Oii_dataout;
	wire	wire_n0Oil_dataout;
	wire	wire_n0OiO_dataout;
	wire	wire_n0Oli_dataout;
	wire	wire_n0Oll_dataout;
	wire	wire_n0OlO_dataout;
	wire	wire_n0OOi_dataout;
	wire	wire_n0OOl_dataout;
	wire	wire_n0OOO_dataout;
	wire	wire_n100i_dataout;
	wire	wire_n100l_dataout;
	wire	wire_n100O_dataout;
	wire	wire_n101i_dataout;
	wire	wire_n101l_dataout;
	wire	wire_n101O_dataout;
	wire	wire_n10ii_dataout;
	wire	wire_n10il_dataout;
	wire	wire_n10iO_dataout;
	wire	wire_n10li_dataout;
	wire	wire_n10ll_dataout;
	wire	wire_n10lO_dataout;
	wire	wire_n10Oi_dataout;
	wire	wire_n10Ol_dataout;
	wire	wire_n10OO_dataout;
	wire	wire_n110i_dataout;
	wire	wire_n110l_dataout;
	wire	wire_n110O_dataout;
	wire	wire_n111i_dataout;
	wire	wire_n111l_dataout;
	wire	wire_n111O_dataout;
	wire	wire_n11ii_dataout;
	wire	wire_n11il_dataout;
	wire	wire_n11iO_dataout;
	wire	wire_n11li_dataout;
	wire	wire_n11ll_dataout;
	wire	wire_n11lO_dataout;
	wire	wire_n11Oi_dataout;
	wire	wire_n11Ol_dataout;
	wire	wire_n11OO_dataout;
	wire	wire_n1i0i_dataout;
	wire	wire_n1i0l_dataout;
	wire	wire_n1i0O_dataout;
	wire	wire_n1i1i_dataout;
	wire	wire_n1i1l_dataout;
	wire	wire_n1i1O_dataout;
	wire	wire_n1iii_dataout;
	wire	wire_n1iil_dataout;
	wire	wire_n1iiO_dataout;
	wire	wire_n1ili_dataout;
	wire	wire_n1ill_dataout;
	wire	wire_n1ilO_dataout;
	wire	wire_n1iOi_dataout;
	wire	wire_n1iOl_dataout;
	wire	wire_n1iOO_dataout;
	wire	wire_n1l0i_dataout;
	wire	wire_n1l0l_dataout;
	wire	wire_n1l0O_dataout;
	wire	wire_n1l1i_dataout;
	wire	wire_n1l1l_dataout;
	wire	wire_n1l1O_dataout;
	wire	wire_n1lii_dataout;
	wire	wire_n1lil_dataout;
	wire	wire_n1liO_dataout;
	wire	wire_n1lli_dataout;
	wire	wire_n1lll_dataout;
	wire	wire_n1llO_dataout;
	wire	wire_n1lOi_dataout;
	wire	wire_n1lOl_dataout;
	wire	wire_n1lOO_dataout;
	wire	wire_n1O0i_dataout;
	wire	wire_n1O0l_dataout;
	wire	wire_n1O0O_dataout;
	wire	wire_n1O1i_dataout;
	wire	wire_n1O1l_dataout;
	wire	wire_n1O1O_dataout;
	wire	wire_n1Oii_dataout;
	wire	wire_n1Oil_dataout;
	wire	wire_n1OiO_dataout;
	wire	wire_ni10i_dataout;
	wire	wire_ni10l_dataout;
	wire	wire_ni10O_dataout;
	wire	wire_ni11i_dataout;
	wire	wire_ni11l_dataout;
	wire	wire_ni11O_dataout;
	wire	wire_ni1ii_dataout;
	wire	wire_ni1il_dataout;
	wire	wire_ni1iO_dataout;
	wire	wire_ni1li_dataout;
	wire	wire_ni1ll_dataout;
	wire	wire_ni1lO_dataout;
	wire	wire_ni1Oi_dataout;
	wire	wire_nilO0O_dataout;
	wire	wire_nilOii_dataout;
	wire	wire_nilOil_dataout;
	wire	wire_nilOiO_dataout;
	wire	wire_nilOl_dataout;
	wire	wire_nilOli_dataout;
	wire	wire_nilOll_dataout;
	wire	wire_nilOlO_dataout;
	wire	wire_nilOO_dataout;
	wire	wire_nilOOi_dataout;
	wire	wire_nilOOl_dataout;
	wire	wire_nilOOO_dataout;
	wire	wire_niO00i_dataout;
	wire	wire_niO00l_dataout;
	wire	wire_niO00O_dataout;
	wire	wire_niO01i_dataout;
	wire	wire_niO01l_dataout;
	wire	wire_niO01O_dataout;
	wire	wire_niO0i_dataout;
	wire	wire_niO0ii_dataout;
	wire	wire_niO0il_dataout;
	wire	wire_niO0iO_dataout;
	wire	wire_niO0l_dataout;
	wire	wire_niO0O_dataout;
	wire	wire_niO10i_dataout;
	wire	wire_niO10l_dataout;
	wire	wire_niO11i_dataout;
	wire	wire_niO11l_dataout;
	wire	wire_niO11O_dataout;
	wire	wire_niO1i_dataout;
	wire	wire_niO1l_dataout;
	wire	wire_niO1li_dataout;
	wire	wire_niO1ll_dataout;
	wire	wire_niO1lO_dataout;
	wire	wire_niO1O_dataout;
	wire	wire_niO1Oi_dataout;
	wire	wire_niO1Ol_dataout;
	wire	wire_niO1OO_dataout;
	wire	wire_niOii_dataout;
	wire	wire_niOil_dataout;
	wire	wire_niOiO_dataout;
	wire	wire_niOl0O_dataout;
	wire	wire_niOli_dataout;
	wire	wire_niOlii_dataout;
	wire	wire_niOlil_dataout;
	wire	wire_niOliO_dataout;
	wire	wire_niOll_dataout;
	wire	wire_niOlli_dataout;
	wire	wire_niOlll_dataout;
	wire	wire_niOllO_dataout;
	wire	wire_niOlO_dataout;
	wire	wire_niOlOi_dataout;
	wire	wire_niOlOl_dataout;
	wire	wire_niOlOO_dataout;
	wire	wire_niOO0i_dataout;
	wire	wire_niOO0l_dataout;
	wire	wire_niOO0O_dataout;
	wire	wire_niOO1i_dataout;
	wire	wire_niOO1l_dataout;
	wire	wire_niOO1O_dataout;
	wire	wire_niOOi_dataout;
	wire	wire_niOOii_dataout;
	wire	wire_niOOil_dataout;
	wire	wire_niOOiO_dataout;
	wire	wire_niOOl_dataout;
	wire	wire_niOOli_dataout;
	wire	wire_niOOll_dataout;
	wire	wire_niOOlO_dataout;
	wire	wire_niOOO_dataout;
	wire	wire_niOOOi_dataout;
	wire	wire_niOOOl_dataout;
	wire	wire_niOOOO_dataout;
	wire	wire_nl010i_dataout;
	wire	wire_nl010l_dataout;
	wire	wire_nl010O_dataout;
	wire	wire_nl011i_dataout;
	wire	wire_nl011l_dataout;
	wire	wire_nl011O_dataout;
	wire	wire_nl01ii_dataout;
	wire	wire_nl01il_dataout;
	wire	wire_nl01iO_dataout;
	wire	wire_nl01li_dataout;
	wire	wire_nl01ll_dataout;
	wire	wire_nl01lO_dataout;
	wire	wire_nl01Oi_dataout;
	wire	wire_nl0i0l_dataout;
	wire	wire_nl0i0O_dataout;
	wire	wire_nl0iii_dataout;
	wire	wire_nl0iil_dataout;
	wire	wire_nl0iiO_dataout;
	wire	wire_nl0ili_dataout;
	wire	wire_nl0ill_dataout;
	wire	wire_nl0ilO_dataout;
	wire	wire_nl0iOi_dataout;
	wire	wire_nl0iOl_dataout;
	wire	wire_nl0iOO_dataout;
	wire	wire_nl0l0i_dataout;
	wire	wire_nl0l0l_dataout;
	wire	wire_nl0l0O_dataout;
	wire	wire_nl0l1i_dataout;
	wire	wire_nl0l1l_dataout;
	wire	wire_nl0l1O_dataout;
	wire	wire_nl0lii_dataout;
	wire	wire_nl0lil_dataout;
	wire	wire_nl0liO_dataout;
	wire	wire_nl0lli_dataout;
	wire	wire_nl0lll_dataout;
	wire	wire_nl0llO_dataout;
	wire	wire_nl0lOi_dataout;
	wire	wire_nl0lOl_dataout;
	wire	wire_nl0lOO_dataout;
	wire	wire_nl0O0i_dataout;
	wire	wire_nl0O1i_dataout;
	wire	wire_nl0O1l_dataout;
	wire	wire_nl0O1O_dataout;
	wire	wire_nl0Ol_dataout;
	wire	wire_nl0OO_dataout;
	wire	wire_nl100i_dataout;
	wire	wire_nl100l_dataout;
	wire	wire_nl100O_dataout;
	wire	wire_nl101i_dataout;
	wire	wire_nl101l_dataout;
	wire	wire_nl101O_dataout;
	wire	wire_nl10i_dataout;
	wire	wire_nl10ii_dataout;
	wire	wire_nl10il_dataout;
	wire	wire_nl10iO_dataout;
	wire	wire_nl10l_dataout;
	wire	wire_nl10li_dataout;
	wire	wire_nl10O_dataout;
	wire	wire_nl110i_dataout;
	wire	wire_nl110l_dataout;
	wire	wire_nl110O_dataout;
	wire	wire_nl111i_dataout;
	wire	wire_nl111l_dataout;
	wire	wire_nl111O_dataout;
	wire	wire_nl11i_dataout;
	wire	wire_nl11ii_dataout;
	wire	wire_nl11il_dataout;
	wire	wire_nl11iO_dataout;
	wire	wire_nl11l_dataout;
	wire	wire_nl11li_dataout;
	wire	wire_nl11ll_dataout;
	wire	wire_nl11lO_dataout;
	wire	wire_nl11O_dataout;
	wire	wire_nl11Oi_dataout;
	wire	wire_nl11Ol_dataout;
	wire	wire_nl11OO_dataout;
	wire	wire_nl1ii_dataout;
	wire	wire_nl1il_dataout;
	wire	wire_nl1iO_dataout;
	wire	wire_nl1l0i_dataout;
	wire	wire_nl1l0l_dataout;
	wire	wire_nl1l0O_dataout;
	wire	wire_nl1l1l_dataout;
	wire	wire_nl1l1O_dataout;
	wire	wire_nl1li_dataout;
	wire	wire_nl1lii_dataout;
	wire	wire_nl1lil_dataout;
	wire	wire_nl1liO_dataout;
	wire	wire_nl1ll_dataout;
	wire	wire_nl1lli_dataout;
	wire	wire_nl1lll_dataout;
	wire	wire_nl1llO_dataout;
	wire	wire_nl1lO_dataout;
	wire	wire_nl1lOi_dataout;
	wire	wire_nl1lOl_dataout;
	wire	wire_nl1lOO_dataout;
	wire	wire_nl1O0i_dataout;
	wire	wire_nl1O0l_dataout;
	wire	wire_nl1O0O_dataout;
	wire	wire_nl1O1i_dataout;
	wire	wire_nl1O1l_dataout;
	wire	wire_nl1O1O_dataout;
	wire	wire_nl1Oi_dataout;
	wire	wire_nl1Oii_dataout;
	wire	wire_nl1Oil_dataout;
	wire	wire_nl1OiO_dataout;
	wire	wire_nl1Oli_dataout;
	wire	wire_nl1Oll_dataout;
	wire	wire_nl1OlO_dataout;
	wire	wire_nl1OOi_dataout;
	wire	wire_nl1OOl_dataout;
	wire	wire_nl1OOO_dataout;
	wire	wire_nli00i_dataout;
	wire	wire_nli00l_dataout;
	wire	wire_nli00O_dataout;
	wire	wire_nli01i_dataout;
	wire	wire_nli01l_dataout;
	wire	wire_nli01O_dataout;
	wire	wire_nli0i_dataout;
	wire	wire_nli0ii_dataout;
	wire	wire_nli0il_dataout;
	wire	wire_nli0iO_dataout;
	wire	wire_nli0l_dataout;
	wire	wire_nli0li_dataout;
	wire	wire_nli0ll_dataout;
	wire	wire_nli0lO_dataout;
	wire	wire_nli0O_dataout;
	wire	wire_nli0Oi_dataout;
	wire	wire_nli0Ol_dataout;
	wire	wire_nli0OO_dataout;
	wire	wire_nli10i_dataout;
	wire	wire_nli10l_dataout;
	wire	wire_nli10O_dataout;
	wire	wire_nli11i_dataout;
	wire	wire_nli11l_dataout;
	wire	wire_nli11O_dataout;
	wire	wire_nli1i_dataout;
	wire	wire_nli1ii_dataout;
	wire	wire_nli1il_dataout;
	wire	wire_nli1iO_dataout;
	wire	wire_nli1l_dataout;
	wire	wire_nli1li_dataout;
	wire	wire_nli1ll_dataout;
	wire	wire_nli1lO_dataout;
	wire	wire_nli1O_dataout;
	wire	wire_nli1Oi_dataout;
	wire	wire_nli1Ol_dataout;
	wire	wire_nli1OO_dataout;
	wire	wire_nlii0i_dataout;
	wire	wire_nlii0l_dataout;
	wire	wire_nlii0O_dataout;
	wire	wire_nlii1i_dataout;
	wire	wire_nlii1l_dataout;
	wire	wire_nlii1O_dataout;
	wire	wire_nliii_dataout;
	wire	wire_nliil_dataout;
	wire	wire_nliiO_dataout;
	wire	wire_nlili_dataout;
	wire	wire_nlill_dataout;
	wire	wire_nlilO_dataout;
	wire	wire_nliOi_dataout;
	wire	wire_nliOl_dataout;
	wire	wire_nliOO_dataout;
	wire	wire_nll0i_dataout;
	wire	wire_nll0l_dataout;
	wire	wire_nll0O_dataout;
	wire	wire_nll1i_dataout;
	wire	wire_nll1l_dataout;
	wire	wire_nll1O_dataout;
	wire	wire_nllii_dataout;
	wire	wire_nllil_dataout;
	wire	wire_nlliO_dataout;
	wire	wire_nlll0i_dataout;
	wire	wire_nlll0l_dataout;
	wire	wire_nlll0O_dataout;
	wire	wire_nlll1O_dataout;
	wire	wire_nllli_dataout;
	wire	wire_nlllii_dataout;
	wire	wire_nlllil_dataout;
	wire	wire_nllliO_dataout;
	wire	wire_nllll_dataout;
	wire	wire_nlllli_dataout;
	wire	wire_nlllll_dataout;
	wire	wire_nllllO_dataout;
	wire	wire_nlllO_dataout;
	wire	wire_nlllOi_dataout;
	wire	wire_nlllOl_dataout;
	wire	wire_nlllOO_dataout;
	wire	wire_nllO0i_dataout;
	wire	wire_nllO0l_dataout;
	wire	wire_nllO0O_dataout;
	wire	wire_nllO1i_dataout;
	wire	wire_nllO1l_dataout;
	wire	wire_nllO1O_dataout;
	wire	wire_nllOi_dataout;
	wire	wire_nllOii_dataout;
	wire	wire_nllOil_dataout;
	wire	wire_nllOiO_dataout;
	wire	wire_nllOli_dataout;
	wire	wire_nllOll_dataout;
	wire	wire_nllOlO_dataout;
	wire	wire_nllOOi_dataout;
	wire	wire_nllOOl_dataout;
	wire	wire_nllOOO_dataout;
	wire	wire_nlO00i_dataout;
	wire	wire_nlO00l_dataout;
	wire	wire_nlO00O_dataout;
	wire	wire_nlO01i_dataout;
	wire	wire_nlO01l_dataout;
	wire	wire_nlO01O_dataout;
	wire	wire_nlO0ii_dataout;
	wire	wire_nlO0il_dataout;
	wire	wire_nlO0iO_dataout;
	wire	wire_nlO0li_dataout;
	wire	wire_nlO0ll_dataout;
	wire	wire_nlO0lO_dataout;
	wire	wire_nlO0Oi_dataout;
	wire	wire_nlO0Ol_dataout;
	wire	wire_nlO0OO_dataout;
	wire	wire_nlO10i_dataout;
	wire	wire_nlO10l_dataout;
	wire	wire_nlO10O_dataout;
	wire	wire_nlO11i_dataout;
	wire	wire_nlO11l_dataout;
	wire	wire_nlO11O_dataout;
	wire	wire_nlO1ii_dataout;
	wire	wire_nlO1il_dataout;
	wire	wire_nlO1iO_dataout;
	wire	wire_nlO1l_dataout;
	wire	wire_nlO1li_dataout;
	wire	wire_nlO1ll_dataout;
	wire	wire_nlO1lO_dataout;
	wire	wire_nlO1O_dataout;
	wire	wire_nlO1Oi_dataout;
	wire	wire_nlO1Ol_dataout;
	wire	wire_nlO1OO_dataout;
	wire	wire_nlOi0i_dataout;
	wire	wire_nlOi0l_dataout;
	wire	wire_nlOi0O_dataout;
	wire	wire_nlOi1i_dataout;
	wire	wire_nlOi1l_dataout;
	wire	wire_nlOi1O_dataout;
	wire	wire_nlOiii_dataout;
	wire	wire_nlOiil_dataout;
	wire	wire_nlOiiO_dataout;
	wire	wire_nlOili_dataout;
	wire	wire_nlOill_dataout;
	wire	wire_nlOilO_dataout;
	wire	wire_nlOiOi_dataout;
	wire	wire_nlOiOl_dataout;
	wire	wire_nlOiOO_dataout;
	wire	wire_nlOl0i_dataout;
	wire	wire_nlOl0l_dataout;
	wire	wire_nlOl0O_dataout;
	wire	wire_nlOl1i_dataout;
	wire	wire_nlOl1l_dataout;
	wire	wire_nlOl1O_dataout;
	wire	wire_nlOlii_dataout;
	wire	wire_nlOlil_dataout;
	wire	wire_nlOliO_dataout;
	wire	wire_nlOlli_dataout;
	wire	wire_nlOlll_dataout;
	wire	wire_nlOllO_dataout;
	wire	wire_nlOlOi_dataout;
	wire	wire_nlOlOl_dataout;
	wire	wire_nlOlOO_dataout;
	wire	wire_nlOO0i_dataout;
	wire	wire_nlOO0l_dataout;
	wire	wire_nlOO0O_dataout;
	wire	wire_nlOO1i_dataout;
	wire	wire_nlOO1l_dataout;
	wire	wire_nlOO1O_dataout;
	wire	wire_nlOOii_dataout;
	wire	wire_nlOOil_dataout;
	wire	wire_nlOOiO_dataout;
	wire	wire_nlOOli_dataout;
	wire	wire_nlOOll_dataout;
	wire	wire_nlOOlO_dataout;
	wire	wire_nlOOOi_dataout;
	wire	wire_nlOOOl_dataout;
	wire	wire_nlOOOO_dataout;
	wire  [14:0]   wire_n1Oli_o;
	wire  [14:0]   wire_n1Oll_o;
	wire  [4:0]   wire_nl01Ol_o;
	wire  wire_ni00i_o;
	wire  wire_ni00l_o;
	wire  wire_ni00O_o;
	wire  wire_ni01i_o;
	wire  wire_ni01l_o;
	wire  wire_ni01O_o;
	wire  wire_ni0ii_o;
	wire  wire_ni0il_o;
	wire  wire_ni0iO_o;
	wire  wire_ni0li_o;
	wire  wire_ni0ll_o;
	wire  wire_ni0lO_o;
	wire  wire_ni0Oi_o;
	wire  wire_ni0Ol_o;
	wire  wire_ni0OO_o;
	wire  wire_ni1Ol_o;
	wire  wire_ni1OO_o;
	wire  wire_nii0i_o;
	wire  wire_nii0l_o;
	wire  wire_nii0O_o;
	wire  wire_nii1i_o;
	wire  wire_nii1l_o;
	wire  wire_nii1O_o;
	wire  wire_niiii_o;
	wire  wire_niiil_o;
	wire  wire_niiiO_o;
	wire  wire_niili_o;
	wire  wire_niill_o;
	wire  wire_niilO_o;
	wire  wire_niiOi_o;
	wire  nillii;

	altsyncram   n1OOi
	( 
	.address_a({nl0O0l, nl0O0O, nl0Oii, nl0Oil, nl0OiO, nl0Oli, nl0Oll, nl0OlO, nl0OOi, nl0OOl, nl0OOO, nliiii}),
	.clock0(clk),
	.clocken0(clken),
	.eccstatus(),
	.q_a(wire_n1OOi_q_a),
	.q_b(),
	.aclr0(),
	.aclr1(),
	.address_b(),
	.addressstall_a(),
	.addressstall_b(),
	.byteena_a(),
	.byteena_b(),
	.clock1(),
	.clocken1(),
	.clocken2(),
	.clocken3(),
	.data_a(),
	.data_b(),
	.rden_a(),
	.rden_b(),
	.wren_a(),
	.wren_b()
	);
	defparam
		n1OOi.address_aclr_a = "NONE",
		n1OOi.address_aclr_b = "NONE",
		n1OOi.address_reg_b = "CLOCK1",
		n1OOi.byte_size = 8,
		n1OOi.byteena_aclr_a = "NONE",
		n1OOi.byteena_aclr_b = "NONE",
		n1OOi.byteena_reg_b = "CLOCK1",
		n1OOi.clock_enable_core_a = "USE_INPUT_CLKEN",
		n1OOi.clock_enable_core_b = "USE_INPUT_CLKEN",
		n1OOi.clock_enable_input_a = "NORMAL",
		n1OOi.clock_enable_input_b = "NORMAL",
		n1OOi.clock_enable_output_a = "NORMAL",
		n1OOi.clock_enable_output_b = "NORMAL",
		n1OOi.ecc_pipeline_stage_enabled = "FALSE",
		n1OOi.enable_ecc = "FALSE",
		n1OOi.indata_aclr_a = "NONE",
		n1OOi.indata_aclr_b = "NONE",
		n1OOi.indata_reg_b = "CLOCK1",
		n1OOi.init_file = "dds_sin.hex",
		n1OOi.init_file_layout = "PORT_A",
		n1OOi.intended_device_family = "Cyclone IV E",
		n1OOi.numwords_a = 4096,
		n1OOi.numwords_b = 1,
		n1OOi.operation_mode = "ROM",
		n1OOi.outdata_aclr_a = "NONE",
		n1OOi.outdata_aclr_b = "NONE",
		n1OOi.outdata_reg_a = "CLOCK0",
		n1OOi.outdata_reg_b = "UNREGISTERED",
		n1OOi.ram_block_type = "AUTO",
		n1OOi.rdcontrol_aclr_b = "NONE",
		n1OOi.rdcontrol_reg_b = "CLOCK1",
		n1OOi.read_during_write_mode_mixed_ports = "DONT_CARE",
		n1OOi.read_during_write_mode_port_a = "NEW_DATA_NO_NBE_READ",
		n1OOi.read_during_write_mode_port_b = "NEW_DATA_NO_NBE_READ",
		n1OOi.width_a = 14,
		n1OOi.width_b = 1,
		n1OOi.width_byteena_a = 1,
		n1OOi.width_byteena_b = 1,
		n1OOi.width_eccstatus = 3,
		n1OOi.widthad_a = 12,
		n1OOi.widthad_b = 1,
		n1OOi.wrcontrol_aclr_a = "NONE",
		n1OOi.wrcontrol_aclr_b = "NONE",
		n1OOi.wrcontrol_wraddress_reg_b = "CLOCK1",
		n1OOi.lpm_hint = "WIDTH_BYTEENA=1";
	altsyncram   n1OOl
	( 
	.address_a({nl0O0l, nl0O0O, nl0Oii, nl0Oil, nl0OiO, nl0Oli, nl0Oll, nl0OlO, nl0OOi, nl0OOl, nl0OOO, nliiii}),
	.clock0(clk),
	.clocken0(clken),
	.eccstatus(),
	.q_a(wire_n1OOl_q_a),
	.q_b(),
	.aclr0(),
	.aclr1(),
	.address_b(),
	.addressstall_a(),
	.addressstall_b(),
	.byteena_a(),
	.byteena_b(),
	.clock1(),
	.clocken1(),
	.clocken2(),
	.clocken3(),
	.data_a(),
	.data_b(),
	.rden_a(),
	.rden_b(),
	.wren_a(),
	.wren_b()
	);
	defparam
		n1OOl.address_aclr_a = "NONE",
		n1OOl.address_aclr_b = "NONE",
		n1OOl.address_reg_b = "CLOCK1",
		n1OOl.byte_size = 8,
		n1OOl.byteena_aclr_a = "NONE",
		n1OOl.byteena_aclr_b = "NONE",
		n1OOl.byteena_reg_b = "CLOCK1",
		n1OOl.clock_enable_core_a = "USE_INPUT_CLKEN",
		n1OOl.clock_enable_core_b = "USE_INPUT_CLKEN",
		n1OOl.clock_enable_input_a = "NORMAL",
		n1OOl.clock_enable_input_b = "NORMAL",
		n1OOl.clock_enable_output_a = "NORMAL",
		n1OOl.clock_enable_output_b = "NORMAL",
		n1OOl.ecc_pipeline_stage_enabled = "FALSE",
		n1OOl.enable_ecc = "FALSE",
		n1OOl.indata_aclr_a = "NONE",
		n1OOl.indata_aclr_b = "NONE",
		n1OOl.indata_reg_b = "CLOCK1",
		n1OOl.init_file = "dds_cos.hex",
		n1OOl.init_file_layout = "PORT_A",
		n1OOl.intended_device_family = "Cyclone IV E",
		n1OOl.numwords_a = 4096,
		n1OOl.numwords_b = 1,
		n1OOl.operation_mode = "ROM",
		n1OOl.outdata_aclr_a = "NONE",
		n1OOl.outdata_aclr_b = "NONE",
		n1OOl.outdata_reg_a = "CLOCK0",
		n1OOl.outdata_reg_b = "UNREGISTERED",
		n1OOl.ram_block_type = "AUTO",
		n1OOl.rdcontrol_aclr_b = "NONE",
		n1OOl.rdcontrol_reg_b = "CLOCK1",
		n1OOl.read_during_write_mode_mixed_ports = "DONT_CARE",
		n1OOl.read_during_write_mode_port_a = "NEW_DATA_NO_NBE_READ",
		n1OOl.read_during_write_mode_port_b = "NEW_DATA_NO_NBE_READ",
		n1OOl.width_a = 14,
		n1OOl.width_b = 1,
		n1OOl.width_byteena_a = 1,
		n1OOl.width_byteena_b = 1,
		n1OOl.width_eccstatus = 3,
		n1OOl.widthad_a = 12,
		n1OOl.widthad_b = 1,
		n1OOl.wrcontrol_aclr_a = "NONE",
		n1OOl.wrcontrol_aclr_b = "NONE",
		n1OOl.wrcontrol_wraddress_reg_b = "CLOCK1",
		n1OOl.lpm_hint = "WIDTH_BYTEENA=1";
	initial
		nil0OO41 = 0;
	always @ ( posedge clk)
		  nil0OO41 <= nil0OO42;
	event nil0OO41_event;
	initial
		#1 ->nil0OO41_event;
	always @(nil0OO41_event)
		nil0OO41 <= {1{1'b1}};
	initial
		nil0OO42 = 0;
	always @ ( posedge clk)
		  nil0OO42 <= nil0OO41;
	initial
		nili0i33 = 0;
	always @ ( posedge clk)
		  nili0i33 <= nili0i34;
	event nili0i33_event;
	initial
		#1 ->nili0i33_event;
	always @(nili0i33_event)
		nili0i33 <= {1{1'b1}};
	initial
		nili0i34 = 0;
	always @ ( posedge clk)
		  nili0i34 <= nili0i33;
	initial
		nili0l31 = 0;
	always @ ( posedge clk)
		  nili0l31 <= nili0l32;
	event nili0l31_event;
	initial
		#1 ->nili0l31_event;
	always @(nili0l31_event)
		nili0l31 <= {1{1'b1}};
	initial
		nili0l32 = 0;
	always @ ( posedge clk)
		  nili0l32 <= nili0l31;
	initial
		nili0O29 = 0;
	always @ ( posedge clk)
		  nili0O29 <= nili0O30;
	event nili0O29_event;
	initial
		#1 ->nili0O29_event;
	always @(nili0O29_event)
		nili0O29 <= {1{1'b1}};
	initial
		nili0O30 = 0;
	always @ ( posedge clk)
		  nili0O30 <= nili0O29;
	initial
		nili1i39 = 0;
	always @ ( posedge clk)
		  nili1i39 <= nili1i40;
	event nili1i39_event;
	initial
		#1 ->nili1i39_event;
	always @(nili1i39_event)
		nili1i39 <= {1{1'b1}};
	initial
		nili1i40 = 0;
	always @ ( posedge clk)
		  nili1i40 <= nili1i39;
	initial
		nili1l37 = 0;
	always @ ( posedge clk)
		  nili1l37 <= nili1l38;
	event nili1l37_event;
	initial
		#1 ->nili1l37_event;
	always @(nili1l37_event)
		nili1l37 <= {1{1'b1}};
	initial
		nili1l38 = 0;
	always @ ( posedge clk)
		  nili1l38 <= nili1l37;
	initial
		nili1O35 = 0;
	always @ ( posedge clk)
		  nili1O35 <= nili1O36;
	event nili1O35_event;
	initial
		#1 ->nili1O35_event;
	always @(nili1O35_event)
		nili1O35 <= {1{1'b1}};
	initial
		nili1O36 = 0;
	always @ ( posedge clk)
		  nili1O36 <= nili1O35;
	initial
		niliii27 = 0;
	always @ ( posedge clk)
		  niliii27 <= niliii28;
	event niliii27_event;
	initial
		#1 ->niliii27_event;
	always @(niliii27_event)
		niliii27 <= {1{1'b1}};
	initial
		niliii28 = 0;
	always @ ( posedge clk)
		  niliii28 <= niliii27;
	initial
		niliil25 = 0;
	always @ ( posedge clk)
		  niliil25 <= niliil26;
	event niliil25_event;
	initial
		#1 ->niliil25_event;
	always @(niliil25_event)
		niliil25 <= {1{1'b1}};
	initial
		niliil26 = 0;
	always @ ( posedge clk)
		  niliil26 <= niliil25;
	initial
		niliiO23 = 0;
	always @ ( posedge clk)
		  niliiO23 <= niliiO24;
	event niliiO23_event;
	initial
		#1 ->niliiO23_event;
	always @(niliiO23_event)
		niliiO23 <= {1{1'b1}};
	initial
		niliiO24 = 0;
	always @ ( posedge clk)
		  niliiO24 <= niliiO23;
	initial
		nilili21 = 0;
	always @ ( posedge clk)
		  nilili21 <= nilili22;
	event nilili21_event;
	initial
		#1 ->nilili21_event;
	always @(nilili21_event)
		nilili21 <= {1{1'b1}};
	initial
		nilili22 = 0;
	always @ ( posedge clk)
		  nilili22 <= nilili21;
	initial
		nilill19 = 0;
	always @ ( posedge clk)
		  nilill19 <= nilill20;
	event nilill19_event;
	initial
		#1 ->nilill19_event;
	always @(nilill19_event)
		nilill19 <= {1{1'b1}};
	initial
		nilill20 = 0;
	always @ ( posedge clk)
		  nilill20 <= nilill19;
	initial
		nililO17 = 0;
	always @ ( posedge clk)
		  nililO17 <= nililO18;
	event nililO17_event;
	initial
		#1 ->nililO17_event;
	always @(nililO17_event)
		nililO17 <= {1{1'b1}};
	initial
		nililO18 = 0;
	always @ ( posedge clk)
		  nililO18 <= nililO17;
	initial
		niliOi15 = 0;
	always @ ( posedge clk)
		  niliOi15 <= niliOi16;
	event niliOi15_event;
	initial
		#1 ->niliOi15_event;
	always @(niliOi15_event)
		niliOi15 <= {1{1'b1}};
	initial
		niliOi16 = 0;
	always @ ( posedge clk)
		  niliOi16 <= niliOi15;
	initial
		niliOl13 = 0;
	always @ ( posedge clk)
		  niliOl13 <= niliOl14;
	event niliOl13_event;
	initial
		#1 ->niliOl13_event;
	always @(niliOl13_event)
		niliOl13 <= {1{1'b1}};
	initial
		niliOl14 = 0;
	always @ ( posedge clk)
		  niliOl14 <= niliOl13;
	initial
		niliOO11 = 0;
	always @ ( posedge clk)
		  niliOO11 <= niliOO12;
	event niliOO11_event;
	initial
		#1 ->niliOO11_event;
	always @(niliOO11_event)
		niliOO11 <= {1{1'b1}};
	initial
		niliOO12 = 0;
	always @ ( posedge clk)
		  niliOO12 <= niliOO11;
	initial
		nill0i3 = 0;
	always @ ( posedge clk)
		  nill0i3 <= nill0i4;
	event nill0i3_event;
	initial
		#1 ->nill0i3_event;
	always @(nill0i3_event)
		nill0i3 <= {1{1'b1}};
	initial
		nill0i4 = 0;
	always @ ( posedge clk)
		  nill0i4 <= nill0i3;
	initial
		nill1i10 = 0;
	always @ ( posedge clk)
		  nill1i10 <= nill1i9;
	initial
		nill1i9 = 0;
	always @ ( posedge clk)
		  nill1i9 <= nill1i10;
	event nill1i9_event;
	initial
		#1 ->nill1i9_event;
	always @(nill1i9_event)
		nill1i9 <= {1{1'b1}};
	initial
		nill1l7 = 0;
	always @ ( posedge clk)
		  nill1l7 <= nill1l8;
	event nill1l7_event;
	initial
		#1 ->nill1l7_event;
	always @(nill1l7_event)
		nill1l7 <= {1{1'b1}};
	initial
		nill1l8 = 0;
	always @ ( posedge clk)
		  nill1l8 <= nill1l7;
	initial
		nill1O5 = 0;
	always @ ( posedge clk)
		  nill1O5 <= nill1O6;
	event nill1O5_event;
	initial
		#1 ->nill1O5_event;
	always @(nill1O5_event)
		nill1O5 <= {1{1'b1}};
	initial
		nill1O6 = 0;
	always @ ( posedge clk)
		  nill1O6 <= nill1O5;
	initial
		nilliO1 = 0;
	always @ ( posedge clk)
		  nilliO1 <= nilliO2;
	event nilliO1_event;
	initial
		#1 ->nilliO1_event;
	always @(nilliO1_event)
		nilliO1 <= {1{1'b1}};
	initial
		nilliO2 = 0;
	always @ ( posedge clk)
		  nilliO2 <= nilliO1;
	initial
	begin
		n000i = 0;
		n000l = 0;
		n000O = 0;
		n001i = 0;
		n001l = 0;
		n001O = 0;
		n00ii = 0;
		n00il = 0;
		n00iO = 0;
		n00li = 0;
		n00ll = 0;
		n00lO = 0;
		n00Oi = 0;
		n010i = 0;
		n010l = 0;
		n010O = 0;
		n011i = 0;
		n011l = 0;
		n011O = 0;
		n01ii = 0;
		n01il = 0;
		n01iO = 0;
		n01li = 0;
		n01ll = 0;
		n01lO = 0;
		n01Oi = 0;
		n01Ol = 0;
		n01OO = 0;
		n1OlO = 0;
		n1OOO = 0;
		niiOl = 0;
		niiOO = 0;
		nil0i = 0;
		nil0l = 0;
		nil0O = 0;
		nil1i = 0;
		nil1l = 0;
		nil1O = 0;
		nilii = 0;
		nilil = 0;
		niliO = 0;
		nilli = 0;
		nilll = 0;
		nillli = 0;
		nillll = 0;
		nilllO = 0;
		nillO = 0;
		nillOi = 0;
		nillOl = 0;
		nillOO = 0;
		nilO0i = 0;
		nilO0l = 0;
		nilO1i = 0;
		nilO1l = 0;
		nilO1O = 0;
		nilOi = 0;
		niO0lO = 0;
		niO0Oi = 0;
		niO0Ol = 0;
		niO0OO = 0;
		niO10O = 0;
		niO1ii = 0;
		niO1il = 0;
		niO1iO = 0;
		niOi0i = 0;
		niOi0l = 0;
		niOi0O = 0;
		niOi1i = 0;
		niOi1l = 0;
		niOi1O = 0;
		niOiii = 0;
		niOiil = 0;
		niOiiO = 0;
		niOili = 0;
		niOill = 0;
		niOilO = 0;
		niOiOi = 0;
		niOiOl = 0;
		niOiOO = 0;
		niOl0i = 0;
		niOl0l = 0;
		niOl1i = 0;
		niOl1l = 0;
		niOl1O = 0;
		nl000l = 0;
		nl000O = 0;
		nl001O = 0;
		nl00i = 0;
		nl00ii = 0;
		nl00il = 0;
		nl00iO = 0;
		nl00l = 0;
		nl00li = 0;
		nl00ll = 0;
		nl00lO = 0;
		nl00O = 0;
		nl00Oi = 0;
		nl00Ol = 0;
		nl00OO = 0;
		nl01i = 0;
		nl01l = 0;
		nl01O = 0;
		nl0i0i = 0;
		nl0i1i = 0;
		nl0i1l = 0;
		nl0i1O = 0;
		nl0ii = 0;
		nl0il = 0;
		nl0iO = 0;
		nl0li = 0;
		nl0ll = 0;
		nl0lO = 0;
		nl0O0l = 0;
		nl0O0O = 0;
		nl0Oi = 0;
		nl0Oii = 0;
		nl0Oil = 0;
		nl0OiO = 0;
		nl0Oli = 0;
		nl0Oll = 0;
		nl0OlO = 0;
		nl0OOi = 0;
		nl0OOl = 0;
		nl0OOO = 0;
		nl10ll = 0;
		nl10lO = 0;
		nl10Oi = 0;
		nl10Ol = 0;
		nl10OO = 0;
		nl1i0i = 0;
		nl1i0l = 0;
		nl1i0O = 0;
		nl1i1i = 0;
		nl1i1l = 0;
		nl1i1O = 0;
		nl1iii = 0;
		nl1iil = 0;
		nl1iiO = 0;
		nl1ili = 0;
		nl1ill = 0;
		nl1ilO = 0;
		nl1iOi = 0;
		nl1iOl = 0;
		nl1iOO = 0;
		nl1l1i = 0;
		nl1Ol = 0;
		nl1OO = 0;
		nliiii = 0;
		nliiil = 0;
		nliiiO = 0;
		nliili = 0;
		nliill = 0;
		nliilO = 0;
		nliiOi = 0;
		nliiOl = 0;
		nliiOO = 0;
		nlil0i = 0;
		nlil0l = 0;
		nlil0O = 0;
		nlil1i = 0;
		nlil1l = 0;
		nlil1O = 0;
		nlilii = 0;
		nlilil = 0;
		nliliO = 0;
		nlilli = 0;
		nlilll = 0;
		nlillO = 0;
		nlilOi = 0;
		nlilOl = 0;
		nlilOO = 0;
		nliO0i = 0;
		nliO0l = 0;
		nliO0O = 0;
		nliO1i = 0;
		nliO1l = 0;
		nliO1O = 0;
		nliOii = 0;
		nliOil = 0;
		nliOiO = 0;
		nliOli = 0;
		nliOll = 0;
		nliOlO = 0;
		nliOOi = 0;
		nliOOl = 0;
		nliOOO = 0;
		nll00i = 0;
		nll00l = 0;
		nll00O = 0;
		nll01i = 0;
		nll01l = 0;
		nll01O = 0;
		nll0ii = 0;
		nll0il = 0;
		nll0iO = 0;
		nll0li = 0;
		nll0ll = 0;
		nll0lO = 0;
		nll0Oi = 0;
		nll0Ol = 0;
		nll0OO = 0;
		nll10i = 0;
		nll10l = 0;
		nll10O = 0;
		nll11i = 0;
		nll11l = 0;
		nll11O = 0;
		nll1ii = 0;
		nll1il = 0;
		nll1iO = 0;
		nll1li = 0;
		nll1ll = 0;
		nll1lO = 0;
		nll1Oi = 0;
		nll1Ol = 0;
		nll1OO = 0;
		nlli0i = 0;
		nlli0l = 0;
		nlli0O = 0;
		nlli1i = 0;
		nlli1l = 0;
		nlli1O = 0;
		nlliii = 0;
		nlliil = 0;
		nlliiO = 0;
		nllili = 0;
		nllill = 0;
		nllilO = 0;
		nlliOi = 0;
		nlliOl = 0;
		nlliOO = 0;
		nlll1i = 0;
		nlll1l = 0;
		nllOl = 0;
		nlO0O = 0;
	end
	always @ ( posedge clk or  negedge wire_nlO0l_CLRN)
	begin
		if (wire_nlO0l_CLRN == 1'b0) 
		begin
			n000i <= 0;
			n000l <= 0;
			n000O <= 0;
			n001i <= 0;
			n001l <= 0;
			n001O <= 0;
			n00ii <= 0;
			n00il <= 0;
			n00iO <= 0;
			n00li <= 0;
			n00ll <= 0;
			n00lO <= 0;
			n00Oi <= 0;
			n010i <= 0;
			n010l <= 0;
			n010O <= 0;
			n011i <= 0;
			n011l <= 0;
			n011O <= 0;
			n01ii <= 0;
			n01il <= 0;
			n01iO <= 0;
			n01li <= 0;
			n01ll <= 0;
			n01lO <= 0;
			n01Oi <= 0;
			n01Ol <= 0;
			n01OO <= 0;
			n1OlO <= 0;
			n1OOO <= 0;
			niiOl <= 0;
			niiOO <= 0;
			nil0i <= 0;
			nil0l <= 0;
			nil0O <= 0;
			nil1i <= 0;
			nil1l <= 0;
			nil1O <= 0;
			nilii <= 0;
			nilil <= 0;
			niliO <= 0;
			nilli <= 0;
			nilll <= 0;
			nillli <= 0;
			nillll <= 0;
			nilllO <= 0;
			nillO <= 0;
			nillOi <= 0;
			nillOl <= 0;
			nillOO <= 0;
			nilO0i <= 0;
			nilO0l <= 0;
			nilO1i <= 0;
			nilO1l <= 0;
			nilO1O <= 0;
			nilOi <= 0;
			niO0lO <= 0;
			niO0Oi <= 0;
			niO0Ol <= 0;
			niO0OO <= 0;
			niO10O <= 0;
			niO1ii <= 0;
			niO1il <= 0;
			niO1iO <= 0;
			niOi0i <= 0;
			niOi0l <= 0;
			niOi0O <= 0;
			niOi1i <= 0;
			niOi1l <= 0;
			niOi1O <= 0;
			niOiii <= 0;
			niOiil <= 0;
			niOiiO <= 0;
			niOili <= 0;
			niOill <= 0;
			niOilO <= 0;
			niOiOi <= 0;
			niOiOl <= 0;
			niOiOO <= 0;
			niOl0i <= 0;
			niOl0l <= 0;
			niOl1i <= 0;
			niOl1l <= 0;
			niOl1O <= 0;
			nl000l <= 0;
			nl000O <= 0;
			nl001O <= 0;
			nl00i <= 0;
			nl00ii <= 0;
			nl00il <= 0;
			nl00iO <= 0;
			nl00l <= 0;
			nl00li <= 0;
			nl00ll <= 0;
			nl00lO <= 0;
			nl00O <= 0;
			nl00Oi <= 0;
			nl00Ol <= 0;
			nl00OO <= 0;
			nl01i <= 0;
			nl01l <= 0;
			nl01O <= 0;
			nl0i0i <= 0;
			nl0i1i <= 0;
			nl0i1l <= 0;
			nl0i1O <= 0;
			nl0ii <= 0;
			nl0il <= 0;
			nl0iO <= 0;
			nl0li <= 0;
			nl0ll <= 0;
			nl0lO <= 0;
			nl0O0l <= 0;
			nl0O0O <= 0;
			nl0Oi <= 0;
			nl0Oii <= 0;
			nl0Oil <= 0;
			nl0OiO <= 0;
			nl0Oli <= 0;
			nl0Oll <= 0;
			nl0OlO <= 0;
			nl0OOi <= 0;
			nl0OOl <= 0;
			nl0OOO <= 0;
			nl10ll <= 0;
			nl10lO <= 0;
			nl10Oi <= 0;
			nl10Ol <= 0;
			nl10OO <= 0;
			nl1i0i <= 0;
			nl1i0l <= 0;
			nl1i0O <= 0;
			nl1i1i <= 0;
			nl1i1l <= 0;
			nl1i1O <= 0;
			nl1iii <= 0;
			nl1iil <= 0;
			nl1iiO <= 0;
			nl1ili <= 0;
			nl1ill <= 0;
			nl1ilO <= 0;
			nl1iOi <= 0;
			nl1iOl <= 0;
			nl1iOO <= 0;
			nl1l1i <= 0;
			nl1Ol <= 0;
			nl1OO <= 0;
			nliiii <= 0;
			nliiil <= 0;
			nliiiO <= 0;
			nliili <= 0;
			nliill <= 0;
			nliilO <= 0;
			nliiOi <= 0;
			nliiOl <= 0;
			nliiOO <= 0;
			nlil0i <= 0;
			nlil0l <= 0;
			nlil0O <= 0;
			nlil1i <= 0;
			nlil1l <= 0;
			nlil1O <= 0;
			nlilii <= 0;
			nlilil <= 0;
			nliliO <= 0;
			nlilli <= 0;
			nlilll <= 0;
			nlillO <= 0;
			nlilOi <= 0;
			nlilOl <= 0;
			nlilOO <= 0;
			nliO0i <= 0;
			nliO0l <= 0;
			nliO0O <= 0;
			nliO1i <= 0;
			nliO1l <= 0;
			nliO1O <= 0;
			nliOii <= 0;
			nliOil <= 0;
			nliOiO <= 0;
			nliOli <= 0;
			nliOll <= 0;
			nliOlO <= 0;
			nliOOi <= 0;
			nliOOl <= 0;
			nliOOO <= 0;
			nll00i <= 0;
			nll00l <= 0;
			nll00O <= 0;
			nll01i <= 0;
			nll01l <= 0;
			nll01O <= 0;
			nll0ii <= 0;
			nll0il <= 0;
			nll0iO <= 0;
			nll0li <= 0;
			nll0ll <= 0;
			nll0lO <= 0;
			nll0Oi <= 0;
			nll0Ol <= 0;
			nll0OO <= 0;
			nll10i <= 0;
			nll10l <= 0;
			nll10O <= 0;
			nll11i <= 0;
			nll11l <= 0;
			nll11O <= 0;
			nll1ii <= 0;
			nll1il <= 0;
			nll1iO <= 0;
			nll1li <= 0;
			nll1ll <= 0;
			nll1lO <= 0;
			nll1Oi <= 0;
			nll1Ol <= 0;
			nll1OO <= 0;
			nlli0i <= 0;
			nlli0l <= 0;
			nlli0O <= 0;
			nlli1i <= 0;
			nlli1l <= 0;
			nlli1O <= 0;
			nlliii <= 0;
			nlliil <= 0;
			nlliiO <= 0;
			nllili <= 0;
			nllill <= 0;
			nllilO <= 0;
			nlliOi <= 0;
			nlliOl <= 0;
			nlliOO <= 0;
			nlll1i <= 0;
			nlll1l <= 0;
			nllOl <= 0;
			nlO0O <= 0;
		end
		else 
		begin
			n000i <= wire_n0iiO_dataout;
			n000l <= wire_n0iil_dataout;
			n000O <= wire_n0iii_dataout;
			n001i <= wire_n0ilO_dataout;
			n001l <= wire_n0ill_dataout;
			n001O <= wire_n0ili_dataout;
			n00ii <= wire_n0i0O_dataout;
			n00il <= wire_n0i0l_dataout;
			n00iO <= wire_n0i0i_dataout;
			n00li <= wire_n0i1O_dataout;
			n00ll <= wire_n0i1l_dataout;
			n00lO <= wire_n0i1i_dataout;
			n00Oi <= wire_n00OO_dataout;
			n010i <= wire_n0liO_dataout;
			n010l <= wire_n0lil_dataout;
			n010O <= wire_n0lii_dataout;
			n011i <= wire_n0llO_dataout;
			n011l <= wire_n0lll_dataout;
			n011O <= wire_n0lli_dataout;
			n01ii <= wire_n0l0O_dataout;
			n01il <= wire_n0l0l_dataout;
			n01iO <= wire_n0l0i_dataout;
			n01li <= wire_n0l1O_dataout;
			n01ll <= wire_n0l1l_dataout;
			n01lO <= wire_n0l1i_dataout;
			n01Oi <= wire_n0iOO_dataout;
			n01Ol <= wire_n0iOl_dataout;
			n01OO <= wire_n0iOi_dataout;
			n1OlO <= wire_nlll1O_dataout;
			n1OOO <= wire_n0lOi_dataout;
			niiOl <= wire_n00Ol_dataout;
			niiOO <= wire_niOOi_dataout;
			nil0i <= wire_niOiO_dataout;
			nil0l <= wire_niOil_dataout;
			nil0O <= wire_niOii_dataout;
			nil1i <= wire_niOlO_dataout;
			nil1l <= wire_niOll_dataout;
			nil1O <= wire_niOli_dataout;
			nilii <= wire_niO0O_dataout;
			nilil <= wire_niO0l_dataout;
			niliO <= wire_niO0i_dataout;
			nilli <= wire_niO1O_dataout;
			nilll <= wire_niO1l_dataout;
			nillli <= wire_nilO0O_dataout;
			nillll <= wire_nilOii_dataout;
			nilllO <= wire_nilOil_dataout;
			nillO <= wire_niO1i_dataout;
			nillOi <= wire_nilOiO_dataout;
			nillOl <= wire_nilOli_dataout;
			nillOO <= wire_nilOll_dataout;
			nilO0i <= wire_nilOOO_dataout;
			nilO0l <= wire_niO11i_dataout;
			nilO1i <= wire_nilOlO_dataout;
			nilO1l <= wire_nilOOi_dataout;
			nilO1O <= wire_nilOOl_dataout;
			nilOi <= wire_nilOO_dataout;
			niO0lO <= wire_niOOOO_dataout;
			niO0Oi <= wire_niOOOl_dataout;
			niO0Ol <= wire_niOOOi_dataout;
			niO0OO <= wire_niOOlO_dataout;
			niO10O <= wire_niO11l_dataout;
			niO1ii <= wire_niO11O_dataout;
			niO1il <= wire_niO10i_dataout;
			niO1iO <= wire_niO10l_dataout;
			niOi0i <= wire_niOOil_dataout;
			niOi0l <= wire_niOOii_dataout;
			niOi0O <= wire_niOO0O_dataout;
			niOi1i <= wire_niOOll_dataout;
			niOi1l <= wire_niOOli_dataout;
			niOi1O <= wire_niOOiO_dataout;
			niOiii <= wire_niOO0l_dataout;
			niOiil <= wire_niOO0i_dataout;
			niOiiO <= wire_niOO1O_dataout;
			niOili <= wire_niOO1l_dataout;
			niOill <= wire_niOO1i_dataout;
			niOilO <= wire_niOlOO_dataout;
			niOiOi <= wire_niOlOl_dataout;
			niOiOl <= wire_niOlOi_dataout;
			niOiOO <= wire_niOllO_dataout;
			niOl0i <= wire_niOlil_dataout;
			niOl0l <= wire_niOlii_dataout;
			niOl1i <= wire_niOlll_dataout;
			niOl1l <= wire_niOlli_dataout;
			niOl1O <= wire_niOliO_dataout;
			nl000l <= wire_nl0l0i_dataout;
			nl000O <= wire_nl0l1O_dataout;
			nl001O <= wire_nl1l1l_dataout;
			nl00i <= wire_nliiO_dataout;
			nl00ii <= wire_nl0l1l_dataout;
			nl00il <= wire_nl0l1i_dataout;
			nl00iO <= wire_nl0iOO_dataout;
			nl00l <= wire_nliil_dataout;
			nl00li <= wire_nl0iOl_dataout;
			nl00ll <= wire_nl0iOi_dataout;
			nl00lO <= wire_nl0ilO_dataout;
			nl00O <= wire_nliii_dataout;
			nl00Oi <= wire_nl0ill_dataout;
			nl00Ol <= wire_nl0ili_dataout;
			nl00OO <= wire_nl0iiO_dataout;
			nl01i <= wire_nlilO_dataout;
			nl01l <= wire_nlill_dataout;
			nl01O <= wire_nlili_dataout;
			nl0i0i <= wire_nl0i0l_dataout;
			nl0i1i <= wire_nl0iil_dataout;
			nl0i1l <= wire_nl0iii_dataout;
			nl0i1O <= wire_nl0i0O_dataout;
			nl0ii <= wire_nli0O_dataout;
			nl0il <= wire_nli0l_dataout;
			nl0iO <= wire_nli0i_dataout;
			nl0li <= wire_nli1O_dataout;
			nl0ll <= wire_nli1l_dataout;
			nl0lO <= wire_nli1i_dataout;
			nl0O0l <= wire_nli1lO_dataout;
			nl0O0O <= wire_nli1ll_dataout;
			nl0Oi <= wire_nl0OO_dataout;
			nl0Oii <= wire_nli1li_dataout;
			nl0Oil <= wire_nli1iO_dataout;
			nl0OiO <= wire_nli1il_dataout;
			nl0Oli <= wire_nli1ii_dataout;
			nl0Oll <= wire_nli10O_dataout;
			nl0OlO <= wire_nli10l_dataout;
			nl0OOi <= wire_nli10i_dataout;
			nl0OOl <= wire_nli11O_dataout;
			nl0OOO <= wire_nli11l_dataout;
			nl10ll <= wire_niOl0O_dataout;
			nl10lO <= wire_nl1Oii_dataout;
			nl10Oi <= wire_nl1O0O_dataout;
			nl10Ol <= wire_nl1O0l_dataout;
			nl10OO <= wire_nl1O0i_dataout;
			nl1i0i <= wire_nl1lOO_dataout;
			nl1i0l <= wire_nl1lOl_dataout;
			nl1i0O <= wire_nl1lOi_dataout;
			nl1i1i <= wire_nl1O1O_dataout;
			nl1i1l <= wire_nl1O1l_dataout;
			nl1i1O <= wire_nl1O1i_dataout;
			nl1iii <= wire_nl1llO_dataout;
			nl1iil <= wire_nl1lll_dataout;
			nl1iiO <= wire_nl1lli_dataout;
			nl1ili <= wire_nl1liO_dataout;
			nl1ill <= wire_nl1lil_dataout;
			nl1ilO <= wire_nl1lii_dataout;
			nl1iOi <= wire_nl1l0O_dataout;
			nl1iOl <= wire_nl1l0l_dataout;
			nl1iOO <= wire_nl1l0i_dataout;
			nl1l1i <= wire_nl1l1O_dataout;
			nl1Ol <= wire_nilOl_dataout;
			nl1OO <= wire_nliOi_dataout;
			nliiii <= wire_nli11i_dataout;
			nliiil <= wire_nlOlOi_dataout;
			nliiiO <= wire_nlOllO_dataout;
			nliili <= wire_nlOlll_dataout;
			nliill <= wire_nlOlli_dataout;
			nliilO <= wire_nlOliO_dataout;
			nliiOi <= wire_nlOlil_dataout;
			nliiOl <= wire_nlOlii_dataout;
			nliiOO <= wire_nlOl0O_dataout;
			nlil0i <= wire_nlOl1l_dataout;
			nlil0l <= wire_nlOl1i_dataout;
			nlil0O <= wire_nlOiOO_dataout;
			nlil1i <= wire_nlOl0l_dataout;
			nlil1l <= wire_nlOl0i_dataout;
			nlil1O <= wire_nlOl1O_dataout;
			nlilii <= wire_nlOiOl_dataout;
			nlilil <= wire_nlOiOi_dataout;
			nliliO <= wire_nlOilO_dataout;
			nlilli <= wire_nlOill_dataout;
			nlilll <= wire_nlOili_dataout;
			nlillO <= wire_nlOiiO_dataout;
			nlilOi <= wire_nlOiil_dataout;
			nlilOl <= wire_nlOiii_dataout;
			nlilOO <= wire_nlOi0O_dataout;
			nliO0i <= wire_nlOi1l_dataout;
			nliO0l <= wire_nlOi1i_dataout;
			nliO0O <= wire_nlO0OO_dataout;
			nliO1i <= wire_nlOi0l_dataout;
			nliO1l <= wire_nlOi0i_dataout;
			nliO1O <= wire_nlOi1O_dataout;
			nliOii <= wire_nlO0Ol_dataout;
			nliOil <= wire_nlO0Oi_dataout;
			nliOiO <= wire_nlO0lO_dataout;
			nliOli <= wire_nlO0ll_dataout;
			nliOll <= wire_nlO0li_dataout;
			nliOlO <= wire_nlO0iO_dataout;
			nliOOi <= wire_nlO0il_dataout;
			nliOOl <= wire_nlO0ii_dataout;
			nliOOO <= wire_nlO00O_dataout;
			nll00i <= wire_nlO11l_dataout;
			nll00l <= wire_nlO11i_dataout;
			nll00O <= wire_nllOOO_dataout;
			nll01i <= wire_nlO10l_dataout;
			nll01l <= wire_nlO10i_dataout;
			nll01O <= wire_nlO11O_dataout;
			nll0ii <= wire_nllOOl_dataout;
			nll0il <= wire_nllOOi_dataout;
			nll0iO <= wire_nllOlO_dataout;
			nll0li <= wire_nllOll_dataout;
			nll0ll <= wire_nllOli_dataout;
			nll0lO <= wire_nllOiO_dataout;
			nll0Oi <= wire_nllOil_dataout;
			nll0Ol <= wire_nllOii_dataout;
			nll0OO <= wire_nllO0O_dataout;
			nll10i <= wire_nlO01l_dataout;
			nll10l <= wire_nlO01i_dataout;
			nll10O <= wire_nlO1OO_dataout;
			nll11i <= wire_nlO00l_dataout;
			nll11l <= wire_nlO00i_dataout;
			nll11O <= wire_nlO01O_dataout;
			nll1ii <= wire_nlO1Ol_dataout;
			nll1il <= wire_nlO1Oi_dataout;
			nll1iO <= wire_nlO1lO_dataout;
			nll1li <= wire_nlO1ll_dataout;
			nll1ll <= wire_nlO1li_dataout;
			nll1lO <= wire_nlO1iO_dataout;
			nll1Oi <= wire_nlO1il_dataout;
			nll1Ol <= wire_nlO1ii_dataout;
			nll1OO <= wire_nlO10O_dataout;
			nlli0i <= wire_nllO1l_dataout;
			nlli0l <= wire_nllO1i_dataout;
			nlli0O <= wire_nlllOO_dataout;
			nlli1i <= wire_nllO0l_dataout;
			nlli1l <= wire_nllO0i_dataout;
			nlli1O <= wire_nllO1O_dataout;
			nlliii <= wire_nlllOl_dataout;
			nlliil <= wire_nlllOi_dataout;
			nlliiO <= wire_nllllO_dataout;
			nllili <= wire_nlllll_dataout;
			nllill <= wire_nlllli_dataout;
			nllilO <= wire_nllliO_dataout;
			nlliOi <= wire_nlllil_dataout;
			nlliOl <= wire_nlllii_dataout;
			nlliOO <= wire_nlll0O_dataout;
			nlll1i <= wire_nlll0l_dataout;
			nlll1l <= wire_nlll0i_dataout;
			nllOl <= wire_nl0Ol_dataout;
			nlO0O <= wire_nlO1l_dataout;
		end
	end
	assign
		wire_nlO0l_CLRN = (nilliO2 ^ nilliO1);
	lpm_add_sub   niO0li
	( 
	.aclr((~ reset_n)),
	.add_sub(1'b1),
	.clken(clken),
	.clock(clk),
	.cout(),
	.dataa({phi_inc_i[24:0]}),
	.datab({freq_mod_i[24:0]}),
	.overflow(),
	.result(wire_niO0li_result),
	.cin()
	);
	defparam
		niO0li.lpm_pipeline = 1,
		niO0li.lpm_representation = "SIGNED",
		niO0li.lpm_width = 25;
	lpm_add_sub   niO0ll
	( 
	.aclr((~ reset_n)),
	.clken(clken),
	.clock(clk),
	.cout(),
	.dataa({niO0lO, niO0Oi, niO0Ol, niO0OO, niOi1i, niOi1l, niOi1O, niOi0i, niOi0l, niOi0O, niOiii, niOiil, niOiiO, niOili, niOill, niOilO, niOiOi, niOiOl, niOiOO, niOl1i, niOl1l, niOl1O, niOl0i, niOl0l, nl10ll}),
	.datab({wire_niO0ll_result[24:0]}),
	.overflow(),
	.result(wire_niO0ll_result),
	.add_sub(),
	.cin()
	);
	defparam
		niO0ll.lpm_direction = "ADD",
		niO0ll.lpm_pipeline = 1,
		niO0ll.lpm_representation = "UNSIGNED",
		niO0ll.lpm_width = 25;
	lpm_add_sub   nl000i
	( 
	.aclr((~ reset_n)),
	.clken(clken),
	.clock(clk),
	.cout(),
	.dataa({wire_niO0ll_result[24:5]}),
	.datab({{16{nl1iOi}}, nl1iOl, nl1iOO, nl1l1i, nl001O}),
	.overflow(),
	.result(wire_nl000i_result),
	.add_sub(),
	.cin()
	);
	defparam
		nl000i.lpm_direction = "ADD",
		nl000i.lpm_pipeline = 1,
		nl000i.lpm_representation = "SIGNED",
		nl000i.lpm_width = 20;
	lpm_counter   nllOO
	( 
	.aclr((~ reset_n)),
	.clk_en(clken),
	.clock(clk),
	.cout(),
	.q(wire_nllOO_q),
	.aload(),
	.aset(),
	.cin(),
	.cnt_en(),
	.data(),
	.sclr(),
	.sload(),
	.sset(),
	.updown()
	);
	defparam
		nllOO.lpm_direction = "UP",
		nllOO.lpm_modulus = 0,
		nllOO.lpm_port_updown = "PORT_CONNECTIVITY",
		nllOO.lpm_width = 4;
	and(wire_n00Ol_dataout, wire_n0lOl_dataout, ~((~ reset_n)));
	and(wire_n00OO_dataout, wire_n0lOO_dataout, ~((~ reset_n)));
	and(wire_n0i0i_dataout, wire_n0O0i_dataout, ~((~ reset_n)));
	and(wire_n0i0l_dataout, wire_n0O0l_dataout, ~((~ reset_n)));
	and(wire_n0i0O_dataout, wire_n0O0O_dataout, ~((~ reset_n)));
	and(wire_n0i1i_dataout, wire_n0O1i_dataout, ~((~ reset_n)));
	and(wire_n0i1l_dataout, wire_n0O1l_dataout, ~((~ reset_n)));
	and(wire_n0i1O_dataout, wire_n0O1O_dataout, ~((~ reset_n)));
	and(wire_n0iii_dataout, wire_n0Oii_dataout, ~((~ reset_n)));
	and(wire_n0iil_dataout, wire_n0Oil_dataout, ~((~ reset_n)));
	and(wire_n0iiO_dataout, wire_n0OiO_dataout, ~((~ reset_n)));
	and(wire_n0ili_dataout, wire_n0Oli_dataout, ~((~ reset_n)));
	and(wire_n0ill_dataout, wire_n0Oll_dataout, ~((~ reset_n)));
	and(wire_n0ilO_dataout, wire_n0OlO_dataout, ~((~ reset_n)));
	and(wire_n0iOi_dataout, wire_n0OOi_dataout, ~((~ reset_n)));
	and(wire_n0iOl_dataout, wire_n0OOl_dataout, ~((~ reset_n)));
	and(wire_n0iOO_dataout, wire_n0OOO_dataout, ~((~ reset_n)));
	and(wire_n0l0i_dataout, wire_ni10i_dataout, ~((~ reset_n)));
	and(wire_n0l0l_dataout, wire_ni10l_dataout, ~((~ reset_n)));
	and(wire_n0l0O_dataout, wire_ni10O_dataout, ~((~ reset_n)));
	and(wire_n0l1i_dataout, wire_ni11i_dataout, ~((~ reset_n)));
	and(wire_n0l1l_dataout, wire_ni11l_dataout, ~((~ reset_n)));
	and(wire_n0l1O_dataout, wire_ni11O_dataout, ~((~ reset_n)));
	and(wire_n0lii_dataout, wire_ni1ii_dataout, ~((~ reset_n)));
	and(wire_n0lil_dataout, wire_ni1il_dataout, ~((~ reset_n)));
	and(wire_n0liO_dataout, wire_ni1iO_dataout, ~((~ reset_n)));
	and(wire_n0lli_dataout, wire_ni1li_dataout, ~((~ reset_n)));
	and(wire_n0lll_dataout, wire_ni1ll_dataout, ~((~ reset_n)));
	and(wire_n0llO_dataout, wire_ni1lO_dataout, ~((~ reset_n)));
	and(wire_n0lOi_dataout, wire_ni1Oi_dataout, ~((~ reset_n)));
	assign		wire_n0lOl_dataout = (clken === 1'b1) ? wire_ni1Ol_o : niiOl;
	assign		wire_n0lOO_dataout = (clken === 1'b1) ? wire_ni1OO_o : n00Oi;
	assign		wire_n0O0i_dataout = (clken === 1'b1) ? wire_ni00i_o : n00iO;
	assign		wire_n0O0l_dataout = (clken === 1'b1) ? wire_ni00l_o : n00il;
	assign		wire_n0O0O_dataout = (clken === 1'b1) ? wire_ni00O_o : n00ii;
	assign		wire_n0O1i_dataout = (clken === 1'b1) ? wire_ni01i_o : n00lO;
	assign		wire_n0O1l_dataout = (clken === 1'b1) ? wire_ni01l_o : n00ll;
	assign		wire_n0O1O_dataout = (clken === 1'b1) ? wire_ni01O_o : n00li;
	assign		wire_n0Oii_dataout = (clken === 1'b1) ? wire_ni0ii_o : n000O;
	assign		wire_n0Oil_dataout = (clken === 1'b1) ? wire_ni0il_o : n000l;
	assign		wire_n0OiO_dataout = (clken === 1'b1) ? wire_ni0iO_o : n000i;
	assign		wire_n0Oli_dataout = (clken === 1'b1) ? wire_ni0li_o : n001O;
	assign		wire_n0Oll_dataout = (clken === 1'b1) ? wire_ni0ll_o : n001l;
	assign		wire_n0OlO_dataout = (clken === 1'b1) ? wire_ni0lO_o : n001i;
	assign		wire_n0OOi_dataout = (clken === 1'b1) ? wire_ni0Oi_o : n01OO;
	assign		wire_n0OOl_dataout = (clken === 1'b1) ? wire_ni0Ol_o : n01Ol;
	assign		wire_n0OOO_dataout = (clken === 1'b1) ? wire_ni0OO_o : n01Oi;
	assign		wire_n100i_dataout = (clken === 1'b1) ? wire_n1Oli_o[7] : nll1Oi;
	assign		wire_n100l_dataout = (clken === 1'b1) ? wire_n1Oli_o[8] : nll1lO;
	assign		wire_n100O_dataout = (clken === 1'b1) ? wire_n1Oli_o[9] : nll1ll;
	assign		wire_n101i_dataout = (clken === 1'b1) ? wire_n1Oli_o[4] : nll01i;
	assign		wire_n101l_dataout = (clken === 1'b1) ? wire_n1Oli_o[5] : nll1OO;
	assign		wire_n101O_dataout = (clken === 1'b1) ? wire_n1Oli_o[6] : nll1Ol;
	assign		wire_n10ii_dataout = (clken === 1'b1) ? wire_n1Oli_o[10] : nll1li;
	assign		wire_n10il_dataout = (clken === 1'b1) ? wire_n1Oli_o[11] : nll1iO;
	assign		wire_n10iO_dataout = (clken === 1'b1) ? wire_n1Oli_o[12] : nll1il;
	assign		wire_n10li_dataout = (clken === 1'b1) ? wire_n1Oli_o[13] : nll1ii;
	assign		wire_n10ll_dataout = (clken === 1'b1) ? (~ wire_n1Oli_o[14]) : nll10O;
	assign		wire_n10lO_dataout = (clken === 1'b1) ? wire_n1Oll_o[0] : nll10l;
	assign		wire_n10Oi_dataout = (clken === 1'b1) ? wire_n1Oll_o[1] : nll10i;
	assign		wire_n10Ol_dataout = (clken === 1'b1) ? wire_n1Oll_o[2] : nll11O;
	assign		wire_n10OO_dataout = (clken === 1'b1) ? wire_n1Oll_o[3] : nll11l;
	assign		wire_n110i_dataout = (clken === 1'b1) ? nliiOO : nll0Oi;
	assign		wire_n110l_dataout = (clken === 1'b1) ? nliiOl : nll0lO;
	assign		wire_n110O_dataout = (clken === 1'b1) ? nliiOi : nll0ll;
	assign		wire_n111i_dataout = (clken === 1'b1) ? nlil1O : nlli1i;
	assign		wire_n111l_dataout = (clken === 1'b1) ? nlil1l : nll0OO;
	assign		wire_n111O_dataout = (clken === 1'b1) ? nlil1i : nll0Ol;
	assign		wire_n11ii_dataout = (clken === 1'b1) ? nliilO : nll0li;
	assign		wire_n11il_dataout = (clken === 1'b1) ? nliill : nll0iO;
	assign		wire_n11iO_dataout = (clken === 1'b1) ? nliili : nll0il;
	assign		wire_n11li_dataout = (clken === 1'b1) ? nliiiO : nll0ii;
	assign		wire_n11ll_dataout = (clken === 1'b1) ? nliiil : nll00O;
	assign		wire_n11lO_dataout = (clken === 1'b1) ? wire_n1Oli_o[0] : nll00l;
	assign		wire_n11Oi_dataout = (clken === 1'b1) ? wire_n1Oli_o[1] : nll00i;
	assign		wire_n11Ol_dataout = (clken === 1'b1) ? wire_n1Oli_o[2] : nll01O;
	assign		wire_n11OO_dataout = (clken === 1'b1) ? wire_n1Oli_o[3] : nll01l;
	assign		wire_n1i0i_dataout = (clken === 1'b1) ? wire_n1Oll_o[7] : nliOOi;
	assign		wire_n1i0l_dataout = (clken === 1'b1) ? wire_n1Oll_o[8] : nliOlO;
	assign		wire_n1i0O_dataout = (clken === 1'b1) ? wire_n1Oll_o[9] : nliOll;
	assign		wire_n1i1i_dataout = (clken === 1'b1) ? wire_n1Oll_o[4] : nll11i;
	assign		wire_n1i1l_dataout = (clken === 1'b1) ? wire_n1Oll_o[5] : nliOOO;
	assign		wire_n1i1O_dataout = (clken === 1'b1) ? wire_n1Oll_o[6] : nliOOl;
	assign		wire_n1iii_dataout = (clken === 1'b1) ? wire_n1Oll_o[10] : nliOli;
	assign		wire_n1iil_dataout = (clken === 1'b1) ? wire_n1Oll_o[11] : nliOiO;
	assign		wire_n1iiO_dataout = (clken === 1'b1) ? wire_n1Oll_o[12] : nliOil;
	assign		wire_n1ili_dataout = (clken === 1'b1) ? wire_n1Oll_o[13] : nliOii;
	assign		wire_n1ill_dataout = (clken === 1'b1) ? (~ wire_n1Oll_o[14]) : nliO0O;
	assign		wire_n1ilO_dataout = (clken === 1'b1) ? wire_n1OOl_q_a[0] : nliO0l;
	assign		wire_n1iOi_dataout = (clken === 1'b1) ? wire_n1OOl_q_a[1] : nliO0i;
	assign		wire_n1iOl_dataout = (clken === 1'b1) ? wire_n1OOl_q_a[2] : nliO1O;
	assign		wire_n1iOO_dataout = (clken === 1'b1) ? wire_n1OOl_q_a[3] : nliO1l;
	assign		wire_n1l0i_dataout = (clken === 1'b1) ? wire_n1OOl_q_a[7] : nlilOi;
	assign		wire_n1l0l_dataout = (clken === 1'b1) ? wire_n1OOl_q_a[8] : nlillO;
	assign		wire_n1l0O_dataout = (clken === 1'b1) ? wire_n1OOl_q_a[9] : nlilll;
	assign		wire_n1l1i_dataout = (clken === 1'b1) ? wire_n1OOl_q_a[4] : nliO1i;
	assign		wire_n1l1l_dataout = (clken === 1'b1) ? wire_n1OOl_q_a[5] : nlilOO;
	assign		wire_n1l1O_dataout = (clken === 1'b1) ? wire_n1OOl_q_a[6] : nlilOl;
	assign		wire_n1lii_dataout = (clken === 1'b1) ? wire_n1OOl_q_a[10] : nlilli;
	assign		wire_n1lil_dataout = (clken === 1'b1) ? wire_n1OOl_q_a[11] : nliliO;
	assign		wire_n1liO_dataout = (clken === 1'b1) ? wire_n1OOl_q_a[12] : nlilil;
	assign		wire_n1lli_dataout = (clken === 1'b1) ? wire_n1OOl_q_a[13] : nlilii;
	assign		wire_n1lll_dataout = (clken === 1'b1) ? wire_n1OOi_q_a[0] : nlil0O;
	assign		wire_n1llO_dataout = (clken === 1'b1) ? wire_n1OOi_q_a[1] : nlil0l;
	assign		wire_n1lOi_dataout = (clken === 1'b1) ? wire_n1OOi_q_a[2] : nlil0i;
	assign		wire_n1lOl_dataout = (clken === 1'b1) ? wire_n1OOi_q_a[3] : nlil1O;
	assign		wire_n1lOO_dataout = (clken === 1'b1) ? wire_n1OOi_q_a[4] : nlil1l;
	assign		wire_n1O0i_dataout = (clken === 1'b1) ? wire_n1OOi_q_a[8] : nliiOi;
	assign		wire_n1O0l_dataout = (clken === 1'b1) ? wire_n1OOi_q_a[9] : nliilO;
	assign		wire_n1O0O_dataout = (clken === 1'b1) ? wire_n1OOi_q_a[10] : nliill;
	assign		wire_n1O1i_dataout = (clken === 1'b1) ? wire_n1OOi_q_a[5] : nlil1i;
	assign		wire_n1O1l_dataout = (clken === 1'b1) ? wire_n1OOi_q_a[6] : nliiOO;
	assign		wire_n1O1O_dataout = (clken === 1'b1) ? wire_n1OOi_q_a[7] : nliiOl;
	assign		wire_n1Oii_dataout = (clken === 1'b1) ? wire_n1OOi_q_a[11] : nliili;
	assign		wire_n1Oil_dataout = (clken === 1'b1) ? wire_n1OOi_q_a[12] : nliiiO;
	assign		wire_n1OiO_dataout = (clken === 1'b1) ? wire_n1OOi_q_a[13] : nliiil;
	assign		wire_ni10i_dataout = (clken === 1'b1) ? wire_nii0i_o : n01iO;
	assign		wire_ni10l_dataout = (clken === 1'b1) ? wire_nii0l_o : n01il;
	assign		wire_ni10O_dataout = (clken === 1'b1) ? wire_nii0O_o : n01ii;
	assign		wire_ni11i_dataout = (clken === 1'b1) ? wire_nii1i_o : n01lO;
	assign		wire_ni11l_dataout = (clken === 1'b1) ? wire_nii1l_o : n01ll;
	assign		wire_ni11O_dataout = (clken === 1'b1) ? wire_nii1O_o : n01li;
	assign		wire_ni1ii_dataout = (clken === 1'b1) ? wire_niiii_o : n010O;
	assign		wire_ni1il_dataout = (clken === 1'b1) ? wire_niiil_o : n010l;
	assign		wire_ni1iO_dataout = (clken === 1'b1) ? wire_niiiO_o : n010i;
	assign		wire_ni1li_dataout = (clken === 1'b1) ? wire_niili_o : n011O;
	assign		wire_ni1ll_dataout = (clken === 1'b1) ? wire_niill_o : n011l;
	assign		wire_ni1lO_dataout = (clken === 1'b1) ? wire_niilO_o : n011i;
	assign		wire_ni1Oi_dataout = (clken === 1'b1) ? wire_niiOi_o : n1OOO;
	and(wire_nilO0O_dataout, wire_niO1li_dataout, ~((~ reset_n)));
	and(wire_nilOii_dataout, wire_niO1ll_dataout, ~((~ reset_n)));
	and(wire_nilOil_dataout, wire_niO1lO_dataout, ~((~ reset_n)));
	and(wire_nilOiO_dataout, wire_niO1Oi_dataout, ~((~ reset_n)));
	and(wire_nilOl_dataout, wire_niOOl_dataout, ~((~ reset_n)));
	and(wire_nilOli_dataout, wire_niO1Ol_dataout, ~((~ reset_n)));
	and(wire_nilOll_dataout, wire_niO1OO_dataout, ~((~ reset_n)));
	and(wire_nilOlO_dataout, wire_niO01i_dataout, ~((~ reset_n)));
	and(wire_nilOO_dataout, wire_niOOO_dataout, ~((~ reset_n)));
	and(wire_nilOOi_dataout, wire_niO01l_dataout, ~((~ reset_n)));
	and(wire_nilOOl_dataout, wire_niO01O_dataout, ~((~ reset_n)));
	and(wire_nilOOO_dataout, wire_niO00i_dataout, ~((~ reset_n)));
	assign		wire_niO00i_dataout = (clken === 1'b1) ? nilO1i : nilO0i;
	assign		wire_niO00l_dataout = (clken === 1'b1) ? nilO1l : nilO0l;
	assign		wire_niO00O_dataout = (clken === 1'b1) ? nilO1O : niO10O;
	assign		wire_niO01i_dataout = (clken === 1'b1) ? nillOi : nilO1i;
	assign		wire_niO01l_dataout = (clken === 1'b1) ? nillOl : nilO1l;
	assign		wire_niO01O_dataout = (clken === 1'b1) ? nillOO : nilO1O;
	and(wire_niO0i_dataout, wire_nl10i_dataout, ~((~ reset_n)));
	assign		wire_niO0ii_dataout = (clken === 1'b1) ? nilO0i : niO1ii;
	assign		wire_niO0il_dataout = (clken === 1'b1) ? nilO0l : niO1il;
	assign		wire_niO0iO_dataout = (clken === 1'b1) ? niO10O : niO1iO;
	and(wire_niO0l_dataout, wire_nl10l_dataout, ~((~ reset_n)));
	and(wire_niO0O_dataout, wire_nl10O_dataout, ~((~ reset_n)));
	and(wire_niO10i_dataout, wire_niO0il_dataout, ~((~ reset_n)));
	and(wire_niO10l_dataout, wire_niO0iO_dataout, ~((~ reset_n)));
	and(wire_niO11i_dataout, wire_niO00l_dataout, ~((~ reset_n)));
	and(wire_niO11l_dataout, wire_niO00O_dataout, ~((~ reset_n)));
	and(wire_niO11O_dataout, wire_niO0ii_dataout, ~((~ reset_n)));
	and(wire_niO1i_dataout, wire_nl11i_dataout, ~((~ reset_n)));
	and(wire_niO1l_dataout, wire_nl11l_dataout, ~((~ reset_n)));
	assign		wire_niO1li_dataout = (clken === 1'b1) ? niO1ii : nillli;
	assign		wire_niO1ll_dataout = (clken === 1'b1) ? niO1il : nillll;
	assign		wire_niO1lO_dataout = (clken === 1'b1) ? niO1iO : nilllO;
	and(wire_niO1O_dataout, wire_nl11O_dataout, ~((~ reset_n)));
	assign		wire_niO1Oi_dataout = (clken === 1'b1) ? nl00ii : nillOi;
	assign		wire_niO1Ol_dataout = (clken === 1'b1) ? nl000O : nillOl;
	assign		wire_niO1OO_dataout = (clken === 1'b1) ? nl000l : nillOO;
	and(wire_niOii_dataout, wire_nl1ii_dataout, ~((~ reset_n)));
	and(wire_niOil_dataout, wire_nl1il_dataout, ~((~ reset_n)));
	and(wire_niOiO_dataout, wire_nl1iO_dataout, ~((~ reset_n)));
	and(wire_niOl0O_dataout, wire_nl111i_dataout, ~((~ reset_n)));
	and(wire_niOli_dataout, wire_nl1li_dataout, ~((~ reset_n)));
	and(wire_niOlii_dataout, wire_nl111l_dataout, ~((~ reset_n)));
	and(wire_niOlil_dataout, wire_nl111O_dataout, ~((~ reset_n)));
	and(wire_niOliO_dataout, wire_nl110i_dataout, ~((~ reset_n)));
	and(wire_niOll_dataout, wire_nl1ll_dataout, ~((~ reset_n)));
	and(wire_niOlli_dataout, wire_nl110l_dataout, ~((~ reset_n)));
	and(wire_niOlll_dataout, wire_nl110O_dataout, ~((~ reset_n)));
	and(wire_niOllO_dataout, wire_nl11ii_dataout, ~((~ reset_n)));
	and(wire_niOlO_dataout, wire_nl1lO_dataout, ~((~ reset_n)));
	and(wire_niOlOi_dataout, wire_nl11il_dataout, ~((~ reset_n)));
	and(wire_niOlOl_dataout, wire_nl11iO_dataout, ~((~ reset_n)));
	and(wire_niOlOO_dataout, wire_nl11li_dataout, ~((~ reset_n)));
	and(wire_niOO0i_dataout, wire_nl11Ol_dataout, ~((~ reset_n)));
	and(wire_niOO0l_dataout, wire_nl11OO_dataout, ~((~ reset_n)));
	and(wire_niOO0O_dataout, wire_nl101i_dataout, ~((~ reset_n)));
	and(wire_niOO1i_dataout, wire_nl11ll_dataout, ~((~ reset_n)));
	and(wire_niOO1l_dataout, wire_nl11lO_dataout, ~((~ reset_n)));
	and(wire_niOO1O_dataout, wire_nl11Oi_dataout, ~((~ reset_n)));
	and(wire_niOOi_dataout, wire_nl1Oi_dataout, ~((~ reset_n)));
	and(wire_niOOii_dataout, wire_nl101l_dataout, ~((~ reset_n)));
	and(wire_niOOil_dataout, wire_nl101O_dataout, ~((~ reset_n)));
	and(wire_niOOiO_dataout, wire_nl100i_dataout, ~((~ reset_n)));
	assign		wire_niOOl_dataout = (clken === 1'b1) ? n01Ol : nl1Ol;
	and(wire_niOOli_dataout, wire_nl100l_dataout, ~((~ reset_n)));
	and(wire_niOOll_dataout, wire_nl100O_dataout, ~((~ reset_n)));
	and(wire_niOOlO_dataout, wire_nl10ii_dataout, ~((~ reset_n)));
	assign		wire_niOOO_dataout = (clken === 1'b1) ? n01Oi : nilOi;
	and(wire_niOOOi_dataout, wire_nl10il_dataout, ~((~ reset_n)));
	and(wire_niOOOl_dataout, wire_nl10iO_dataout, ~((~ reset_n)));
	and(wire_niOOOO_dataout, wire_nl10li_dataout, ~((~ reset_n)));
	assign		wire_nl010i_dataout = (clken === 1'b1) ? nl1iii : nl1i0O;
	assign		wire_nl010l_dataout = (clken === 1'b1) ? nl1i0O : nl1i0l;
	assign		wire_nl010O_dataout = (clken === 1'b1) ? nl1i0l : nl1i0i;
	assign		wire_nl011i_dataout = (clken === 1'b1) ? nl1ili : nl1iiO;
	assign		wire_nl011l_dataout = (clken === 1'b1) ? nl1iiO : nl1iil;
	assign		wire_nl011O_dataout = (clken === 1'b1) ? nl1iil : nl1iii;
	assign		wire_nl01ii_dataout = (clken === 1'b1) ? nl1i0i : nl1i1O;
	assign		wire_nl01il_dataout = (clken === 1'b1) ? nl1i1O : nl1i1l;
	assign		wire_nl01iO_dataout = (clken === 1'b1) ? nl1i1l : nl1i1i;
	assign		wire_nl01li_dataout = (clken === 1'b1) ? nl1i1i : nl10OO;
	assign		wire_nl01ll_dataout = (clken === 1'b1) ? nl10OO : nl10Ol;
	assign		wire_nl01lO_dataout = (clken === 1'b1) ? nl10Ol : nl10Oi;
	assign		wire_nl01Oi_dataout = (clken === 1'b1) ? nl10Oi : nl10lO;
	and(wire_nl0i0l_dataout, wire_nl0l0l_dataout, ~((~ reset_n)));
	and(wire_nl0i0O_dataout, wire_nl0l0O_dataout, ~((~ reset_n)));
	and(wire_nl0iii_dataout, wire_nl0lii_dataout, ~((~ reset_n)));
	and(wire_nl0iil_dataout, wire_nl0lil_dataout, ~((~ reset_n)));
	and(wire_nl0iiO_dataout, wire_nl0liO_dataout, ~((~ reset_n)));
	and(wire_nl0ili_dataout, wire_nl0lli_dataout, ~((~ reset_n)));
	and(wire_nl0ill_dataout, wire_nl0lll_dataout, ~((~ reset_n)));
	and(wire_nl0ilO_dataout, wire_nl0llO_dataout, ~((~ reset_n)));
	and(wire_nl0iOi_dataout, wire_nl0lOi_dataout, ~((~ reset_n)));
	and(wire_nl0iOl_dataout, wire_nl0lOl_dataout, ~((~ reset_n)));
	and(wire_nl0iOO_dataout, wire_nl0lOO_dataout, ~((~ reset_n)));
	and(wire_nl0l0i_dataout, wire_nl0O0i_dataout, ~((~ reset_n)));
	assign		wire_nl0l0l_dataout = (clken === 1'b1) ? wire_nl000i_result[5] : nl0i0i;
	assign		wire_nl0l0O_dataout = (clken === 1'b1) ? wire_nl000i_result[6] : nl0i1O;
	and(wire_nl0l1i_dataout, wire_nl0O1i_dataout, ~((~ reset_n)));
	and(wire_nl0l1l_dataout, wire_nl0O1l_dataout, ~((~ reset_n)));
	and(wire_nl0l1O_dataout, wire_nl0O1O_dataout, ~((~ reset_n)));
	assign		wire_nl0lii_dataout = (clken === 1'b1) ? wire_nl000i_result[7] : nl0i1l;
	assign		wire_nl0lil_dataout = (clken === 1'b1) ? wire_nl000i_result[8] : nl0i1i;
	assign		wire_nl0liO_dataout = (clken === 1'b1) ? wire_nl000i_result[9] : nl00OO;
	assign		wire_nl0lli_dataout = (clken === 1'b1) ? wire_nl000i_result[10] : nl00Ol;
	assign		wire_nl0lll_dataout = (clken === 1'b1) ? wire_nl000i_result[11] : nl00Oi;
	assign		wire_nl0llO_dataout = (clken === 1'b1) ? wire_nl000i_result[12] : nl00lO;
	assign		wire_nl0lOi_dataout = (clken === 1'b1) ? wire_nl000i_result[13] : nl00ll;
	assign		wire_nl0lOl_dataout = (clken === 1'b1) ? wire_nl000i_result[14] : nl00li;
	assign		wire_nl0lOO_dataout = (clken === 1'b1) ? wire_nl000i_result[15] : nl00iO;
	assign		wire_nl0O0i_dataout = (clken === 1'b1) ? wire_nl000i_result[19] : nl000l;
	assign		wire_nl0O1i_dataout = (clken === 1'b1) ? wire_nl000i_result[16] : nl00il;
	assign		wire_nl0O1l_dataout = (clken === 1'b1) ? wire_nl000i_result[17] : nl00ii;
	assign		wire_nl0O1O_dataout = (clken === 1'b1) ? wire_nl000i_result[18] : nl000O;
	and(wire_nl0Ol_dataout, wire_nliOl_dataout, ~((~ reset_n)));
	and(wire_nl0OO_dataout, wire_nliOO_dataout, ~((~ reset_n)));
	assign		wire_nl100i_dataout = (clken === 1'b1) ? wire_niO0li_result[18] : niOi1O;
	assign		wire_nl100l_dataout = (clken === 1'b1) ? wire_niO0li_result[19] : niOi1l;
	assign		wire_nl100O_dataout = (clken === 1'b1) ? wire_niO0li_result[20] : niOi1i;
	assign		wire_nl101i_dataout = (clken === 1'b1) ? wire_niO0li_result[15] : niOi0O;
	assign		wire_nl101l_dataout = (clken === 1'b1) ? wire_niO0li_result[16] : niOi0l;
	assign		wire_nl101O_dataout = (clken === 1'b1) ? wire_niO0li_result[17] : niOi0i;
	assign		wire_nl10i_dataout = (clken === 1'b1) ? n01iO : niliO;
	assign		wire_nl10ii_dataout = (clken === 1'b1) ? wire_niO0li_result[21] : niO0OO;
	assign		wire_nl10il_dataout = (clken === 1'b1) ? wire_niO0li_result[22] : niO0Ol;
	assign		wire_nl10iO_dataout = (clken === 1'b1) ? wire_niO0li_result[23] : niO0Oi;
	assign		wire_nl10l_dataout = (clken === 1'b1) ? n01il : nilil;
	assign		wire_nl10li_dataout = (clken === 1'b1) ? wire_niO0li_result[24] : niO0lO;
	assign		wire_nl10O_dataout = (clken === 1'b1) ? n01ii : nilii;
	assign		wire_nl110i_dataout = (clken === 1'b1) ? wire_niO0li_result[3] : niOl1O;
	assign		wire_nl110l_dataout = (clken === 1'b1) ? wire_niO0li_result[4] : niOl1l;
	assign		wire_nl110O_dataout = (clken === 1'b1) ? wire_niO0li_result[5] : niOl1i;
	assign		wire_nl111i_dataout = (clken === 1'b1) ? wire_niO0li_result[0] : nl10ll;
	assign		wire_nl111l_dataout = (clken === 1'b1) ? wire_niO0li_result[1] : niOl0l;
	assign		wire_nl111O_dataout = (clken === 1'b1) ? wire_niO0li_result[2] : niOl0i;
	assign		wire_nl11i_dataout = (clken === 1'b1) ? n01lO : nillO;
	assign		wire_nl11ii_dataout = (clken === 1'b1) ? wire_niO0li_result[6] : niOiOO;
	assign		wire_nl11il_dataout = (clken === 1'b1) ? wire_niO0li_result[7] : niOiOl;
	assign		wire_nl11iO_dataout = (clken === 1'b1) ? wire_niO0li_result[8] : niOiOi;
	assign		wire_nl11l_dataout = (clken === 1'b1) ? n01ll : nilll;
	assign		wire_nl11li_dataout = (clken === 1'b1) ? wire_niO0li_result[9] : niOilO;
	assign		wire_nl11ll_dataout = (clken === 1'b1) ? wire_niO0li_result[10] : niOill;
	assign		wire_nl11lO_dataout = (clken === 1'b1) ? wire_niO0li_result[11] : niOili;
	assign		wire_nl11O_dataout = (clken === 1'b1) ? n01li : nilli;
	assign		wire_nl11Oi_dataout = (clken === 1'b1) ? wire_niO0li_result[12] : niOiiO;
	assign		wire_nl11Ol_dataout = (clken === 1'b1) ? wire_niO0li_result[13] : niOiil;
	assign		wire_nl11OO_dataout = (clken === 1'b1) ? wire_niO0li_result[14] : niOiii;
	assign		wire_nl1ii_dataout = (clken === 1'b1) ? n010O : nil0O;
	assign		wire_nl1il_dataout = (clken === 1'b1) ? n010l : nil0l;
	assign		wire_nl1iO_dataout = (clken === 1'b1) ? n010i : nil0i;
	and(wire_nl1l0i_dataout, wire_nl1Oli_dataout, ~((~ reset_n)));
	and(wire_nl1l0l_dataout, wire_nl1Oll_dataout, ~((~ reset_n)));
	and(wire_nl1l0O_dataout, wire_nl1OlO_dataout, ~((~ reset_n)));
	and(wire_nl1l1l_dataout, wire_nl1Oil_dataout, ~((~ reset_n)));
	and(wire_nl1l1O_dataout, wire_nl1OiO_dataout, ~((~ reset_n)));
	assign		wire_nl1li_dataout = (clken === 1'b1) ? n011O : nil1O;
	or(wire_nl1lii_dataout, wire_nl1OOi_dataout, (~ reset_n));
	and(wire_nl1lil_dataout, wire_nl1OOl_dataout, ~((~ reset_n)));
	or(wire_nl1liO_dataout, wire_nl1OOO_dataout, (~ reset_n));
	assign		wire_nl1ll_dataout = (clken === 1'b1) ? n011l : nil1l;
	or(wire_nl1lli_dataout, wire_nl011i_dataout, (~ reset_n));
	or(wire_nl1lll_dataout, wire_nl011l_dataout, (~ reset_n));
	and(wire_nl1llO_dataout, wire_nl011O_dataout, ~((~ reset_n)));
	assign		wire_nl1lO_dataout = (clken === 1'b1) ? n011i : nil1i;
	or(wire_nl1lOi_dataout, wire_nl010i_dataout, (~ reset_n));
	or(wire_nl1lOl_dataout, wire_nl010l_dataout, (~ reset_n));
	and(wire_nl1lOO_dataout, wire_nl010O_dataout, ~((~ reset_n)));
	or(wire_nl1O0i_dataout, wire_nl01li_dataout, (~ reset_n));
	and(wire_nl1O0l_dataout, wire_nl01ll_dataout, ~((~ reset_n)));
	and(wire_nl1O0O_dataout, wire_nl01lO_dataout, ~((~ reset_n)));
	or(wire_nl1O1i_dataout, wire_nl01ii_dataout, (~ reset_n));
	and(wire_nl1O1l_dataout, wire_nl01il_dataout, ~((~ reset_n)));
	or(wire_nl1O1O_dataout, wire_nl01iO_dataout, (~ reset_n));
	assign		wire_nl1Oi_dataout = (clken === 1'b1) ? n1OOO : niiOO;
	or(wire_nl1Oii_dataout, wire_nl01Oi_dataout, (~ reset_n));
	assign		wire_nl1Oil_dataout = (clken === 1'b1) ? wire_nl01Ol_o[0] : nl001O;
	assign		wire_nl1OiO_dataout = (clken === 1'b1) ? wire_nl01Ol_o[1] : nl1l1i;
	assign		wire_nl1Oli_dataout = (clken === 1'b1) ? wire_nl01Ol_o[2] : nl1iOO;
	assign		wire_nl1Oll_dataout = (clken === 1'b1) ? wire_nl01Ol_o[3] : nl1iOl;
	assign		wire_nl1OlO_dataout = (clken === 1'b1) ? wire_nl01Ol_o[4] : nl1iOi;
	assign		wire_nl1OOi_dataout = (clken === 1'b1) ? ((nl10Oi ^ nl10lO) ^ (nl1iiO ^ nl10OO)) : nl1ilO;
	assign		wire_nl1OOl_dataout = (clken === 1'b1) ? nl1ilO : nl1ill;
	assign		wire_nl1OOO_dataout = (clken === 1'b1) ? nl1ill : nl1ili;
	assign		wire_nli00i_dataout = (clken === 1'b1) ? wire_nlii1i_dataout : nl0Oli;
	assign		wire_nli00l_dataout = (clken === 1'b1) ? wire_nlii1l_dataout : nl0OiO;
	assign		wire_nli00O_dataout = (clken === 1'b1) ? wire_nlii1O_dataout : nl0Oil;
	assign		wire_nli01i_dataout = (clken === 1'b1) ? wire_nli0Oi_dataout : nl0OOi;
	assign		wire_nli01l_dataout = (clken === 1'b1) ? wire_nli0Ol_dataout : nl0OlO;
	assign		wire_nli01O_dataout = (clken === 1'b1) ? wire_nli0OO_dataout : nl0Oll;
	and(wire_nli0i_dataout, wire_nll0i_dataout, ~((~ reset_n)));
	assign		wire_nli0ii_dataout = (clken === 1'b1) ? wire_nlii0i_dataout : nl0Oii;
	assign		wire_nli0il_dataout = (clken === 1'b1) ? wire_nlii0l_dataout : nl0O0O;
	assign		wire_nli0iO_dataout = (clken === 1'b1) ? wire_nlii0O_dataout : nl0O0l;
	and(wire_nli0l_dataout, wire_nll0l_dataout, ~((~ reset_n)));
	assign		wire_nli0li_dataout = ((~ nl00ii) === 1'b1) ? nl0i0i : (~ nl0i0i);
	assign		wire_nli0ll_dataout = ((~ nl00ii) === 1'b1) ? nl0i1O : (~ nl0i1O);
	assign		wire_nli0lO_dataout = ((~ nl00ii) === 1'b1) ? nl0i1l : (~ nl0i1l);
	and(wire_nli0O_dataout, wire_nll0O_dataout, ~((~ reset_n)));
	assign		wire_nli0Oi_dataout = ((~ nl00ii) === 1'b1) ? nl0i1i : (~ nl0i1i);
	assign		wire_nli0Ol_dataout = ((~ nl00ii) === 1'b1) ? nl00OO : (~ nl00OO);
	assign		wire_nli0OO_dataout = ((~ nl00ii) === 1'b1) ? nl00Ol : (~ nl00Ol);
	and(wire_nli10i_dataout, wire_nli01i_dataout, ~((~ reset_n)));
	and(wire_nli10l_dataout, wire_nli01l_dataout, ~((~ reset_n)));
	and(wire_nli10O_dataout, wire_nli01O_dataout, ~((~ reset_n)));
	and(wire_nli11i_dataout, wire_nli1Oi_dataout, ~((~ reset_n)));
	and(wire_nli11l_dataout, wire_nli1Ol_dataout, ~((~ reset_n)));
	and(wire_nli11O_dataout, wire_nli1OO_dataout, ~((~ reset_n)));
	and(wire_nli1i_dataout, wire_nll1i_dataout, ~((~ reset_n)));
	and(wire_nli1ii_dataout, wire_nli00i_dataout, ~((~ reset_n)));
	and(wire_nli1il_dataout, wire_nli00l_dataout, ~((~ reset_n)));
	and(wire_nli1iO_dataout, wire_nli00O_dataout, ~((~ reset_n)));
	and(wire_nli1l_dataout, wire_nll1l_dataout, ~((~ reset_n)));
	and(wire_nli1li_dataout, wire_nli0ii_dataout, ~((~ reset_n)));
	and(wire_nli1ll_dataout, wire_nli0il_dataout, ~((~ reset_n)));
	and(wire_nli1lO_dataout, wire_nli0iO_dataout, ~((~ reset_n)));
	and(wire_nli1O_dataout, wire_nll1O_dataout, ~((~ reset_n)));
	assign		wire_nli1Oi_dataout = (clken === 1'b1) ? wire_nli0li_dataout : nliiii;
	assign		wire_nli1Ol_dataout = (clken === 1'b1) ? wire_nli0ll_dataout : nl0OOO;
	assign		wire_nli1OO_dataout = (clken === 1'b1) ? wire_nli0lO_dataout : nl0OOl;
	assign		wire_nlii0i_dataout = ((~ nl00ii) === 1'b1) ? nl00li : (~ nl00li);
	assign		wire_nlii0l_dataout = ((~ nl00ii) === 1'b1) ? nl00iO : (~ nl00iO);
	assign		wire_nlii0O_dataout = ((~ nl00ii) === 1'b1) ? nl00il : (~ nl00il);
	assign		wire_nlii1i_dataout = ((~ nl00ii) === 1'b1) ? nl00Oi : (~ nl00Oi);
	assign		wire_nlii1l_dataout = ((~ nl00ii) === 1'b1) ? nl00lO : (~ nl00lO);
	assign		wire_nlii1O_dataout = ((~ nl00ii) === 1'b1) ? nl00ll : (~ nl00ll);
	and(wire_nliii_dataout, wire_nllii_dataout, ~((~ reset_n)));
	and(wire_nliil_dataout, wire_nllil_dataout, ~((~ reset_n)));
	and(wire_nliiO_dataout, wire_nlliO_dataout, ~((~ reset_n)));
	and(wire_nlili_dataout, wire_nllli_dataout, ~((~ reset_n)));
	and(wire_nlill_dataout, wire_nllll_dataout, ~((~ reset_n)));
	and(wire_nlilO_dataout, wire_nlllO_dataout, ~((~ reset_n)));
	and(wire_nliOi_dataout, wire_nllOi_dataout, ~((~ reset_n)));
	assign		wire_nliOl_dataout = (clken === 1'b1) ? niiOl : nllOl;
	assign		wire_nliOO_dataout = (clken === 1'b1) ? n00Oi : nl0Oi;
	assign		wire_nll0i_dataout = (clken === 1'b1) ? n00iO : nl0iO;
	assign		wire_nll0l_dataout = (clken === 1'b1) ? n00il : nl0il;
	assign		wire_nll0O_dataout = (clken === 1'b1) ? n00ii : nl0ii;
	assign		wire_nll1i_dataout = (clken === 1'b1) ? n00lO : nl0lO;
	assign		wire_nll1l_dataout = (clken === 1'b1) ? n00ll : nl0ll;
	assign		wire_nll1O_dataout = (clken === 1'b1) ? n00li : nl0li;
	assign		wire_nllii_dataout = (clken === 1'b1) ? n000O : nl00O;
	assign		wire_nllil_dataout = (clken === 1'b1) ? n000l : nl00l;
	assign		wire_nlliO_dataout = (clken === 1'b1) ? n000i : nl00i;
	and(wire_nlll0i_dataout, wire_nlOlOO_dataout, ~((~ reset_n)));
	and(wire_nlll0l_dataout, wire_nlOO1i_dataout, ~((~ reset_n)));
	and(wire_nlll0O_dataout, wire_nlOO1l_dataout, ~((~ reset_n)));
	and(wire_nlll1O_dataout, wire_nlOlOl_dataout, ~((~ reset_n)));
	assign		wire_nllli_dataout = (clken === 1'b1) ? n001O : nl01O;
	and(wire_nlllii_dataout, wire_nlOO1O_dataout, ~((~ reset_n)));
	and(wire_nlllil_dataout, wire_nlOO0i_dataout, ~((~ reset_n)));
	and(wire_nllliO_dataout, wire_nlOO0l_dataout, ~((~ reset_n)));
	assign		wire_nllll_dataout = (clken === 1'b1) ? n001l : nl01l;
	and(wire_nlllli_dataout, wire_nlOO0O_dataout, ~((~ reset_n)));
	and(wire_nlllll_dataout, wire_nlOOii_dataout, ~((~ reset_n)));
	and(wire_nllllO_dataout, wire_nlOOil_dataout, ~((~ reset_n)));
	assign		wire_nlllO_dataout = (clken === 1'b1) ? n001i : nl01i;
	and(wire_nlllOi_dataout, wire_nlOOiO_dataout, ~((~ reset_n)));
	and(wire_nlllOl_dataout, wire_nlOOli_dataout, ~((~ reset_n)));
	and(wire_nlllOO_dataout, wire_nlOOll_dataout, ~((~ reset_n)));
	and(wire_nllO0i_dataout, wire_nlOOOO_dataout, ~((~ reset_n)));
	and(wire_nllO0l_dataout, wire_n111i_dataout, ~((~ reset_n)));
	and(wire_nllO0O_dataout, wire_n111l_dataout, ~((~ reset_n)));
	and(wire_nllO1i_dataout, wire_nlOOlO_dataout, ~((~ reset_n)));
	and(wire_nllO1l_dataout, wire_nlOOOi_dataout, ~((~ reset_n)));
	and(wire_nllO1O_dataout, wire_nlOOOl_dataout, ~((~ reset_n)));
	assign		wire_nllOi_dataout = (clken === 1'b1) ? n01OO : nl1OO;
	and(wire_nllOii_dataout, wire_n111O_dataout, ~((~ reset_n)));
	and(wire_nllOil_dataout, wire_n110i_dataout, ~((~ reset_n)));
	and(wire_nllOiO_dataout, wire_n110l_dataout, ~((~ reset_n)));
	and(wire_nllOli_dataout, wire_n110O_dataout, ~((~ reset_n)));
	and(wire_nllOll_dataout, wire_n11ii_dataout, ~((~ reset_n)));
	and(wire_nllOlO_dataout, wire_n11il_dataout, ~((~ reset_n)));
	and(wire_nllOOi_dataout, wire_n11iO_dataout, ~((~ reset_n)));
	and(wire_nllOOl_dataout, wire_n11li_dataout, ~((~ reset_n)));
	and(wire_nllOOO_dataout, wire_n11ll_dataout, ~((~ reset_n)));
	and(wire_nlO00i_dataout, wire_n10OO_dataout, ~((~ reset_n)));
	and(wire_nlO00l_dataout, wire_n1i1i_dataout, ~((~ reset_n)));
	and(wire_nlO00O_dataout, wire_n1i1l_dataout, ~((~ reset_n)));
	and(wire_nlO01i_dataout, wire_n10lO_dataout, ~((~ reset_n)));
	and(wire_nlO01l_dataout, wire_n10Oi_dataout, ~((~ reset_n)));
	and(wire_nlO01O_dataout, wire_n10Ol_dataout, ~((~ reset_n)));
	and(wire_nlO0ii_dataout, wire_n1i1O_dataout, ~((~ reset_n)));
	and(wire_nlO0il_dataout, wire_n1i0i_dataout, ~((~ reset_n)));
	and(wire_nlO0iO_dataout, wire_n1i0l_dataout, ~((~ reset_n)));
	and(wire_nlO0li_dataout, wire_n1i0O_dataout, ~((~ reset_n)));
	and(wire_nlO0ll_dataout, wire_n1iii_dataout, ~((~ reset_n)));
	and(wire_nlO0lO_dataout, wire_n1iil_dataout, ~((~ reset_n)));
	and(wire_nlO0Oi_dataout, wire_n1iiO_dataout, ~((~ reset_n)));
	and(wire_nlO0Ol_dataout, wire_n1ili_dataout, ~((~ reset_n)));
	and(wire_nlO0OO_dataout, wire_n1ill_dataout, ~((~ reset_n)));
	and(wire_nlO10i_dataout, wire_n11OO_dataout, ~((~ reset_n)));
	and(wire_nlO10l_dataout, wire_n101i_dataout, ~((~ reset_n)));
	and(wire_nlO10O_dataout, wire_n101l_dataout, ~((~ reset_n)));
	and(wire_nlO11i_dataout, wire_n11lO_dataout, ~((~ reset_n)));
	and(wire_nlO11l_dataout, wire_n11Oi_dataout, ~((~ reset_n)));
	and(wire_nlO11O_dataout, wire_n11Ol_dataout, ~((~ reset_n)));
	and(wire_nlO1ii_dataout, wire_n101O_dataout, ~((~ reset_n)));
	and(wire_nlO1il_dataout, wire_n100i_dataout, ~((~ reset_n)));
	and(wire_nlO1iO_dataout, wire_n100l_dataout, ~((~ reset_n)));
	and(wire_nlO1l_dataout, wire_nlO1O_dataout, ~((~ reset_n)));
	and(wire_nlO1li_dataout, wire_n100O_dataout, ~((~ reset_n)));
	and(wire_nlO1ll_dataout, wire_n10ii_dataout, ~((~ reset_n)));
	and(wire_nlO1lO_dataout, wire_n10il_dataout, ~((~ reset_n)));
	or(wire_nlO1O_dataout, nlO0O, (clken & ((((wire_nllOO_q[1] & wire_nllOO_q[3]) & (~ wire_nllOO_q[0])) & (~ wire_nllOO_q[2])) & (nill0i4 ^ nill0i3))));
	and(wire_nlO1Oi_dataout, wire_n10iO_dataout, ~((~ reset_n)));
	and(wire_nlO1Ol_dataout, wire_n10li_dataout, ~((~ reset_n)));
	and(wire_nlO1OO_dataout, wire_n10ll_dataout, ~((~ reset_n)));
	and(wire_nlOi0i_dataout, wire_n1iOO_dataout, ~((~ reset_n)));
	and(wire_nlOi0l_dataout, wire_n1l1i_dataout, ~((~ reset_n)));
	and(wire_nlOi0O_dataout, wire_n1l1l_dataout, ~((~ reset_n)));
	and(wire_nlOi1i_dataout, wire_n1ilO_dataout, ~((~ reset_n)));
	and(wire_nlOi1l_dataout, wire_n1iOi_dataout, ~((~ reset_n)));
	and(wire_nlOi1O_dataout, wire_n1iOl_dataout, ~((~ reset_n)));
	and(wire_nlOiii_dataout, wire_n1l1O_dataout, ~((~ reset_n)));
	and(wire_nlOiil_dataout, wire_n1l0i_dataout, ~((~ reset_n)));
	and(wire_nlOiiO_dataout, wire_n1l0l_dataout, ~((~ reset_n)));
	and(wire_nlOili_dataout, wire_n1l0O_dataout, ~((~ reset_n)));
	and(wire_nlOill_dataout, wire_n1lii_dataout, ~((~ reset_n)));
	and(wire_nlOilO_dataout, wire_n1lil_dataout, ~((~ reset_n)));
	and(wire_nlOiOi_dataout, wire_n1liO_dataout, ~((~ reset_n)));
	and(wire_nlOiOl_dataout, wire_n1lli_dataout, ~((~ reset_n)));
	and(wire_nlOiOO_dataout, wire_n1lll_dataout, ~((~ reset_n)));
	and(wire_nlOl0i_dataout, wire_n1lOO_dataout, ~((~ reset_n)));
	and(wire_nlOl0l_dataout, wire_n1O1i_dataout, ~((~ reset_n)));
	and(wire_nlOl0O_dataout, wire_n1O1l_dataout, ~((~ reset_n)));
	and(wire_nlOl1i_dataout, wire_n1llO_dataout, ~((~ reset_n)));
	and(wire_nlOl1l_dataout, wire_n1lOi_dataout, ~((~ reset_n)));
	and(wire_nlOl1O_dataout, wire_n1lOl_dataout, ~((~ reset_n)));
	and(wire_nlOlii_dataout, wire_n1O1O_dataout, ~((~ reset_n)));
	and(wire_nlOlil_dataout, wire_n1O0i_dataout, ~((~ reset_n)));
	and(wire_nlOliO_dataout, wire_n1O0l_dataout, ~((~ reset_n)));
	and(wire_nlOlli_dataout, wire_n1O0O_dataout, ~((~ reset_n)));
	and(wire_nlOlll_dataout, wire_n1Oii_dataout, ~((~ reset_n)));
	and(wire_nlOllO_dataout, wire_n1Oil_dataout, ~((~ reset_n)));
	and(wire_nlOlOi_dataout, wire_n1OiO_dataout, ~((~ reset_n)));
	assign		wire_nlOlOl_dataout = (clken === 1'b1) ? nliO0l : n1OlO;
	assign		wire_nlOlOO_dataout = (clken === 1'b1) ? nliO0i : nlll1l;
	assign		wire_nlOO0i_dataout = (clken === 1'b1) ? nlilOO : nlliOi;
	assign		wire_nlOO0l_dataout = (clken === 1'b1) ? nlilOl : nllilO;
	assign		wire_nlOO0O_dataout = (clken === 1'b1) ? nlilOi : nllill;
	assign		wire_nlOO1i_dataout = (clken === 1'b1) ? nliO1O : nlll1i;
	assign		wire_nlOO1l_dataout = (clken === 1'b1) ? nliO1l : nlliOO;
	assign		wire_nlOO1O_dataout = (clken === 1'b1) ? nliO1i : nlliOl;
	assign		wire_nlOOii_dataout = (clken === 1'b1) ? nlillO : nllili;
	assign		wire_nlOOil_dataout = (clken === 1'b1) ? nlilll : nlliiO;
	assign		wire_nlOOiO_dataout = (clken === 1'b1) ? nlilli : nlliil;
	assign		wire_nlOOli_dataout = (clken === 1'b1) ? nliliO : nlliii;
	assign		wire_nlOOll_dataout = (clken === 1'b1) ? nlilil : nlli0O;
	assign		wire_nlOOlO_dataout = (clken === 1'b1) ? nlilii : nlli0l;
	assign		wire_nlOOOi_dataout = (clken === 1'b1) ? nlil0O : nlli0i;
	assign		wire_nlOOOl_dataout = (clken === 1'b1) ? nlil0l : nlli1O;
	assign		wire_nlOOOO_dataout = (clken === 1'b1) ? nlil0i : nlli1l;
	oper_add   n1Oli
	( 
	.a({1'b0, (~ nlilii), (~ nlilil), (~ nliliO), (~ nlilli), (~ nlilll), (~ nlillO), (~ nlilOi), (~ nlilOl), (~ nlilOO), (~ nliO1i), (~ nliO1l), (~ nliO1O), (~ nliO0i), (~ nliO0l)}),
	.b({{14{1'b0}}, 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_n1Oli_o));
	defparam
		n1Oli.sgate_representation = 0,
		n1Oli.width_a = 15,
		n1Oli.width_b = 15,
		n1Oli.width_o = 15;
	oper_add   n1Oll
	( 
	.a({1'b0, (~ nliiil), (~ nliiiO), (~ nliili), (~ nliill), (~ nliilO), (~ nliiOi), (~ nliiOl), (~ nliiOO), (~ nlil1i), (~ nlil1l), (~ nlil1O), (~ nlil0i), (~ nlil0l), (~ nlil0O)}),
	.b({{14{1'b0}}, 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_n1Oll_o));
	defparam
		n1Oll.sgate_representation = 0,
		n1Oll.width_a = 15,
		n1Oll.width_b = 15,
		n1Oll.width_o = 15;
	oper_add   nl01Ol
	( 
	.a({nl10lO, nl10Oi, nl10Ol, nl10OO, nl1i1i}),
	.b({{4{1'b0}}, nl10lO}),
	.cin(1'b0),
	.cout(),
	.o(wire_nl01Ol_o));
	defparam
		nl01Ol.sgate_representation = 0,
		nl01Ol.width_a = 5,
		nl01Ol.width_b = 5,
		nl01Ol.width_o = 5;
	oper_mux   ni00i
	( 
	.data({nlliOi, nll0Ol, nliOOO, {2{nll1OO}}, nliOOO, nll0Ol, nlliOi}),
	.o(wire_ni00i_o),
	.sel({nilllO, nillll, nillli}));
	defparam
		ni00i.width_data = 8,
		ni00i.width_sel = 3;
	oper_mux   ni00l
	( 
	.data({nllilO, nll0Oi, nliOOl, {2{nll1Ol}}, nliOOl, nll0Oi, nllilO}),
	.o(wire_ni00l_o),
	.sel({nilllO, nillll, nillli}));
	defparam
		ni00l.width_data = 8,
		ni00l.width_sel = 3;
	oper_mux   ni00O
	( 
	.data({nllill, nll0lO, nliOOi, {2{nll1Oi}}, nliOOi, nll0lO, nllill}),
	.o(wire_ni00O_o),
	.sel({nilllO, nillll, nillli}));
	defparam
		ni00O.width_data = 8,
		ni00O.width_sel = 3;
	oper_mux   ni01i
	( 
	.data({nlll1i, nlli1l, nll11O, {2{nll01O}}, nll11O, nlli1l, nlll1i}),
	.o(wire_ni01i_o),
	.sel({nilllO, nillll, nillli}));
	defparam
		ni01i.width_data = 8,
		ni01i.width_sel = 3;
	oper_mux   ni01l
	( 
	.data({nlliOO, nlli1i, nll11l, {2{nll01l}}, nll11l, nlli1i, nlliOO}),
	.o(wire_ni01l_o),
	.sel({nilllO, nillll, nillli}));
	defparam
		ni01l.width_data = 8,
		ni01l.width_sel = 3;
	oper_mux   ni01O
	( 
	.data({nlliOl, nll0OO, nll11i, {2{nll01i}}, nll11i, nll0OO, nlliOl}),
	.o(wire_ni01O_o),
	.sel({nilllO, nillll, nillli}));
	defparam
		ni01O.width_data = 8,
		ni01O.width_sel = 3;
	oper_mux   ni0ii
	( 
	.data({nllili, nll0ll, nliOlO, {2{nll1lO}}, nliOlO, nll0ll, nllili}),
	.o(wire_ni0ii_o),
	.sel({nilllO, nillll, nillli}));
	defparam
		ni0ii.width_data = 8,
		ni0ii.width_sel = 3;
	oper_mux   ni0il
	( 
	.data({nlliiO, nll0li, nliOll, {2{nll1ll}}, nliOll, nll0li, nlliiO}),
	.o(wire_ni0il_o),
	.sel({nilllO, nillll, nillli}));
	defparam
		ni0il.width_data = 8,
		ni0il.width_sel = 3;
	oper_mux   ni0iO
	( 
	.data({nlliil, nll0iO, nliOli, {2{nll1li}}, nliOli, nll0iO, nlliil}),
	.o(wire_ni0iO_o),
	.sel({nilllO, nillll, nillli}));
	defparam
		ni0iO.width_data = 8,
		ni0iO.width_sel = 3;
	oper_mux   ni0li
	( 
	.data({nlliii, nll0il, nliOiO, {2{nll1iO}}, nliOiO, nll0il, nlliii}),
	.o(wire_ni0li_o),
	.sel({nilllO, nillll, nillli}));
	defparam
		ni0li.width_data = 8,
		ni0li.width_sel = 3;
	oper_mux   ni0ll
	( 
	.data({nlli0O, nll0ii, nliOil, {2{nll1il}}, nliOil, nll0ii, nlli0O}),
	.o(wire_ni0ll_o),
	.sel({nilllO, nillll, nillli}));
	defparam
		ni0ll.width_data = 8,
		ni0ll.width_sel = 3;
	oper_mux   ni0lO
	( 
	.data({nlli0l, nll00O, nliOii, {2{nll1ii}}, nliOii, nll00O, nlli0l}),
	.o(wire_ni0lO_o),
	.sel({nilllO, nillll, nillli}));
	defparam
		ni0lO.width_data = 8,
		ni0lO.width_sel = 3;
	oper_mux   ni0Oi
	( 
	.data({{2{1'b0}}, nliO0O, {2{nll10O}}, nliO0O, {2{1'b0}}}),
	.o(wire_ni0Oi_o),
	.sel({nilllO, nillll, nillli}));
	defparam
		ni0Oi.width_data = 8,
		ni0Oi.width_sel = 3;
	oper_mux   ni0Ol
	( 
	.data({nll10l, {2{nll00l}}, nll10l, nlli0i, {2{n1OlO}}, nlli0i}),
	.o(wire_ni0Ol_o),
	.sel({nilllO, nillll, nillli}));
	defparam
		ni0Ol.width_data = 8,
		ni0Ol.width_sel = 3;
	oper_mux   ni0OO
	( 
	.data({nll10i, {2{nll00i}}, nll10i, nlli1O, {2{nlll1l}}, nlli1O}),
	.o(wire_ni0OO_o),
	.sel({nilllO, nillll, nillli}));
	defparam
		ni0OO.width_data = 8,
		ni0OO.width_sel = 3;
	oper_mux   ni1Ol
	( 
	.data({n1OlO, nlli0i, nll10l, {2{nll00l}}, nll10l, nlli0i, n1OlO}),
	.o(wire_ni1Ol_o),
	.sel({nilllO, nillll, nillli}));
	defparam
		ni1Ol.width_data = 8,
		ni1Ol.width_sel = 3;
	oper_mux   ni1OO
	( 
	.data({nlll1l, nlli1O, nll10i, {2{nll00i}}, nll10i, nlli1O, nlll1l}),
	.o(wire_ni1OO_o),
	.sel({nilllO, nillll, nillli}));
	defparam
		ni1OO.width_data = 8,
		ni1OO.width_sel = 3;
	oper_mux   nii0i
	( 
	.data({nliOOO, {2{nll1OO}}, nliOOO, nll0Ol, {2{nlliOi}}, nll0Ol}),
	.o(wire_nii0i_o),
	.sel({nilllO, nillll, nillli}));
	defparam
		nii0i.width_data = 8,
		nii0i.width_sel = 3;
	oper_mux   nii0l
	( 
	.data({nliOOl, {2{nll1Ol}}, nliOOl, nll0Oi, {2{nllilO}}, nll0Oi}),
	.o(wire_nii0l_o),
	.sel({nilllO, nillll, nillli}));
	defparam
		nii0l.width_data = 8,
		nii0l.width_sel = 3;
	oper_mux   nii0O
	( 
	.data({nliOOi, {2{nll1Oi}}, nliOOi, nll0lO, nllill, ((nil0OO42 ^ nil0OO41) & nllill), nll0lO}),
	.o(wire_nii0O_o),
	.sel({nilllO, nillll, nillli}));
	defparam
		nii0O.width_data = 8,
		nii0O.width_sel = 3;
	oper_mux   nii1i
	( 
	.data({nll11O, {2{nll01O}}, nll11O, nlli1l, {2{nlll1i}}, nlli1l}),
	.o(wire_nii1i_o),
	.sel({nilllO, nillll, nillli}));
	defparam
		nii1i.width_data = 8,
		nii1i.width_sel = 3;
	oper_mux   nii1l
	( 
	.data({nll11l, {2{nll01l}}, nll11l, nlli1i, {2{nlliOO}}, nlli1i}),
	.o(wire_nii1l_o),
	.sel({nilllO, nillll, nillli}));
	defparam
		nii1l.width_data = 8,
		nii1l.width_sel = 3;
	oper_mux   nii1O
	( 
	.data({nll11i, {2{nll01i}}, nll11i, nll0OO, {2{nlliOl}}, nll0OO}),
	.o(wire_nii1O_o),
	.sel({nilllO, nillll, nillli}));
	defparam
		nii1O.width_data = 8,
		nii1O.width_sel = 3;
	oper_mux   niiii
	( 
	.data({nliOlO, {2{nll1lO}}, nliOlO, nll0ll, {2{nllili}}, nll0ll}),
	.o(wire_niiii_o),
	.sel({nilllO, nillll, nillli}));
	defparam
		niiii.width_data = 8,
		niiii.width_sel = 3;
	oper_mux   niiil
	( 
	.data({nliOll, ((nili1i40 ^ nili1i39) & nll1ll), nll1ll, nliOll, nll0li, {2{nlliiO}}, ((nili1l38 ^ nili1l37) & nll0li)}),
	.o(wire_niiil_o),
	.sel({nilllO, ((nili1O36 ^ nili1O35) & nillll), ((nili0i34 ^ nili0i33) & nillli)}));
	defparam
		niiil.width_data = 8,
		niiil.width_sel = 3;
	oper_mux   niiiO
	( 
	.data({nliOli, nll1li, ((nili0l32 ^ nili0l31) & nll1li), nliOli, ((nili0O30 ^ nili0O29) & nll0iO), nlliil, ((niliii28 ^ niliii27) & nlliil), nll0iO}),
	.o(wire_niiiO_o),
	.sel({nilllO, nillll, ((niliil26 ^ niliil25) & nillli)}));
	defparam
		niiiO.width_data = 8,
		niiiO.width_sel = 3;
	oper_mux   niili
	( 
	.data({((niliiO24 ^ niliiO23) & nliOiO), nll1iO, ((nilili22 ^ nilili21) & nll1iO), nliOiO, nll0il, nlliii, ((nilill20 ^ nilill19) & nlliii), nll0il}),
	.o(wire_niili_o),
	.sel({nilllO, ((nililO18 ^ nililO17) & nillll), ((niliOi16 ^ niliOi15) & nillli)}));
	defparam
		niili.width_data = 8,
		niili.width_sel = 3;
	oper_mux   niill
	( 
	.data({nliOil, {2{nll1il}}, nliOil, nll0ii, {2{nlli0O}}, nll0ii}),
	.o(wire_niill_o),
	.sel({((niliOl14 ^ niliOl13) & nilllO), nillll, nillli}));
	defparam
		niill.width_data = 8,
		niill.width_sel = 3;
	oper_mux   niilO
	( 
	.data({nliOii, {2{nll1ii}}, nliOii, nll00O, nlli0l, ((niliOO12 ^ niliOO11) & nlli0l), ((nill1i10 ^ nill1i9) & nll00O)}),
	.o(wire_niilO_o),
	.sel({nilllO, nillll, ((nill1l8 ^ nill1l7) & nillli)}));
	defparam
		niilO.width_data = 8,
		niilO.width_sel = 3;
	oper_mux   niiOi
	( 
	.data({nliO0O, {2{nll10O}}, nliO0O, {4{1'b0}}}),
	.o(wire_niiOi_o),
	.sel({((nill1O6 ^ nill1O5) & nilllO), nillll, nillli}));
	defparam
		niiOi.width_data = 8,
		niiOi.width_sel = 3;
	assign
		fcos_o = {nl1OO, nl01i, nl01l, nl01O, nl00i, nl00l, nl00O, nl0ii, nl0il, nl0iO, nl0li, nl0ll, nl0lO, nl0Oi, nllOl},
		fsin_o = {niiOO, nil1i, nil1l, nil1O, nil0i, nil0l, nil0O, nilii, nilil, niliO, nilli, nilll, nillO, nilOi, nl1Ol},
		nillii = 1'b1,
		out_valid = nlO0O;
endmodule //dds
//synopsys translate_on
//VALID FILE
