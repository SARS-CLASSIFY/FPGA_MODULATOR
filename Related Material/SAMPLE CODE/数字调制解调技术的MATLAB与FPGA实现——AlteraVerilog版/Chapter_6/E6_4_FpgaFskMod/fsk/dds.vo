//IP Functional Simulation Model
//VERSION_BEGIN 12.1 cbx_mgl 2012:11:07:18:06:30:SJ cbx_simgen 2012:11:07:18:03:51:SJ  VERSION_END
// synthesis VERILOG_INPUT_VERSION VERILOG_2001
// altera message_off 10463



// Copyright (C) 1991-2012 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// You may only use these simulation model output files for simulation
// purposes and expressly not for synthesis or any other purposes (in which
// event Altera disclaims all warranties of any kind).


//synopsys translate_off

//synthesis_resources = altsyncram 2 lpm_add_sub 3 lpm_counter 1 lut 249 mux21 422 oper_add 3 oper_mux 15 
`timescale 1 ps / 1 ps
module  dds
	( 
	clk,
	clken,
	freq_mod_i,
	fsin_o,
	out_valid,
	phi_inc_i,
	reset_n) /* synthesis synthesis_clearbox=1 */;
	input   clk;
	input   clken;
	input   [24:0]  freq_mod_i;
	output   [14:0]  fsin_o;
	output   out_valid;
	input   [24:0]  phi_inc_i;
	input   reset_n;

	wire  [13:0]   wire_niiOi_q_a;
	wire  [13:0]   wire_niiOl_q_a;
	reg	niOOOl43;
	reg	niOOOl44;
	reg	niOOOO41;
	reg	niOOOO42;
	reg	nl101i10;
	reg	nl101i9;
	reg	nl101l7;
	reg	nl101l8;
	reg	nl101O5;
	reg	nl101O6;
	reg	nl10il3;
	reg	nl10il4;
	reg	nl10iO1;
	reg	nl10iO2;
	reg	nl110i33;
	reg	nl110i34;
	reg	nl110l31;
	reg	nl110l32;
	reg	nl110O29;
	reg	nl110O30;
	reg	nl111i39;
	reg	nl111i40;
	reg	nl111l37;
	reg	nl111l38;
	reg	nl111O35;
	reg	nl111O36;
	reg	nl11ii27;
	reg	nl11ii28;
	reg	nl11il25;
	reg	nl11il26;
	reg	nl11iO23;
	reg	nl11iO24;
	reg	nl11li21;
	reg	nl11li22;
	reg	nl11ll19;
	reg	nl11ll20;
	reg	nl11lO17;
	reg	nl11lO18;
	reg	nl11Oi15;
	reg	nl11Oi16;
	reg	nl11Ol13;
	reg	nl11Ol14;
	reg	nl11OO11;
	reg	nl11OO12;
	reg	n101i;
	reg	n101l;
	reg	n10O;
	reg	n110i;
	reg	n110l;
	reg	n110O;
	reg	n111i;
	reg	n111l;
	reg	n111O;
	reg	n11ii;
	reg	n11il;
	reg	n11iO;
	reg	n11li;
	reg	n11ll;
	reg	n11lO;
	reg	n11Oi;
	reg	n11Ol;
	reg	n11OO;
	reg	niilO;
	reg	niiOO;
	reg	nil0i;
	reg	nil0l;
	reg	nil0O;
	reg	nil1i;
	reg	nil1l;
	reg	nil1O;
	reg	nilii;
	reg	nilil;
	reg	niliO;
	reg	nilli;
	reg	nilll;
	reg	nillO;
	reg	nilOi;
	reg	nl000i;
	reg	nl000l;
	reg	nl001i;
	reg	nl001l;
	reg	nl001O;
	reg	nl010i;
	reg	nl010l;
	reg	nl010O;
	reg	nl011i;
	reg	nl011l;
	reg	nl011O;
	reg	nl01ii;
	reg	nl01il;
	reg	nl01iO;
	reg	nl01li;
	reg	nl01ll;
	reg	nl01lO;
	reg	nl01Oi;
	reg	nl01Ol;
	reg	nl01OO;
	reg	nl0Ol;
	reg	nl0Oll;
	reg	nl0OlO;
	reg	nl0OO;
	reg	nl0OOi;
	reg	nl0OOl;
	reg	nl0OOO;
	reg	nl10li;
	reg	nl10ll;
	reg	nl10lO;
	reg	nl10Oi;
	reg	nl10Ol;
	reg	nl10OO;
	reg	nl1i0i;
	reg	nl1i0l;
	reg	nl1i1i;
	reg	nl1i1l;
	reg	nl1i1O;
	reg	nl1l0O;
	reg	nl1lii;
	reg	nl1lil;
	reg	nl1liO;
	reg	nl1OlO;
	reg	nl1OOi;
	reg	nl1OOl;
	reg	nl1OOO;
	reg	nli01i;
	reg	nli0i;
	reg	nli0l;
	reg	nli0O;
	reg	nli10i;
	reg	nli10l;
	reg	nli10O;
	reg	nli11i;
	reg	nli11l;
	reg	nli11O;
	reg	nli1i;
	reg	nli1ii;
	reg	nli1il;
	reg	nli1iO;
	reg	nli1l;
	reg	nli1li;
	reg	nli1ll;
	reg	nli1lO;
	reg	nli1O;
	reg	nli1Oi;
	reg	nli1Ol;
	reg	nli1OO;
	reg	nliii;
	reg	nliil;
	reg	nliiO;
	reg	nlili;
	reg	nlill;
	reg	nlilO;
	reg	nliO0l;
	reg	nliO0O;
	reg	nliO1O;
	reg	nliOi;
	reg	nliOii;
	reg	nliOil;
	reg	nliOiO;
	reg	nliOli;
	reg	nliOll;
	reg	nliOlO;
	reg	nliOOi;
	reg	nliOOl;
	reg	nliOOO;
	reg	nll10i;
	reg	nll11i;
	reg	nll11l;
	reg	nll11O;
	reg	nlli0l;
	reg	nlli0O;
	reg	nlliii;
	reg	nlliil;
	reg	nlliiO;
	reg	nllili;
	reg	nllill;
	reg	nllilO;
	reg	nlliOi;
	reg	nlliOl;
	reg	nlliOO;
	reg	nlO00i;
	reg	nlO00l;
	reg	nlO00O;
	reg	nlO01i;
	reg	nlO01l;
	reg	nlO01O;
	reg	nlO0ii;
	reg	nlO0il;
	reg	nlO0iO;
	reg	nlO0li;
	reg	nlO0ll;
	reg	nlO0lO;
	reg	nlO0Oi;
	reg	nlO0Ol;
	reg	nlO0OO;
	reg	nlO1ii;
	reg	nlO1il;
	reg	nlO1iO;
	reg	nlO1li;
	reg	nlO1ll;
	reg	nlO1lO;
	reg	nlO1Oi;
	reg	nlO1Ol;
	reg	nlO1OO;
	reg	nlOi0i;
	reg	nlOi0l;
	reg	nlOi0O;
	reg	nlOi1i;
	reg	nlOi1l;
	reg	nlOi1O;
	reg	nlOiii;
	reg	nlOiil;
	reg	nlOiiO;
	reg	nlOili;
	reg	nlOill;
	reg	nlOilO;
	reg	nlOiOi;
	reg	nlOiOl;
	reg	nlOiOO;
	reg	nlOl0i;
	reg	nlOl0l;
	reg	nlOl0O;
	reg	nlOl1i;
	reg	nlOl1l;
	reg	nlOl1O;
	reg	nlOlii;
	reg	nlOlil;
	reg	nlOliO;
	reg	nlOlli;
	reg	nlOlll;
	reg	nlOllO;
	reg	nlOlOi;
	reg	nlOlOl;
	reg	nlOlOO;
	reg	nlOO0i;
	reg	nlOO0l;
	reg	nlOO0O;
	reg	nlOO1i;
	reg	nlOO1l;
	reg	nlOO1O;
	reg	nlOOii;
	reg	nlOOil;
	reg	nlOOiO;
	reg	nlOOl;
	reg	nlOOli;
	reg	nlOOll;
	reg	nlOOlO;
	reg	nlOOOi;
	reg	nlOOOl;
	reg	nlOOOO;
	reg	n10l_clk_prev;
	wire	wire_n10l_CLRN;
	wire	wire_n10l_PRN;
	wire  [24:0]   wire_nl1Oli_result;
	wire  [24:0]   wire_nl1Oll_result;
	wire  [19:0]   wire_nliO0i_result;
	wire  [3:0]   wire_nlOOO_q;
	wire	wire_n000i_dataout;
	wire	wire_n000l_dataout;
	wire	wire_n000O_dataout;
	wire	wire_n001i_dataout;
	wire	wire_n001l_dataout;
	wire	wire_n001O_dataout;
	wire	wire_n00ii_dataout;
	wire	wire_n00il_dataout;
	wire	wire_n00iO_dataout;
	wire	wire_n00li_dataout;
	wire	wire_n00ll_dataout;
	wire	wire_n00lO_dataout;
	wire	wire_n00Oi_dataout;
	wire	wire_n00Ol_dataout;
	wire	wire_n00OO_dataout;
	wire	wire_n010i_dataout;
	wire	wire_n010l_dataout;
	wire	wire_n010O_dataout;
	wire	wire_n011i_dataout;
	wire	wire_n011l_dataout;
	wire	wire_n011O_dataout;
	wire	wire_n01ii_dataout;
	wire	wire_n01il_dataout;
	wire	wire_n01iO_dataout;
	wire	wire_n01li_dataout;
	wire	wire_n01ll_dataout;
	wire	wire_n01lO_dataout;
	wire	wire_n01Oi_dataout;
	wire	wire_n01Ol_dataout;
	wire	wire_n01OO_dataout;
	wire	wire_n0i0i_dataout;
	wire	wire_n0i0l_dataout;
	wire	wire_n0i0O_dataout;
	wire	wire_n0i1i_dataout;
	wire	wire_n0i1l_dataout;
	wire	wire_n0i1O_dataout;
	wire	wire_n0iii_dataout;
	wire	wire_n0iil_dataout;
	wire	wire_n0iiO_dataout;
	wire	wire_n0ili_dataout;
	wire	wire_n0ill_dataout;
	wire	wire_n0ilO_dataout;
	wire	wire_n0iOi_dataout;
	wire	wire_n0iOl_dataout;
	wire	wire_n0iOO_dataout;
	wire	wire_n0l0i_dataout;
	wire	wire_n0l0l_dataout;
	wire	wire_n0l0O_dataout;
	wire	wire_n0l1i_dataout;
	wire	wire_n0l1l_dataout;
	wire	wire_n0l1O_dataout;
	wire	wire_n0lii_dataout;
	wire	wire_n0lil_dataout;
	wire	wire_n0liO_dataout;
	wire	wire_n0lli_dataout;
	wire	wire_n0lll_dataout;
	wire	wire_n0llO_dataout;
	wire	wire_n0lOi_dataout;
	wire	wire_n0lOl_dataout;
	wire	wire_n0lOO_dataout;
	wire	wire_n0O0i_dataout;
	wire	wire_n0O0l_dataout;
	wire	wire_n0O0O_dataout;
	wire	wire_n0O1i_dataout;
	wire	wire_n0O1l_dataout;
	wire	wire_n0O1O_dataout;
	wire	wire_n0Oii_dataout;
	wire	wire_n0Oil_dataout;
	wire	wire_n0OiO_dataout;
	wire	wire_n0Oli_dataout;
	wire	wire_n0Oll_dataout;
	wire	wire_n0OlO_dataout;
	wire	wire_n0OOi_dataout;
	wire	wire_n0OOl_dataout;
	wire	wire_n0OOO_dataout;
	wire	wire_n100i_dataout;
	wire	wire_n100l_dataout;
	wire	wire_n100O_dataout;
	wire	wire_n101O_dataout;
	wire	wire_n10ii_dataout;
	wire	wire_n10il_dataout;
	wire	wire_n10iO_dataout;
	wire	wire_n10li_dataout;
	wire	wire_n10ll_dataout;
	wire	wire_n10lO_dataout;
	wire	wire_n10Oi_dataout;
	wire	wire_n10Ol_dataout;
	wire	wire_n10OO_dataout;
	wire	wire_n11l_dataout;
	wire	wire_n11O_dataout;
	wire	wire_n1i0i_dataout;
	wire	wire_n1i0l_dataout;
	wire	wire_n1i0O_dataout;
	wire	wire_n1i1i_dataout;
	wire	wire_n1i1l_dataout;
	wire	wire_n1i1O_dataout;
	wire	wire_n1iii_dataout;
	wire	wire_n1iil_dataout;
	wire	wire_n1iiO_dataout;
	wire	wire_n1ili_dataout;
	wire	wire_n1ill_dataout;
	wire	wire_n1ilO_dataout;
	wire	wire_n1iOi_dataout;
	wire	wire_n1iOl_dataout;
	wire	wire_n1iOO_dataout;
	wire	wire_n1l0i_dataout;
	wire	wire_n1l0l_dataout;
	wire	wire_n1l0O_dataout;
	wire	wire_n1l1i_dataout;
	wire	wire_n1l1l_dataout;
	wire	wire_n1l1O_dataout;
	wire	wire_n1lii_dataout;
	wire	wire_n1lil_dataout;
	wire	wire_n1liO_dataout;
	wire	wire_n1lli_dataout;
	wire	wire_n1lll_dataout;
	wire	wire_n1llO_dataout;
	wire	wire_n1lOi_dataout;
	wire	wire_n1lOl_dataout;
	wire	wire_n1lOO_dataout;
	wire	wire_n1O0i_dataout;
	wire	wire_n1O0l_dataout;
	wire	wire_n1O0O_dataout;
	wire	wire_n1O1i_dataout;
	wire	wire_n1O1l_dataout;
	wire	wire_n1O1O_dataout;
	wire	wire_n1Oii_dataout;
	wire	wire_n1Oil_dataout;
	wire	wire_n1OiO_dataout;
	wire	wire_n1Oli_dataout;
	wire	wire_n1Oll_dataout;
	wire	wire_n1OlO_dataout;
	wire	wire_n1OOi_dataout;
	wire	wire_n1OOl_dataout;
	wire	wire_n1OOO_dataout;
	wire	wire_ni00i_dataout;
	wire	wire_ni00l_dataout;
	wire	wire_ni00O_dataout;
	wire	wire_ni01i_dataout;
	wire	wire_ni01l_dataout;
	wire	wire_ni01O_dataout;
	wire	wire_ni0ii_dataout;
	wire	wire_ni0il_dataout;
	wire	wire_ni0iO_dataout;
	wire	wire_ni0li_dataout;
	wire	wire_ni0ll_dataout;
	wire	wire_ni0lO_dataout;
	wire	wire_ni0Oi_dataout;
	wire	wire_ni0Ol_dataout;
	wire	wire_ni0OO_dataout;
	wire	wire_ni10i_dataout;
	wire	wire_ni10l_dataout;
	wire	wire_ni10O_dataout;
	wire	wire_ni11i_dataout;
	wire	wire_ni11l_dataout;
	wire	wire_ni11O_dataout;
	wire	wire_ni1ii_dataout;
	wire	wire_ni1il_dataout;
	wire	wire_ni1iO_dataout;
	wire	wire_ni1li_dataout;
	wire	wire_ni1ll_dataout;
	wire	wire_ni1lO_dataout;
	wire	wire_ni1Oi_dataout;
	wire	wire_ni1Ol_dataout;
	wire	wire_ni1OO_dataout;
	wire	wire_nii0i_dataout;
	wire	wire_nii0l_dataout;
	wire	wire_nii0O_dataout;
	wire	wire_nii1i_dataout;
	wire	wire_nii1l_dataout;
	wire	wire_nii1O_dataout;
	wire	wire_niiii_dataout;
	wire	wire_niiil_dataout;
	wire	wire_niiiO_dataout;
	wire	wire_nilOl_dataout;
	wire	wire_nilOO_dataout;
	wire	wire_niO0i_dataout;
	wire	wire_niO0l_dataout;
	wire	wire_niO0O_dataout;
	wire	wire_niO1i_dataout;
	wire	wire_niO1l_dataout;
	wire	wire_niO1O_dataout;
	wire	wire_niOii_dataout;
	wire	wire_niOil_dataout;
	wire	wire_niOiO_dataout;
	wire	wire_niOli_dataout;
	wire	wire_niOll_dataout;
	wire	wire_niOlO_dataout;
	wire	wire_niOOi_dataout;
	wire	wire_niOOl_dataout;
	wire	wire_niOOO_dataout;
	wire	wire_nl000O_dataout;
	wire	wire_nl00ii_dataout;
	wire	wire_nl00il_dataout;
	wire	wire_nl00iO_dataout;
	wire	wire_nl00li_dataout;
	wire	wire_nl00ll_dataout;
	wire	wire_nl00lO_dataout;
	wire	wire_nl00Oi_dataout;
	wire	wire_nl00Ol_dataout;
	wire	wire_nl00OO_dataout;
	wire	wire_nl0i0i_dataout;
	wire	wire_nl0i0l_dataout;
	wire	wire_nl0i0O_dataout;
	wire	wire_nl0i1i_dataout;
	wire	wire_nl0i1l_dataout;
	wire	wire_nl0i1O_dataout;
	wire	wire_nl0iii_dataout;
	wire	wire_nl0iil_dataout;
	wire	wire_nl0iiO_dataout;
	wire	wire_nl0ili_dataout;
	wire	wire_nl0ill_dataout;
	wire	wire_nl0ilO_dataout;
	wire	wire_nl0iOi_dataout;
	wire	wire_nl0iOl_dataout;
	wire	wire_nl0iOO_dataout;
	wire	wire_nl0l0i_dataout;
	wire	wire_nl0l0l_dataout;
	wire	wire_nl0l0O_dataout;
	wire	wire_nl0l1i_dataout;
	wire	wire_nl0l1l_dataout;
	wire	wire_nl0l1O_dataout;
	wire	wire_nl0lii_dataout;
	wire	wire_nl0lil_dataout;
	wire	wire_nl0liO_dataout;
	wire	wire_nl0lli_dataout;
	wire	wire_nl0lll_dataout;
	wire	wire_nl0llO_dataout;
	wire	wire_nl0lOi_dataout;
	wire	wire_nl0lOl_dataout;
	wire	wire_nl0lOO_dataout;
	wire	wire_nl0O0i_dataout;
	wire	wire_nl0O0l_dataout;
	wire	wire_nl0O0O_dataout;
	wire	wire_nl0O1i_dataout;
	wire	wire_nl0O1l_dataout;
	wire	wire_nl0O1O_dataout;
	wire	wire_nl0Oii_dataout;
	wire	wire_nl0Oil_dataout;
	wire	wire_nl0OiO_dataout;
	wire	wire_nl0Oli_dataout;
	wire	wire_nl10i_dataout;
	wire	wire_nl10l_dataout;
	wire	wire_nl10O_dataout;
	wire	wire_nl11i_dataout;
	wire	wire_nl11l_dataout;
	wire	wire_nl11O_dataout;
	wire	wire_nl1i0O_dataout;
	wire	wire_nl1ii_dataout;
	wire	wire_nl1iii_dataout;
	wire	wire_nl1iil_dataout;
	wire	wire_nl1iiO_dataout;
	wire	wire_nl1il_dataout;
	wire	wire_nl1ili_dataout;
	wire	wire_nl1ill_dataout;
	wire	wire_nl1ilO_dataout;
	wire	wire_nl1iO_dataout;
	wire	wire_nl1iOi_dataout;
	wire	wire_nl1iOl_dataout;
	wire	wire_nl1iOO_dataout;
	wire	wire_nl1l0i_dataout;
	wire	wire_nl1l0l_dataout;
	wire	wire_nl1l1i_dataout;
	wire	wire_nl1l1l_dataout;
	wire	wire_nl1l1O_dataout;
	wire	wire_nl1li_dataout;
	wire	wire_nl1ll_dataout;
	wire	wire_nl1lli_dataout;
	wire	wire_nl1lll_dataout;
	wire	wire_nl1llO_dataout;
	wire	wire_nl1lO_dataout;
	wire	wire_nl1lOi_dataout;
	wire	wire_nl1lOl_dataout;
	wire	wire_nl1lOO_dataout;
	wire	wire_nl1O0i_dataout;
	wire	wire_nl1O0l_dataout;
	wire	wire_nl1O0O_dataout;
	wire	wire_nl1O1i_dataout;
	wire	wire_nl1O1l_dataout;
	wire	wire_nl1O1O_dataout;
	wire	wire_nl1Oi_dataout;
	wire	wire_nl1Oii_dataout;
	wire	wire_nl1Oil_dataout;
	wire	wire_nl1OiO_dataout;
	wire	wire_nli00i_dataout;
	wire	wire_nli00l_dataout;
	wire	wire_nli00O_dataout;
	wire	wire_nli01l_dataout;
	wire	wire_nli01O_dataout;
	wire	wire_nli0ii_dataout;
	wire	wire_nli0il_dataout;
	wire	wire_nli0iO_dataout;
	wire	wire_nli0li_dataout;
	wire	wire_nli0ll_dataout;
	wire	wire_nli0lO_dataout;
	wire	wire_nli0Oi_dataout;
	wire	wire_nli0Ol_dataout;
	wire	wire_nli0OO_dataout;
	wire	wire_nlii0i_dataout;
	wire	wire_nlii0l_dataout;
	wire	wire_nlii0O_dataout;
	wire	wire_nlii1i_dataout;
	wire	wire_nlii1l_dataout;
	wire	wire_nlii1O_dataout;
	wire	wire_nliiii_dataout;
	wire	wire_nliiil_dataout;
	wire	wire_nliiiO_dataout;
	wire	wire_nliili_dataout;
	wire	wire_nliill_dataout;
	wire	wire_nliilO_dataout;
	wire	wire_nliiOi_dataout;
	wire	wire_nliiOl_dataout;
	wire	wire_nliiOO_dataout;
	wire	wire_nlil0i_dataout;
	wire	wire_nlil0l_dataout;
	wire	wire_nlil0O_dataout;
	wire	wire_nlil1i_dataout;
	wire	wire_nlil1l_dataout;
	wire	wire_nlil1O_dataout;
	wire	wire_nlilii_dataout;
	wire	wire_nlilil_dataout;
	wire	wire_nliliO_dataout;
	wire	wire_nlilli_dataout;
	wire	wire_nlilll_dataout;
	wire	wire_nlillO_dataout;
	wire	wire_nlilOi_dataout;
	wire	wire_nliOl_dataout;
	wire	wire_nliOO_dataout;
	wire	wire_nll00i_dataout;
	wire	wire_nll00l_dataout;
	wire	wire_nll00O_dataout;
	wire	wire_nll01i_dataout;
	wire	wire_nll01l_dataout;
	wire	wire_nll01O_dataout;
	wire	wire_nll0i_dataout;
	wire	wire_nll0ii_dataout;
	wire	wire_nll0il_dataout;
	wire	wire_nll0iO_dataout;
	wire	wire_nll0l_dataout;
	wire	wire_nll0li_dataout;
	wire	wire_nll0ll_dataout;
	wire	wire_nll0lO_dataout;
	wire	wire_nll0O_dataout;
	wire	wire_nll0Oi_dataout;
	wire	wire_nll0Ol_dataout;
	wire	wire_nll0OO_dataout;
	wire	wire_nll10l_dataout;
	wire	wire_nll10O_dataout;
	wire	wire_nll1i_dataout;
	wire	wire_nll1ii_dataout;
	wire	wire_nll1il_dataout;
	wire	wire_nll1iO_dataout;
	wire	wire_nll1l_dataout;
	wire	wire_nll1li_dataout;
	wire	wire_nll1ll_dataout;
	wire	wire_nll1lO_dataout;
	wire	wire_nll1O_dataout;
	wire	wire_nll1Oi_dataout;
	wire	wire_nll1Ol_dataout;
	wire	wire_nll1OO_dataout;
	wire	wire_nlli0i_dataout;
	wire	wire_nlli1i_dataout;
	wire	wire_nlli1l_dataout;
	wire	wire_nlli1O_dataout;
	wire	wire_nllii_dataout;
	wire	wire_nllil_dataout;
	wire	wire_nlliO_dataout;
	wire	wire_nlll0i_dataout;
	wire	wire_nlll0l_dataout;
	wire	wire_nlll0O_dataout;
	wire	wire_nlll1i_dataout;
	wire	wire_nlll1l_dataout;
	wire	wire_nlll1O_dataout;
	wire	wire_nllli_dataout;
	wire	wire_nlllii_dataout;
	wire	wire_nlllil_dataout;
	wire	wire_nllliO_dataout;
	wire	wire_nllll_dataout;
	wire	wire_nlllli_dataout;
	wire	wire_nlllll_dataout;
	wire	wire_nllllO_dataout;
	wire	wire_nlllO_dataout;
	wire	wire_nlllOi_dataout;
	wire	wire_nlllOl_dataout;
	wire	wire_nlllOO_dataout;
	wire	wire_nllO0i_dataout;
	wire	wire_nllO0l_dataout;
	wire	wire_nllO0O_dataout;
	wire	wire_nllO1i_dataout;
	wire	wire_nllO1l_dataout;
	wire	wire_nllO1O_dataout;
	wire	wire_nllOi_dataout;
	wire	wire_nllOii_dataout;
	wire	wire_nllOil_dataout;
	wire	wire_nllOiO_dataout;
	wire	wire_nllOl_dataout;
	wire	wire_nllOli_dataout;
	wire	wire_nllOll_dataout;
	wire	wire_nllOlO_dataout;
	wire	wire_nllOO_dataout;
	wire	wire_nllOOi_dataout;
	wire	wire_nllOOl_dataout;
	wire	wire_nllOOO_dataout;
	wire	wire_nlO0i_dataout;
	wire	wire_nlO0l_dataout;
	wire	wire_nlO0O_dataout;
	wire	wire_nlO10i_dataout;
	wire	wire_nlO10l_dataout;
	wire	wire_nlO10O_dataout;
	wire	wire_nlO11i_dataout;
	wire	wire_nlO11l_dataout;
	wire	wire_nlO11O_dataout;
	wire	wire_nlO1i_dataout;
	wire	wire_nlO1l_dataout;
	wire	wire_nlO1O_dataout;
	wire	wire_nlOii_dataout;
	wire	wire_nlOil_dataout;
	wire	wire_nlOiO_dataout;
	wire	wire_nlOli_dataout;
	wire	wire_nlOll_dataout;
	wire	wire_nlOlO_dataout;
	wire	wire_nlOOi_dataout;
	wire  [14:0]   wire_niili_o;
	wire  [14:0]   wire_niill_o;
	wire  [4:0]   wire_nlilOl_o;
	wire  wire_nl00i_o;
	wire  wire_nl00l_o;
	wire  wire_nl00O_o;
	wire  wire_nl01i_o;
	wire  wire_nl01l_o;
	wire  wire_nl01O_o;
	wire  wire_nl0ii_o;
	wire  wire_nl0il_o;
	wire  wire_nl0iO_o;
	wire  wire_nl0li_o;
	wire  wire_nl0ll_o;
	wire  wire_nl0lO_o;
	wire  wire_nl0Oi_o;
	wire  wire_nl1Ol_o;
	wire  wire_nl1OO_o;
	wire  nl100O;

	altsyncram   niiOi
	( 
	.address_a({nlli0l, nlli0O, nlliii, nlliil, nlliiO, nllili, nllill, nllilO, nlliOi, nlliOl, nlliOO, nlO1ii}),
	.clock0(clk),
	.clocken0(clken),
	.eccstatus(),
	.q_a(wire_niiOi_q_a),
	.q_b(),
	.aclr0(),
	.aclr1(),
	.address_b(),
	.addressstall_a(),
	.addressstall_b(),
	.byteena_a(),
	.byteena_b(),
	.clock1(),
	.clocken1(),
	.clocken2(),
	.clocken3(),
	.data_a(),
	.data_b(),
	.rden_a(),
	.rden_b(),
	.wren_a(),
	.wren_b()
	);
	defparam
		niiOi.address_aclr_a = "NONE",
		niiOi.address_aclr_b = "NONE",
		niiOi.address_reg_b = "CLOCK1",
		niiOi.byte_size = 8,
		niiOi.byteena_aclr_a = "NONE",
		niiOi.byteena_aclr_b = "NONE",
		niiOi.byteena_reg_b = "CLOCK1",
		niiOi.clock_enable_core_a = "USE_INPUT_CLKEN",
		niiOi.clock_enable_core_b = "USE_INPUT_CLKEN",
		niiOi.clock_enable_input_a = "NORMAL",
		niiOi.clock_enable_input_b = "NORMAL",
		niiOi.clock_enable_output_a = "NORMAL",
		niiOi.clock_enable_output_b = "NORMAL",
		niiOi.ecc_pipeline_stage_enabled = "FALSE",
		niiOi.enable_ecc = "FALSE",
		niiOi.indata_aclr_a = "NONE",
		niiOi.indata_aclr_b = "NONE",
		niiOi.indata_reg_b = "CLOCK1",
		niiOi.init_file = "dds_sin.hex",
		niiOi.init_file_layout = "PORT_A",
		niiOi.intended_device_family = "Cyclone IV E",
		niiOi.numwords_a = 4096,
		niiOi.numwords_b = 1,
		niiOi.operation_mode = "ROM",
		niiOi.outdata_aclr_a = "NONE",
		niiOi.outdata_aclr_b = "NONE",
		niiOi.outdata_reg_a = "CLOCK0",
		niiOi.outdata_reg_b = "UNREGISTERED",
		niiOi.ram_block_type = "AUTO",
		niiOi.rdcontrol_aclr_b = "NONE",
		niiOi.rdcontrol_reg_b = "CLOCK1",
		niiOi.read_during_write_mode_mixed_ports = "DONT_CARE",
		niiOi.read_during_write_mode_port_a = "NEW_DATA_NO_NBE_READ",
		niiOi.read_during_write_mode_port_b = "NEW_DATA_NO_NBE_READ",
		niiOi.width_a = 14,
		niiOi.width_b = 1,
		niiOi.width_byteena_a = 1,
		niiOi.width_byteena_b = 1,
		niiOi.width_eccstatus = 3,
		niiOi.widthad_a = 12,
		niiOi.widthad_b = 1,
		niiOi.wrcontrol_aclr_a = "NONE",
		niiOi.wrcontrol_aclr_b = "NONE",
		niiOi.wrcontrol_wraddress_reg_b = "CLOCK1",
		niiOi.lpm_hint = "WIDTH_BYTEENA=1";
	altsyncram   niiOl
	( 
	.address_a({nlli0l, nlli0O, nlliii, nlliil, nlliiO, nllili, nllill, nllilO, nlliOi, nlliOl, nlliOO, nlO1ii}),
	.clock0(clk),
	.clocken0(clken),
	.eccstatus(),
	.q_a(wire_niiOl_q_a),
	.q_b(),
	.aclr0(),
	.aclr1(),
	.address_b(),
	.addressstall_a(),
	.addressstall_b(),
	.byteena_a(),
	.byteena_b(),
	.clock1(),
	.clocken1(),
	.clocken2(),
	.clocken3(),
	.data_a(),
	.data_b(),
	.rden_a(),
	.rden_b(),
	.wren_a(),
	.wren_b()
	);
	defparam
		niiOl.address_aclr_a = "NONE",
		niiOl.address_aclr_b = "NONE",
		niiOl.address_reg_b = "CLOCK1",
		niiOl.byte_size = 8,
		niiOl.byteena_aclr_a = "NONE",
		niiOl.byteena_aclr_b = "NONE",
		niiOl.byteena_reg_b = "CLOCK1",
		niiOl.clock_enable_core_a = "USE_INPUT_CLKEN",
		niiOl.clock_enable_core_b = "USE_INPUT_CLKEN",
		niiOl.clock_enable_input_a = "NORMAL",
		niiOl.clock_enable_input_b = "NORMAL",
		niiOl.clock_enable_output_a = "NORMAL",
		niiOl.clock_enable_output_b = "NORMAL",
		niiOl.ecc_pipeline_stage_enabled = "FALSE",
		niiOl.enable_ecc = "FALSE",
		niiOl.indata_aclr_a = "NONE",
		niiOl.indata_aclr_b = "NONE",
		niiOl.indata_reg_b = "CLOCK1",
		niiOl.init_file = "dds_cos.hex",
		niiOl.init_file_layout = "PORT_A",
		niiOl.intended_device_family = "Cyclone IV E",
		niiOl.numwords_a = 4096,
		niiOl.numwords_b = 1,
		niiOl.operation_mode = "ROM",
		niiOl.outdata_aclr_a = "NONE",
		niiOl.outdata_aclr_b = "NONE",
		niiOl.outdata_reg_a = "CLOCK0",
		niiOl.outdata_reg_b = "UNREGISTERED",
		niiOl.ram_block_type = "AUTO",
		niiOl.rdcontrol_aclr_b = "NONE",
		niiOl.rdcontrol_reg_b = "CLOCK1",
		niiOl.read_during_write_mode_mixed_ports = "DONT_CARE",
		niiOl.read_during_write_mode_port_a = "NEW_DATA_NO_NBE_READ",
		niiOl.read_during_write_mode_port_b = "NEW_DATA_NO_NBE_READ",
		niiOl.width_a = 14,
		niiOl.width_b = 1,
		niiOl.width_byteena_a = 1,
		niiOl.width_byteena_b = 1,
		niiOl.width_eccstatus = 3,
		niiOl.widthad_a = 12,
		niiOl.widthad_b = 1,
		niiOl.wrcontrol_aclr_a = "NONE",
		niiOl.wrcontrol_aclr_b = "NONE",
		niiOl.wrcontrol_wraddress_reg_b = "CLOCK1",
		niiOl.lpm_hint = "WIDTH_BYTEENA=1";
	initial
		niOOOl43 = 0;
	always @ ( posedge clk)
		  niOOOl43 <= niOOOl44;
	event niOOOl43_event;
	initial
		#1 ->niOOOl43_event;
	always @(niOOOl43_event)
		niOOOl43 <= {1{1'b1}};
	initial
		niOOOl44 = 0;
	always @ ( posedge clk)
		  niOOOl44 <= niOOOl43;
	initial
		niOOOO41 = 0;
	always @ ( posedge clk)
		  niOOOO41 <= niOOOO42;
	event niOOOO41_event;
	initial
		#1 ->niOOOO41_event;
	always @(niOOOO41_event)
		niOOOO41 <= {1{1'b1}};
	initial
		niOOOO42 = 0;
	always @ ( posedge clk)
		  niOOOO42 <= niOOOO41;
	initial
		nl101i10 = 0;
	always @ ( posedge clk)
		  nl101i10 <= nl101i9;
	initial
		nl101i9 = 0;
	always @ ( posedge clk)
		  nl101i9 <= nl101i10;
	event nl101i9_event;
	initial
		#1 ->nl101i9_event;
	always @(nl101i9_event)
		nl101i9 <= {1{1'b1}};
	initial
		nl101l7 = 0;
	always @ ( posedge clk)
		  nl101l7 <= nl101l8;
	event nl101l7_event;
	initial
		#1 ->nl101l7_event;
	always @(nl101l7_event)
		nl101l7 <= {1{1'b1}};
	initial
		nl101l8 = 0;
	always @ ( posedge clk)
		  nl101l8 <= nl101l7;
	initial
		nl101O5 = 0;
	always @ ( posedge clk)
		  nl101O5 <= nl101O6;
	event nl101O5_event;
	initial
		#1 ->nl101O5_event;
	always @(nl101O5_event)
		nl101O5 <= {1{1'b1}};
	initial
		nl101O6 = 0;
	always @ ( posedge clk)
		  nl101O6 <= nl101O5;
	initial
		nl10il3 = 0;
	always @ ( posedge clk)
		  nl10il3 <= nl10il4;
	event nl10il3_event;
	initial
		#1 ->nl10il3_event;
	always @(nl10il3_event)
		nl10il3 <= {1{1'b1}};
	initial
		nl10il4 = 0;
	always @ ( posedge clk)
		  nl10il4 <= nl10il3;
	initial
		nl10iO1 = 0;
	always @ ( posedge clk)
		  nl10iO1 <= nl10iO2;
	event nl10iO1_event;
	initial
		#1 ->nl10iO1_event;
	always @(nl10iO1_event)
		nl10iO1 <= {1{1'b1}};
	initial
		nl10iO2 = 0;
	always @ ( posedge clk)
		  nl10iO2 <= nl10iO1;
	initial
		nl110i33 = 0;
	always @ ( posedge clk)
		  nl110i33 <= nl110i34;
	event nl110i33_event;
	initial
		#1 ->nl110i33_event;
	always @(nl110i33_event)
		nl110i33 <= {1{1'b1}};
	initial
		nl110i34 = 0;
	always @ ( posedge clk)
		  nl110i34 <= nl110i33;
	initial
		nl110l31 = 0;
	always @ ( posedge clk)
		  nl110l31 <= nl110l32;
	event nl110l31_event;
	initial
		#1 ->nl110l31_event;
	always @(nl110l31_event)
		nl110l31 <= {1{1'b1}};
	initial
		nl110l32 = 0;
	always @ ( posedge clk)
		  nl110l32 <= nl110l31;
	initial
		nl110O29 = 0;
	always @ ( posedge clk)
		  nl110O29 <= nl110O30;
	event nl110O29_event;
	initial
		#1 ->nl110O29_event;
	always @(nl110O29_event)
		nl110O29 <= {1{1'b1}};
	initial
		nl110O30 = 0;
	always @ ( posedge clk)
		  nl110O30 <= nl110O29;
	initial
		nl111i39 = 0;
	always @ ( posedge clk)
		  nl111i39 <= nl111i40;
	event nl111i39_event;
	initial
		#1 ->nl111i39_event;
	always @(nl111i39_event)
		nl111i39 <= {1{1'b1}};
	initial
		nl111i40 = 0;
	always @ ( posedge clk)
		  nl111i40 <= nl111i39;
	initial
		nl111l37 = 0;
	always @ ( posedge clk)
		  nl111l37 <= nl111l38;
	event nl111l37_event;
	initial
		#1 ->nl111l37_event;
	always @(nl111l37_event)
		nl111l37 <= {1{1'b1}};
	initial
		nl111l38 = 0;
	always @ ( posedge clk)
		  nl111l38 <= nl111l37;
	initial
		nl111O35 = 0;
	always @ ( posedge clk)
		  nl111O35 <= nl111O36;
	event nl111O35_event;
	initial
		#1 ->nl111O35_event;
	always @(nl111O35_event)
		nl111O35 <= {1{1'b1}};
	initial
		nl111O36 = 0;
	always @ ( posedge clk)
		  nl111O36 <= nl111O35;
	initial
		nl11ii27 = 0;
	always @ ( posedge clk)
		  nl11ii27 <= nl11ii28;
	event nl11ii27_event;
	initial
		#1 ->nl11ii27_event;
	always @(nl11ii27_event)
		nl11ii27 <= {1{1'b1}};
	initial
		nl11ii28 = 0;
	always @ ( posedge clk)
		  nl11ii28 <= nl11ii27;
	initial
		nl11il25 = 0;
	always @ ( posedge clk)
		  nl11il25 <= nl11il26;
	event nl11il25_event;
	initial
		#1 ->nl11il25_event;
	always @(nl11il25_event)
		nl11il25 <= {1{1'b1}};
	initial
		nl11il26 = 0;
	always @ ( posedge clk)
		  nl11il26 <= nl11il25;
	initial
		nl11iO23 = 0;
	always @ ( posedge clk)
		  nl11iO23 <= nl11iO24;
	event nl11iO23_event;
	initial
		#1 ->nl11iO23_event;
	always @(nl11iO23_event)
		nl11iO23 <= {1{1'b1}};
	initial
		nl11iO24 = 0;
	always @ ( posedge clk)
		  nl11iO24 <= nl11iO23;
	initial
		nl11li21 = 0;
	always @ ( posedge clk)
		  nl11li21 <= nl11li22;
	event nl11li21_event;
	initial
		#1 ->nl11li21_event;
	always @(nl11li21_event)
		nl11li21 <= {1{1'b1}};
	initial
		nl11li22 = 0;
	always @ ( posedge clk)
		  nl11li22 <= nl11li21;
	initial
		nl11ll19 = 0;
	always @ ( posedge clk)
		  nl11ll19 <= nl11ll20;
	event nl11ll19_event;
	initial
		#1 ->nl11ll19_event;
	always @(nl11ll19_event)
		nl11ll19 <= {1{1'b1}};
	initial
		nl11ll20 = 0;
	always @ ( posedge clk)
		  nl11ll20 <= nl11ll19;
	initial
		nl11lO17 = 0;
	always @ ( posedge clk)
		  nl11lO17 <= nl11lO18;
	event nl11lO17_event;
	initial
		#1 ->nl11lO17_event;
	always @(nl11lO17_event)
		nl11lO17 <= {1{1'b1}};
	initial
		nl11lO18 = 0;
	always @ ( posedge clk)
		  nl11lO18 <= nl11lO17;
	initial
		nl11Oi15 = 0;
	always @ ( posedge clk)
		  nl11Oi15 <= nl11Oi16;
	event nl11Oi15_event;
	initial
		#1 ->nl11Oi15_event;
	always @(nl11Oi15_event)
		nl11Oi15 <= {1{1'b1}};
	initial
		nl11Oi16 = 0;
	always @ ( posedge clk)
		  nl11Oi16 <= nl11Oi15;
	initial
		nl11Ol13 = 0;
	always @ ( posedge clk)
		  nl11Ol13 <= nl11Ol14;
	event nl11Ol13_event;
	initial
		#1 ->nl11Ol13_event;
	always @(nl11Ol13_event)
		nl11Ol13 <= {1{1'b1}};
	initial
		nl11Ol14 = 0;
	always @ ( posedge clk)
		  nl11Ol14 <= nl11Ol13;
	initial
		nl11OO11 = 0;
	always @ ( posedge clk)
		  nl11OO11 <= nl11OO12;
	event nl11OO11_event;
	initial
		#1 ->nl11OO11_event;
	always @(nl11OO11_event)
		nl11OO11 <= {1{1'b1}};
	initial
		nl11OO12 = 0;
	always @ ( posedge clk)
		  nl11OO12 <= nl11OO11;
	initial
	begin
		n101i = 0;
		n101l = 0;
		n10O = 0;
		n110i = 0;
		n110l = 0;
		n110O = 0;
		n111i = 0;
		n111l = 0;
		n111O = 0;
		n11ii = 0;
		n11il = 0;
		n11iO = 0;
		n11li = 0;
		n11ll = 0;
		n11lO = 0;
		n11Oi = 0;
		n11Ol = 0;
		n11OO = 0;
		niilO = 0;
		niiOO = 0;
		nil0i = 0;
		nil0l = 0;
		nil0O = 0;
		nil1i = 0;
		nil1l = 0;
		nil1O = 0;
		nilii = 0;
		nilil = 0;
		niliO = 0;
		nilli = 0;
		nilll = 0;
		nillO = 0;
		nilOi = 0;
		nl000i = 0;
		nl000l = 0;
		nl001i = 0;
		nl001l = 0;
		nl001O = 0;
		nl010i = 0;
		nl010l = 0;
		nl010O = 0;
		nl011i = 0;
		nl011l = 0;
		nl011O = 0;
		nl01ii = 0;
		nl01il = 0;
		nl01iO = 0;
		nl01li = 0;
		nl01ll = 0;
		nl01lO = 0;
		nl01Oi = 0;
		nl01Ol = 0;
		nl01OO = 0;
		nl0Ol = 0;
		nl0Oll = 0;
		nl0OlO = 0;
		nl0OO = 0;
		nl0OOi = 0;
		nl0OOl = 0;
		nl0OOO = 0;
		nl10li = 0;
		nl10ll = 0;
		nl10lO = 0;
		nl10Oi = 0;
		nl10Ol = 0;
		nl10OO = 0;
		nl1i0i = 0;
		nl1i0l = 0;
		nl1i1i = 0;
		nl1i1l = 0;
		nl1i1O = 0;
		nl1l0O = 0;
		nl1lii = 0;
		nl1lil = 0;
		nl1liO = 0;
		nl1OlO = 0;
		nl1OOi = 0;
		nl1OOl = 0;
		nl1OOO = 0;
		nli01i = 0;
		nli0i = 0;
		nli0l = 0;
		nli0O = 0;
		nli10i = 0;
		nli10l = 0;
		nli10O = 0;
		nli11i = 0;
		nli11l = 0;
		nli11O = 0;
		nli1i = 0;
		nli1ii = 0;
		nli1il = 0;
		nli1iO = 0;
		nli1l = 0;
		nli1li = 0;
		nli1ll = 0;
		nli1lO = 0;
		nli1O = 0;
		nli1Oi = 0;
		nli1Ol = 0;
		nli1OO = 0;
		nliii = 0;
		nliil = 0;
		nliiO = 0;
		nlili = 0;
		nlill = 0;
		nlilO = 0;
		nliO0l = 0;
		nliO0O = 0;
		nliO1O = 0;
		nliOi = 0;
		nliOii = 0;
		nliOil = 0;
		nliOiO = 0;
		nliOli = 0;
		nliOll = 0;
		nliOlO = 0;
		nliOOi = 0;
		nliOOl = 0;
		nliOOO = 0;
		nll10i = 0;
		nll11i = 0;
		nll11l = 0;
		nll11O = 0;
		nlli0l = 0;
		nlli0O = 0;
		nlliii = 0;
		nlliil = 0;
		nlliiO = 0;
		nllili = 0;
		nllill = 0;
		nllilO = 0;
		nlliOi = 0;
		nlliOl = 0;
		nlliOO = 0;
		nlO00i = 0;
		nlO00l = 0;
		nlO00O = 0;
		nlO01i = 0;
		nlO01l = 0;
		nlO01O = 0;
		nlO0ii = 0;
		nlO0il = 0;
		nlO0iO = 0;
		nlO0li = 0;
		nlO0ll = 0;
		nlO0lO = 0;
		nlO0Oi = 0;
		nlO0Ol = 0;
		nlO0OO = 0;
		nlO1ii = 0;
		nlO1il = 0;
		nlO1iO = 0;
		nlO1li = 0;
		nlO1ll = 0;
		nlO1lO = 0;
		nlO1Oi = 0;
		nlO1Ol = 0;
		nlO1OO = 0;
		nlOi0i = 0;
		nlOi0l = 0;
		nlOi0O = 0;
		nlOi1i = 0;
		nlOi1l = 0;
		nlOi1O = 0;
		nlOiii = 0;
		nlOiil = 0;
		nlOiiO = 0;
		nlOili = 0;
		nlOill = 0;
		nlOilO = 0;
		nlOiOi = 0;
		nlOiOl = 0;
		nlOiOO = 0;
		nlOl0i = 0;
		nlOl0l = 0;
		nlOl0O = 0;
		nlOl1i = 0;
		nlOl1l = 0;
		nlOl1O = 0;
		nlOlii = 0;
		nlOlil = 0;
		nlOliO = 0;
		nlOlli = 0;
		nlOlll = 0;
		nlOllO = 0;
		nlOlOi = 0;
		nlOlOl = 0;
		nlOlOO = 0;
		nlOO0i = 0;
		nlOO0l = 0;
		nlOO0O = 0;
		nlOO1i = 0;
		nlOO1l = 0;
		nlOO1O = 0;
		nlOOii = 0;
		nlOOil = 0;
		nlOOiO = 0;
		nlOOl = 0;
		nlOOli = 0;
		nlOOll = 0;
		nlOOlO = 0;
		nlOOOi = 0;
		nlOOOl = 0;
		nlOOOO = 0;
	end
	always @ (clk or wire_n10l_PRN or wire_n10l_CLRN)
	begin
		if (wire_n10l_PRN == 1'b0) 
		begin
			n101i <= 1;
			n101l <= 1;
			n10O <= 1;
			n110i <= 1;
			n110l <= 1;
			n110O <= 1;
			n111i <= 1;
			n111l <= 1;
			n111O <= 1;
			n11ii <= 1;
			n11il <= 1;
			n11iO <= 1;
			n11li <= 1;
			n11ll <= 1;
			n11lO <= 1;
			n11Oi <= 1;
			n11Ol <= 1;
			n11OO <= 1;
			niilO <= 1;
			niiOO <= 1;
			nil0i <= 1;
			nil0l <= 1;
			nil0O <= 1;
			nil1i <= 1;
			nil1l <= 1;
			nil1O <= 1;
			nilii <= 1;
			nilil <= 1;
			niliO <= 1;
			nilli <= 1;
			nilll <= 1;
			nillO <= 1;
			nilOi <= 1;
			nl000i <= 1;
			nl000l <= 1;
			nl001i <= 1;
			nl001l <= 1;
			nl001O <= 1;
			nl010i <= 1;
			nl010l <= 1;
			nl010O <= 1;
			nl011i <= 1;
			nl011l <= 1;
			nl011O <= 1;
			nl01ii <= 1;
			nl01il <= 1;
			nl01iO <= 1;
			nl01li <= 1;
			nl01ll <= 1;
			nl01lO <= 1;
			nl01Oi <= 1;
			nl01Ol <= 1;
			nl01OO <= 1;
			nl0Ol <= 1;
			nl0Oll <= 1;
			nl0OlO <= 1;
			nl0OO <= 1;
			nl0OOi <= 1;
			nl0OOl <= 1;
			nl0OOO <= 1;
			nl10li <= 1;
			nl10ll <= 1;
			nl10lO <= 1;
			nl10Oi <= 1;
			nl10Ol <= 1;
			nl10OO <= 1;
			nl1i0i <= 1;
			nl1i0l <= 1;
			nl1i1i <= 1;
			nl1i1l <= 1;
			nl1i1O <= 1;
			nl1l0O <= 1;
			nl1lii <= 1;
			nl1lil <= 1;
			nl1liO <= 1;
			nl1OlO <= 1;
			nl1OOi <= 1;
			nl1OOl <= 1;
			nl1OOO <= 1;
			nli01i <= 1;
			nli0i <= 1;
			nli0l <= 1;
			nli0O <= 1;
			nli10i <= 1;
			nli10l <= 1;
			nli10O <= 1;
			nli11i <= 1;
			nli11l <= 1;
			nli11O <= 1;
			nli1i <= 1;
			nli1ii <= 1;
			nli1il <= 1;
			nli1iO <= 1;
			nli1l <= 1;
			nli1li <= 1;
			nli1ll <= 1;
			nli1lO <= 1;
			nli1O <= 1;
			nli1Oi <= 1;
			nli1Ol <= 1;
			nli1OO <= 1;
			nliii <= 1;
			nliil <= 1;
			nliiO <= 1;
			nlili <= 1;
			nlill <= 1;
			nlilO <= 1;
			nliO0l <= 1;
			nliO0O <= 1;
			nliO1O <= 1;
			nliOi <= 1;
			nliOii <= 1;
			nliOil <= 1;
			nliOiO <= 1;
			nliOli <= 1;
			nliOll <= 1;
			nliOlO <= 1;
			nliOOi <= 1;
			nliOOl <= 1;
			nliOOO <= 1;
			nll10i <= 1;
			nll11i <= 1;
			nll11l <= 1;
			nll11O <= 1;
			nlli0l <= 1;
			nlli0O <= 1;
			nlliii <= 1;
			nlliil <= 1;
			nlliiO <= 1;
			nllili <= 1;
			nllill <= 1;
			nllilO <= 1;
			nlliOi <= 1;
			nlliOl <= 1;
			nlliOO <= 1;
			nlO00i <= 1;
			nlO00l <= 1;
			nlO00O <= 1;
			nlO01i <= 1;
			nlO01l <= 1;
			nlO01O <= 1;
			nlO0ii <= 1;
			nlO0il <= 1;
			nlO0iO <= 1;
			nlO0li <= 1;
			nlO0ll <= 1;
			nlO0lO <= 1;
			nlO0Oi <= 1;
			nlO0Ol <= 1;
			nlO0OO <= 1;
			nlO1ii <= 1;
			nlO1il <= 1;
			nlO1iO <= 1;
			nlO1li <= 1;
			nlO1ll <= 1;
			nlO1lO <= 1;
			nlO1Oi <= 1;
			nlO1Ol <= 1;
			nlO1OO <= 1;
			nlOi0i <= 1;
			nlOi0l <= 1;
			nlOi0O <= 1;
			nlOi1i <= 1;
			nlOi1l <= 1;
			nlOi1O <= 1;
			nlOiii <= 1;
			nlOiil <= 1;
			nlOiiO <= 1;
			nlOili <= 1;
			nlOill <= 1;
			nlOilO <= 1;
			nlOiOi <= 1;
			nlOiOl <= 1;
			nlOiOO <= 1;
			nlOl0i <= 1;
			nlOl0l <= 1;
			nlOl0O <= 1;
			nlOl1i <= 1;
			nlOl1l <= 1;
			nlOl1O <= 1;
			nlOlii <= 1;
			nlOlil <= 1;
			nlOliO <= 1;
			nlOlli <= 1;
			nlOlll <= 1;
			nlOllO <= 1;
			nlOlOi <= 1;
			nlOlOl <= 1;
			nlOlOO <= 1;
			nlOO0i <= 1;
			nlOO0l <= 1;
			nlOO0O <= 1;
			nlOO1i <= 1;
			nlOO1l <= 1;
			nlOO1O <= 1;
			nlOOii <= 1;
			nlOOil <= 1;
			nlOOiO <= 1;
			nlOOl <= 1;
			nlOOli <= 1;
			nlOOll <= 1;
			nlOOlO <= 1;
			nlOOOi <= 1;
			nlOOOl <= 1;
			nlOOOO <= 1;
		end
		else if  (wire_n10l_CLRN == 1'b0) 
		begin
			n101i <= 0;
			n101l <= 0;
			n10O <= 0;
			n110i <= 0;
			n110l <= 0;
			n110O <= 0;
			n111i <= 0;
			n111l <= 0;
			n111O <= 0;
			n11ii <= 0;
			n11il <= 0;
			n11iO <= 0;
			n11li <= 0;
			n11ll <= 0;
			n11lO <= 0;
			n11Oi <= 0;
			n11Ol <= 0;
			n11OO <= 0;
			niilO <= 0;
			niiOO <= 0;
			nil0i <= 0;
			nil0l <= 0;
			nil0O <= 0;
			nil1i <= 0;
			nil1l <= 0;
			nil1O <= 0;
			nilii <= 0;
			nilil <= 0;
			niliO <= 0;
			nilli <= 0;
			nilll <= 0;
			nillO <= 0;
			nilOi <= 0;
			nl000i <= 0;
			nl000l <= 0;
			nl001i <= 0;
			nl001l <= 0;
			nl001O <= 0;
			nl010i <= 0;
			nl010l <= 0;
			nl010O <= 0;
			nl011i <= 0;
			nl011l <= 0;
			nl011O <= 0;
			nl01ii <= 0;
			nl01il <= 0;
			nl01iO <= 0;
			nl01li <= 0;
			nl01ll <= 0;
			nl01lO <= 0;
			nl01Oi <= 0;
			nl01Ol <= 0;
			nl01OO <= 0;
			nl0Ol <= 0;
			nl0Oll <= 0;
			nl0OlO <= 0;
			nl0OO <= 0;
			nl0OOi <= 0;
			nl0OOl <= 0;
			nl0OOO <= 0;
			nl10li <= 0;
			nl10ll <= 0;
			nl10lO <= 0;
			nl10Oi <= 0;
			nl10Ol <= 0;
			nl10OO <= 0;
			nl1i0i <= 0;
			nl1i0l <= 0;
			nl1i1i <= 0;
			nl1i1l <= 0;
			nl1i1O <= 0;
			nl1l0O <= 0;
			nl1lii <= 0;
			nl1lil <= 0;
			nl1liO <= 0;
			nl1OlO <= 0;
			nl1OOi <= 0;
			nl1OOl <= 0;
			nl1OOO <= 0;
			nli01i <= 0;
			nli0i <= 0;
			nli0l <= 0;
			nli0O <= 0;
			nli10i <= 0;
			nli10l <= 0;
			nli10O <= 0;
			nli11i <= 0;
			nli11l <= 0;
			nli11O <= 0;
			nli1i <= 0;
			nli1ii <= 0;
			nli1il <= 0;
			nli1iO <= 0;
			nli1l <= 0;
			nli1li <= 0;
			nli1ll <= 0;
			nli1lO <= 0;
			nli1O <= 0;
			nli1Oi <= 0;
			nli1Ol <= 0;
			nli1OO <= 0;
			nliii <= 0;
			nliil <= 0;
			nliiO <= 0;
			nlili <= 0;
			nlill <= 0;
			nlilO <= 0;
			nliO0l <= 0;
			nliO0O <= 0;
			nliO1O <= 0;
			nliOi <= 0;
			nliOii <= 0;
			nliOil <= 0;
			nliOiO <= 0;
			nliOli <= 0;
			nliOll <= 0;
			nliOlO <= 0;
			nliOOi <= 0;
			nliOOl <= 0;
			nliOOO <= 0;
			nll10i <= 0;
			nll11i <= 0;
			nll11l <= 0;
			nll11O <= 0;
			nlli0l <= 0;
			nlli0O <= 0;
			nlliii <= 0;
			nlliil <= 0;
			nlliiO <= 0;
			nllili <= 0;
			nllill <= 0;
			nllilO <= 0;
			nlliOi <= 0;
			nlliOl <= 0;
			nlliOO <= 0;
			nlO00i <= 0;
			nlO00l <= 0;
			nlO00O <= 0;
			nlO01i <= 0;
			nlO01l <= 0;
			nlO01O <= 0;
			nlO0ii <= 0;
			nlO0il <= 0;
			nlO0iO <= 0;
			nlO0li <= 0;
			nlO0ll <= 0;
			nlO0lO <= 0;
			nlO0Oi <= 0;
			nlO0Ol <= 0;
			nlO0OO <= 0;
			nlO1ii <= 0;
			nlO1il <= 0;
			nlO1iO <= 0;
			nlO1li <= 0;
			nlO1ll <= 0;
			nlO1lO <= 0;
			nlO1Oi <= 0;
			nlO1Ol <= 0;
			nlO1OO <= 0;
			nlOi0i <= 0;
			nlOi0l <= 0;
			nlOi0O <= 0;
			nlOi1i <= 0;
			nlOi1l <= 0;
			nlOi1O <= 0;
			nlOiii <= 0;
			nlOiil <= 0;
			nlOiiO <= 0;
			nlOili <= 0;
			nlOill <= 0;
			nlOilO <= 0;
			nlOiOi <= 0;
			nlOiOl <= 0;
			nlOiOO <= 0;
			nlOl0i <= 0;
			nlOl0l <= 0;
			nlOl0O <= 0;
			nlOl1i <= 0;
			nlOl1l <= 0;
			nlOl1O <= 0;
			nlOlii <= 0;
			nlOlil <= 0;
			nlOliO <= 0;
			nlOlli <= 0;
			nlOlll <= 0;
			nlOllO <= 0;
			nlOlOi <= 0;
			nlOlOl <= 0;
			nlOlOO <= 0;
			nlOO0i <= 0;
			nlOO0l <= 0;
			nlOO0O <= 0;
			nlOO1i <= 0;
			nlOO1l <= 0;
			nlOO1O <= 0;
			nlOOii <= 0;
			nlOOil <= 0;
			nlOOiO <= 0;
			nlOOl <= 0;
			nlOOli <= 0;
			nlOOll <= 0;
			nlOOlO <= 0;
			nlOOOi <= 0;
			nlOOOl <= 0;
			nlOOOO <= 0;
		end
		else 
		if (clk != n10l_clk_prev && clk == 1'b1) 
		begin
			n101i <= wire_n100l_dataout;
			n101l <= wire_n100i_dataout;
			n10O <= wire_n11l_dataout;
			n110i <= wire_n1i1l_dataout;
			n110l <= wire_n1i1i_dataout;
			n110O <= wire_n10OO_dataout;
			n111i <= wire_n1i0l_dataout;
			n111l <= wire_n1i0i_dataout;
			n111O <= wire_n1i1O_dataout;
			n11ii <= wire_n10Ol_dataout;
			n11il <= wire_n10Oi_dataout;
			n11iO <= wire_n10lO_dataout;
			n11li <= wire_n10ll_dataout;
			n11ll <= wire_n10li_dataout;
			n11lO <= wire_n10iO_dataout;
			n11Oi <= wire_n10il_dataout;
			n11Ol <= wire_n10ii_dataout;
			n11OO <= wire_n100O_dataout;
			niilO <= wire_n101O_dataout;
			niiOO <= wire_niOOi_dataout;
			nil0i <= wire_niOiO_dataout;
			nil0l <= wire_niOil_dataout;
			nil0O <= wire_niOii_dataout;
			nil1i <= wire_niOlO_dataout;
			nil1l <= wire_niOll_dataout;
			nil1O <= wire_niOli_dataout;
			nilii <= wire_niO0O_dataout;
			nilil <= wire_niO0l_dataout;
			niliO <= wire_niO0i_dataout;
			nilli <= wire_niO1O_dataout;
			nilll <= wire_niO1l_dataout;
			nillO <= wire_niO1i_dataout;
			nilOi <= wire_nilOO_dataout;
			nl000i <= wire_nl00il_dataout;
			nl000l <= wire_nl00ii_dataout;
			nl001i <= wire_nl00ll_dataout;
			nl001l <= wire_nl00li_dataout;
			nl001O <= wire_nl00iO_dataout;
			nl010i <= wire_nl0iil_dataout;
			nl010l <= wire_nl0iii_dataout;
			nl010O <= wire_nl0i0O_dataout;
			nl011i <= wire_nl0ill_dataout;
			nl011l <= wire_nl0ili_dataout;
			nl011O <= wire_nl0iiO_dataout;
			nl01ii <= wire_nl0i0l_dataout;
			nl01il <= wire_nl0i0i_dataout;
			nl01iO <= wire_nl0i1O_dataout;
			nl01li <= wire_nl0i1l_dataout;
			nl01ll <= wire_nl0i1i_dataout;
			nl01lO <= wire_nl00OO_dataout;
			nl01Oi <= wire_nl00Ol_dataout;
			nl01Ol <= wire_nl00Oi_dataout;
			nl01OO <= wire_nl00lO_dataout;
			nl0Ol <= wire_nilOl_dataout;
			nl0Oll <= wire_nl000O_dataout;
			nl0OlO <= wire_nliiii_dataout;
			nl0OO <= wire_nllOi_dataout;
			nl0OOi <= wire_nlii0O_dataout;
			nl0OOl <= wire_nlii0l_dataout;
			nl0OOO <= wire_nlii0i_dataout;
			nl10li <= wire_nl1i0O_dataout;
			nl10ll <= wire_nl1iii_dataout;
			nl10lO <= wire_nl1iil_dataout;
			nl10Oi <= wire_nl1iiO_dataout;
			nl10Ol <= wire_nl1ili_dataout;
			nl10OO <= wire_nl1ill_dataout;
			nl1i0i <= wire_nl1iOO_dataout;
			nl1i0l <= wire_nl1l1i_dataout;
			nl1i1i <= wire_nl1ilO_dataout;
			nl1i1l <= wire_nl1iOi_dataout;
			nl1i1O <= wire_nl1iOl_dataout;
			nl1l0O <= wire_nl1l1l_dataout;
			nl1lii <= wire_nl1l1O_dataout;
			nl1lil <= wire_nl1l0i_dataout;
			nl1liO <= wire_nl1l0l_dataout;
			nl1OlO <= wire_nl0iOO_dataout;
			nl1OOi <= wire_nl0iOl_dataout;
			nl1OOl <= wire_nl0iOi_dataout;
			nl1OOO <= wire_nl0ilO_dataout;
			nli01i <= wire_nli01O_dataout;
			nli0i <= wire_nlliO_dataout;
			nli0l <= wire_nllil_dataout;
			nli0O <= wire_nllii_dataout;
			nli10i <= wire_nli0OO_dataout;
			nli10l <= wire_nli0Ol_dataout;
			nli10O <= wire_nli0Oi_dataout;
			nli11i <= wire_nlii1O_dataout;
			nli11l <= wire_nlii1l_dataout;
			nli11O <= wire_nlii1i_dataout;
			nli1i <= wire_nlllO_dataout;
			nli1ii <= wire_nli0lO_dataout;
			nli1il <= wire_nli0ll_dataout;
			nli1iO <= wire_nli0li_dataout;
			nli1l <= wire_nllll_dataout;
			nli1li <= wire_nli0iO_dataout;
			nli1ll <= wire_nli0il_dataout;
			nli1lO <= wire_nli0ii_dataout;
			nli1O <= wire_nllli_dataout;
			nli1Oi <= wire_nli00O_dataout;
			nli1Ol <= wire_nli00l_dataout;
			nli1OO <= wire_nli00i_dataout;
			nliii <= wire_nll0O_dataout;
			nliil <= wire_nll0l_dataout;
			nliiO <= wire_nll0i_dataout;
			nlili <= wire_nll1O_dataout;
			nlill <= wire_nll1l_dataout;
			nlilO <= wire_nll1i_dataout;
			nliO0l <= wire_nll00i_dataout;
			nliO0O <= wire_nll01O_dataout;
			nliO1O <= wire_nli01l_dataout;
			nliOi <= wire_nliOO_dataout;
			nliOii <= wire_nll01l_dataout;
			nliOil <= wire_nll01i_dataout;
			nliOiO <= wire_nll1OO_dataout;
			nliOli <= wire_nll1Ol_dataout;
			nliOll <= wire_nll1Oi_dataout;
			nliOlO <= wire_nll1lO_dataout;
			nliOOi <= wire_nll1ll_dataout;
			nliOOl <= wire_nll1li_dataout;
			nliOOO <= wire_nll1iO_dataout;
			nll10i <= wire_nll10l_dataout;
			nll11i <= wire_nll1il_dataout;
			nll11l <= wire_nll1ii_dataout;
			nll11O <= wire_nll10O_dataout;
			nlli0l <= wire_nllllO_dataout;
			nlli0O <= wire_nlllll_dataout;
			nlliii <= wire_nlllli_dataout;
			nlliil <= wire_nllliO_dataout;
			nlliiO <= wire_nlllil_dataout;
			nllili <= wire_nlllii_dataout;
			nllill <= wire_nlll0O_dataout;
			nllilO <= wire_nlll0l_dataout;
			nlliOi <= wire_nlll0i_dataout;
			nlliOl <= wire_nlll1O_dataout;
			nlliOO <= wire_nlll1l_dataout;
			nlO00i <= wire_n001l_dataout;
			nlO00l <= wire_n001i_dataout;
			nlO00O <= wire_n01OO_dataout;
			nlO01i <= wire_n000l_dataout;
			nlO01l <= wire_n000i_dataout;
			nlO01O <= wire_n001O_dataout;
			nlO0ii <= wire_n01Ol_dataout;
			nlO0il <= wire_n01Oi_dataout;
			nlO0iO <= wire_n01lO_dataout;
			nlO0li <= wire_n01ll_dataout;
			nlO0ll <= wire_n01li_dataout;
			nlO0lO <= wire_n01iO_dataout;
			nlO0Oi <= wire_n01il_dataout;
			nlO0Ol <= wire_n01ii_dataout;
			nlO0OO <= wire_n010O_dataout;
			nlO1ii <= wire_nlll1i_dataout;
			nlO1il <= wire_n00Oi_dataout;
			nlO1iO <= wire_n00lO_dataout;
			nlO1li <= wire_n00ll_dataout;
			nlO1ll <= wire_n00li_dataout;
			nlO1lO <= wire_n00iO_dataout;
			nlO1Oi <= wire_n00il_dataout;
			nlO1Ol <= wire_n00ii_dataout;
			nlO1OO <= wire_n000O_dataout;
			nlOi0i <= wire_n011l_dataout;
			nlOi0l <= wire_n011i_dataout;
			nlOi0O <= wire_n1OOO_dataout;
			nlOi1i <= wire_n010l_dataout;
			nlOi1l <= wire_n010i_dataout;
			nlOi1O <= wire_n011O_dataout;
			nlOiii <= wire_n1OOl_dataout;
			nlOiil <= wire_n1OOi_dataout;
			nlOiiO <= wire_n1OlO_dataout;
			nlOili <= wire_n1Oll_dataout;
			nlOill <= wire_n1Oli_dataout;
			nlOilO <= wire_n1OiO_dataout;
			nlOiOi <= wire_n1Oil_dataout;
			nlOiOl <= wire_n1Oii_dataout;
			nlOiOO <= wire_n1O0O_dataout;
			nlOl0i <= wire_n1O1l_dataout;
			nlOl0l <= wire_n1O1i_dataout;
			nlOl0O <= wire_n1lOO_dataout;
			nlOl1i <= wire_n1O0l_dataout;
			nlOl1l <= wire_n1O0i_dataout;
			nlOl1O <= wire_n1O1O_dataout;
			nlOlii <= wire_n1lOl_dataout;
			nlOlil <= wire_n1lOi_dataout;
			nlOliO <= wire_n1llO_dataout;
			nlOlli <= wire_n1lll_dataout;
			nlOlll <= wire_n1lli_dataout;
			nlOllO <= wire_n1liO_dataout;
			nlOlOi <= wire_n1lil_dataout;
			nlOlOl <= wire_n1lii_dataout;
			nlOlOO <= wire_n1l0O_dataout;
			nlOO0i <= wire_n1l1l_dataout;
			nlOO0l <= wire_n1l1i_dataout;
			nlOO0O <= wire_n1iOO_dataout;
			nlOO1i <= wire_n1l0l_dataout;
			nlOO1l <= wire_n1l0i_dataout;
			nlOO1O <= wire_n1l1O_dataout;
			nlOOii <= wire_n1iOl_dataout;
			nlOOil <= wire_n1iOi_dataout;
			nlOOiO <= wire_n1ilO_dataout;
			nlOOl <= wire_nliOl_dataout;
			nlOOli <= wire_n1ill_dataout;
			nlOOll <= wire_n1ili_dataout;
			nlOOlO <= wire_n1iiO_dataout;
			nlOOOi <= wire_n1iil_dataout;
			nlOOOl <= wire_n1iii_dataout;
			nlOOOO <= wire_n1i0O_dataout;
		end
		n10l_clk_prev <= clk;
	end
	assign
		wire_n10l_CLRN = (nl10iO2 ^ nl10iO1),
		wire_n10l_PRN = (nl10il4 ^ nl10il3);
	event n101i_event;
	event n101l_event;
	event n10O_event;
	event n110i_event;
	event n110l_event;
	event n110O_event;
	event n111i_event;
	event n111l_event;
	event n111O_event;
	event n11ii_event;
	event n11il_event;
	event n11iO_event;
	event n11li_event;
	event n11ll_event;
	event n11lO_event;
	event n11Oi_event;
	event n11Ol_event;
	event n11OO_event;
	event niilO_event;
	event niiOO_event;
	event nil0i_event;
	event nil0l_event;
	event nil0O_event;
	event nil1i_event;
	event nil1l_event;
	event nil1O_event;
	event nilii_event;
	event nilil_event;
	event niliO_event;
	event nilli_event;
	event nilll_event;
	event nillO_event;
	event nilOi_event;
	event nl000i_event;
	event nl000l_event;
	event nl001i_event;
	event nl001l_event;
	event nl001O_event;
	event nl010i_event;
	event nl010l_event;
	event nl010O_event;
	event nl011i_event;
	event nl011l_event;
	event nl011O_event;
	event nl01ii_event;
	event nl01il_event;
	event nl01iO_event;
	event nl01li_event;
	event nl01ll_event;
	event nl01lO_event;
	event nl01Oi_event;
	event nl01Ol_event;
	event nl01OO_event;
	event nl0Ol_event;
	event nl0Oll_event;
	event nl0OlO_event;
	event nl0OO_event;
	event nl0OOi_event;
	event nl0OOl_event;
	event nl0OOO_event;
	event nl10li_event;
	event nl10ll_event;
	event nl10lO_event;
	event nl10Oi_event;
	event nl10Ol_event;
	event nl10OO_event;
	event nl1i0i_event;
	event nl1i0l_event;
	event nl1i1i_event;
	event nl1i1l_event;
	event nl1i1O_event;
	event nl1l0O_event;
	event nl1lii_event;
	event nl1lil_event;
	event nl1liO_event;
	event nl1OlO_event;
	event nl1OOi_event;
	event nl1OOl_event;
	event nl1OOO_event;
	event nli01i_event;
	event nli0i_event;
	event nli0l_event;
	event nli0O_event;
	event nli10i_event;
	event nli10l_event;
	event nli10O_event;
	event nli11i_event;
	event nli11l_event;
	event nli11O_event;
	event nli1i_event;
	event nli1ii_event;
	event nli1il_event;
	event nli1iO_event;
	event nli1l_event;
	event nli1li_event;
	event nli1ll_event;
	event nli1lO_event;
	event nli1O_event;
	event nli1Oi_event;
	event nli1Ol_event;
	event nli1OO_event;
	event nliii_event;
	event nliil_event;
	event nliiO_event;
	event nlili_event;
	event nlill_event;
	event nlilO_event;
	event nliO0l_event;
	event nliO0O_event;
	event nliO1O_event;
	event nliOi_event;
	event nliOii_event;
	event nliOil_event;
	event nliOiO_event;
	event nliOli_event;
	event nliOll_event;
	event nliOlO_event;
	event nliOOi_event;
	event nliOOl_event;
	event nliOOO_event;
	event nll10i_event;
	event nll11i_event;
	event nll11l_event;
	event nll11O_event;
	event nlli0l_event;
	event nlli0O_event;
	event nlliii_event;
	event nlliil_event;
	event nlliiO_event;
	event nllili_event;
	event nllill_event;
	event nllilO_event;
	event nlliOi_event;
	event nlliOl_event;
	event nlliOO_event;
	event nlO00i_event;
	event nlO00l_event;
	event nlO00O_event;
	event nlO01i_event;
	event nlO01l_event;
	event nlO01O_event;
	event nlO0ii_event;
	event nlO0il_event;
	event nlO0iO_event;
	event nlO0li_event;
	event nlO0ll_event;
	event nlO0lO_event;
	event nlO0Oi_event;
	event nlO0Ol_event;
	event nlO0OO_event;
	event nlO1ii_event;
	event nlO1il_event;
	event nlO1iO_event;
	event nlO1li_event;
	event nlO1ll_event;
	event nlO1lO_event;
	event nlO1Oi_event;
	event nlO1Ol_event;
	event nlO1OO_event;
	event nlOi0i_event;
	event nlOi0l_event;
	event nlOi0O_event;
	event nlOi1i_event;
	event nlOi1l_event;
	event nlOi1O_event;
	event nlOiii_event;
	event nlOiil_event;
	event nlOiiO_event;
	event nlOili_event;
	event nlOill_event;
	event nlOilO_event;
	event nlOiOi_event;
	event nlOiOl_event;
	event nlOiOO_event;
	event nlOl0i_event;
	event nlOl0l_event;
	event nlOl0O_event;
	event nlOl1i_event;
	event nlOl1l_event;
	event nlOl1O_event;
	event nlOlii_event;
	event nlOlil_event;
	event nlOliO_event;
	event nlOlli_event;
	event nlOlll_event;
	event nlOllO_event;
	event nlOlOi_event;
	event nlOlOl_event;
	event nlOlOO_event;
	event nlOO0i_event;
	event nlOO0l_event;
	event nlOO0O_event;
	event nlOO1i_event;
	event nlOO1l_event;
	event nlOO1O_event;
	event nlOOii_event;
	event nlOOil_event;
	event nlOOiO_event;
	event nlOOl_event;
	event nlOOli_event;
	event nlOOll_event;
	event nlOOlO_event;
	event nlOOOi_event;
	event nlOOOl_event;
	event nlOOOO_event;
	initial
		#1 ->n101i_event;
	initial
		#1 ->n101l_event;
	initial
		#1 ->n10O_event;
	initial
		#1 ->n110i_event;
	initial
		#1 ->n110l_event;
	initial
		#1 ->n110O_event;
	initial
		#1 ->n111i_event;
	initial
		#1 ->n111l_event;
	initial
		#1 ->n111O_event;
	initial
		#1 ->n11ii_event;
	initial
		#1 ->n11il_event;
	initial
		#1 ->n11iO_event;
	initial
		#1 ->n11li_event;
	initial
		#1 ->n11ll_event;
	initial
		#1 ->n11lO_event;
	initial
		#1 ->n11Oi_event;
	initial
		#1 ->n11Ol_event;
	initial
		#1 ->n11OO_event;
	initial
		#1 ->niilO_event;
	initial
		#1 ->niiOO_event;
	initial
		#1 ->nil0i_event;
	initial
		#1 ->nil0l_event;
	initial
		#1 ->nil0O_event;
	initial
		#1 ->nil1i_event;
	initial
		#1 ->nil1l_event;
	initial
		#1 ->nil1O_event;
	initial
		#1 ->nilii_event;
	initial
		#1 ->nilil_event;
	initial
		#1 ->niliO_event;
	initial
		#1 ->nilli_event;
	initial
		#1 ->nilll_event;
	initial
		#1 ->nillO_event;
	initial
		#1 ->nilOi_event;
	initial
		#1 ->nl000i_event;
	initial
		#1 ->nl000l_event;
	initial
		#1 ->nl001i_event;
	initial
		#1 ->nl001l_event;
	initial
		#1 ->nl001O_event;
	initial
		#1 ->nl010i_event;
	initial
		#1 ->nl010l_event;
	initial
		#1 ->nl010O_event;
	initial
		#1 ->nl011i_event;
	initial
		#1 ->nl011l_event;
	initial
		#1 ->nl011O_event;
	initial
		#1 ->nl01ii_event;
	initial
		#1 ->nl01il_event;
	initial
		#1 ->nl01iO_event;
	initial
		#1 ->nl01li_event;
	initial
		#1 ->nl01ll_event;
	initial
		#1 ->nl01lO_event;
	initial
		#1 ->nl01Oi_event;
	initial
		#1 ->nl01Ol_event;
	initial
		#1 ->nl01OO_event;
	initial
		#1 ->nl0Ol_event;
	initial
		#1 ->nl0Oll_event;
	initial
		#1 ->nl0OlO_event;
	initial
		#1 ->nl0OO_event;
	initial
		#1 ->nl0OOi_event;
	initial
		#1 ->nl0OOl_event;
	initial
		#1 ->nl0OOO_event;
	initial
		#1 ->nl10li_event;
	initial
		#1 ->nl10ll_event;
	initial
		#1 ->nl10lO_event;
	initial
		#1 ->nl10Oi_event;
	initial
		#1 ->nl10Ol_event;
	initial
		#1 ->nl10OO_event;
	initial
		#1 ->nl1i0i_event;
	initial
		#1 ->nl1i0l_event;
	initial
		#1 ->nl1i1i_event;
	initial
		#1 ->nl1i1l_event;
	initial
		#1 ->nl1i1O_event;
	initial
		#1 ->nl1l0O_event;
	initial
		#1 ->nl1lii_event;
	initial
		#1 ->nl1lil_event;
	initial
		#1 ->nl1liO_event;
	initial
		#1 ->nl1OlO_event;
	initial
		#1 ->nl1OOi_event;
	initial
		#1 ->nl1OOl_event;
	initial
		#1 ->nl1OOO_event;
	initial
		#1 ->nli01i_event;
	initial
		#1 ->nli0i_event;
	initial
		#1 ->nli0l_event;
	initial
		#1 ->nli0O_event;
	initial
		#1 ->nli10i_event;
	initial
		#1 ->nli10l_event;
	initial
		#1 ->nli10O_event;
	initial
		#1 ->nli11i_event;
	initial
		#1 ->nli11l_event;
	initial
		#1 ->nli11O_event;
	initial
		#1 ->nli1i_event;
	initial
		#1 ->nli1ii_event;
	initial
		#1 ->nli1il_event;
	initial
		#1 ->nli1iO_event;
	initial
		#1 ->nli1l_event;
	initial
		#1 ->nli1li_event;
	initial
		#1 ->nli1ll_event;
	initial
		#1 ->nli1lO_event;
	initial
		#1 ->nli1O_event;
	initial
		#1 ->nli1Oi_event;
	initial
		#1 ->nli1Ol_event;
	initial
		#1 ->nli1OO_event;
	initial
		#1 ->nliii_event;
	initial
		#1 ->nliil_event;
	initial
		#1 ->nliiO_event;
	initial
		#1 ->nlili_event;
	initial
		#1 ->nlill_event;
	initial
		#1 ->nlilO_event;
	initial
		#1 ->nliO0l_event;
	initial
		#1 ->nliO0O_event;
	initial
		#1 ->nliO1O_event;
	initial
		#1 ->nliOi_event;
	initial
		#1 ->nliOii_event;
	initial
		#1 ->nliOil_event;
	initial
		#1 ->nliOiO_event;
	initial
		#1 ->nliOli_event;
	initial
		#1 ->nliOll_event;
	initial
		#1 ->nliOlO_event;
	initial
		#1 ->nliOOi_event;
	initial
		#1 ->nliOOl_event;
	initial
		#1 ->nliOOO_event;
	initial
		#1 ->nll10i_event;
	initial
		#1 ->nll11i_event;
	initial
		#1 ->nll11l_event;
	initial
		#1 ->nll11O_event;
	initial
		#1 ->nlli0l_event;
	initial
		#1 ->nlli0O_event;
	initial
		#1 ->nlliii_event;
	initial
		#1 ->nlliil_event;
	initial
		#1 ->nlliiO_event;
	initial
		#1 ->nllili_event;
	initial
		#1 ->nllill_event;
	initial
		#1 ->nllilO_event;
	initial
		#1 ->nlliOi_event;
	initial
		#1 ->nlliOl_event;
	initial
		#1 ->nlliOO_event;
	initial
		#1 ->nlO00i_event;
	initial
		#1 ->nlO00l_event;
	initial
		#1 ->nlO00O_event;
	initial
		#1 ->nlO01i_event;
	initial
		#1 ->nlO01l_event;
	initial
		#1 ->nlO01O_event;
	initial
		#1 ->nlO0ii_event;
	initial
		#1 ->nlO0il_event;
	initial
		#1 ->nlO0iO_event;
	initial
		#1 ->nlO0li_event;
	initial
		#1 ->nlO0ll_event;
	initial
		#1 ->nlO0lO_event;
	initial
		#1 ->nlO0Oi_event;
	initial
		#1 ->nlO0Ol_event;
	initial
		#1 ->nlO0OO_event;
	initial
		#1 ->nlO1ii_event;
	initial
		#1 ->nlO1il_event;
	initial
		#1 ->nlO1iO_event;
	initial
		#1 ->nlO1li_event;
	initial
		#1 ->nlO1ll_event;
	initial
		#1 ->nlO1lO_event;
	initial
		#1 ->nlO1Oi_event;
	initial
		#1 ->nlO1Ol_event;
	initial
		#1 ->nlO1OO_event;
	initial
		#1 ->nlOi0i_event;
	initial
		#1 ->nlOi0l_event;
	initial
		#1 ->nlOi0O_event;
	initial
		#1 ->nlOi1i_event;
	initial
		#1 ->nlOi1l_event;
	initial
		#1 ->nlOi1O_event;
	initial
		#1 ->nlOiii_event;
	initial
		#1 ->nlOiil_event;
	initial
		#1 ->nlOiiO_event;
	initial
		#1 ->nlOili_event;
	initial
		#1 ->nlOill_event;
	initial
		#1 ->nlOilO_event;
	initial
		#1 ->nlOiOi_event;
	initial
		#1 ->nlOiOl_event;
	initial
		#1 ->nlOiOO_event;
	initial
		#1 ->nlOl0i_event;
	initial
		#1 ->nlOl0l_event;
	initial
		#1 ->nlOl0O_event;
	initial
		#1 ->nlOl1i_event;
	initial
		#1 ->nlOl1l_event;
	initial
		#1 ->nlOl1O_event;
	initial
		#1 ->nlOlii_event;
	initial
		#1 ->nlOlil_event;
	initial
		#1 ->nlOliO_event;
	initial
		#1 ->nlOlli_event;
	initial
		#1 ->nlOlll_event;
	initial
		#1 ->nlOllO_event;
	initial
		#1 ->nlOlOi_event;
	initial
		#1 ->nlOlOl_event;
	initial
		#1 ->nlOlOO_event;
	initial
		#1 ->nlOO0i_event;
	initial
		#1 ->nlOO0l_event;
	initial
		#1 ->nlOO0O_event;
	initial
		#1 ->nlOO1i_event;
	initial
		#1 ->nlOO1l_event;
	initial
		#1 ->nlOO1O_event;
	initial
		#1 ->nlOOii_event;
	initial
		#1 ->nlOOil_event;
	initial
		#1 ->nlOOiO_event;
	initial
		#1 ->nlOOl_event;
	initial
		#1 ->nlOOli_event;
	initial
		#1 ->nlOOll_event;
	initial
		#1 ->nlOOlO_event;
	initial
		#1 ->nlOOOi_event;
	initial
		#1 ->nlOOOl_event;
	initial
		#1 ->nlOOOO_event;
	always @(n101i_event)
		n101i <= 1;
	always @(n101l_event)
		n101l <= 1;
	always @(n10O_event)
		n10O <= 1;
	always @(n110i_event)
		n110i <= 1;
	always @(n110l_event)
		n110l <= 1;
	always @(n110O_event)
		n110O <= 1;
	always @(n111i_event)
		n111i <= 1;
	always @(n111l_event)
		n111l <= 1;
	always @(n111O_event)
		n111O <= 1;
	always @(n11ii_event)
		n11ii <= 1;
	always @(n11il_event)
		n11il <= 1;
	always @(n11iO_event)
		n11iO <= 1;
	always @(n11li_event)
		n11li <= 1;
	always @(n11ll_event)
		n11ll <= 1;
	always @(n11lO_event)
		n11lO <= 1;
	always @(n11Oi_event)
		n11Oi <= 1;
	always @(n11Ol_event)
		n11Ol <= 1;
	always @(n11OO_event)
		n11OO <= 1;
	always @(niilO_event)
		niilO <= 1;
	always @(niiOO_event)
		niiOO <= 1;
	always @(nil0i_event)
		nil0i <= 1;
	always @(nil0l_event)
		nil0l <= 1;
	always @(nil0O_event)
		nil0O <= 1;
	always @(nil1i_event)
		nil1i <= 1;
	always @(nil1l_event)
		nil1l <= 1;
	always @(nil1O_event)
		nil1O <= 1;
	always @(nilii_event)
		nilii <= 1;
	always @(nilil_event)
		nilil <= 1;
	always @(niliO_event)
		niliO <= 1;
	always @(nilli_event)
		nilli <= 1;
	always @(nilll_event)
		nilll <= 1;
	always @(nillO_event)
		nillO <= 1;
	always @(nilOi_event)
		nilOi <= 1;
	always @(nl000i_event)
		nl000i <= 1;
	always @(nl000l_event)
		nl000l <= 1;
	always @(nl001i_event)
		nl001i <= 1;
	always @(nl001l_event)
		nl001l <= 1;
	always @(nl001O_event)
		nl001O <= 1;
	always @(nl010i_event)
		nl010i <= 1;
	always @(nl010l_event)
		nl010l <= 1;
	always @(nl010O_event)
		nl010O <= 1;
	always @(nl011i_event)
		nl011i <= 1;
	always @(nl011l_event)
		nl011l <= 1;
	always @(nl011O_event)
		nl011O <= 1;
	always @(nl01ii_event)
		nl01ii <= 1;
	always @(nl01il_event)
		nl01il <= 1;
	always @(nl01iO_event)
		nl01iO <= 1;
	always @(nl01li_event)
		nl01li <= 1;
	always @(nl01ll_event)
		nl01ll <= 1;
	always @(nl01lO_event)
		nl01lO <= 1;
	always @(nl01Oi_event)
		nl01Oi <= 1;
	always @(nl01Ol_event)
		nl01Ol <= 1;
	always @(nl01OO_event)
		nl01OO <= 1;
	always @(nl0Ol_event)
		nl0Ol <= 1;
	always @(nl0Oll_event)
		nl0Oll <= 1;
	always @(nl0OlO_event)
		nl0OlO <= 1;
	always @(nl0OO_event)
		nl0OO <= 1;
	always @(nl0OOi_event)
		nl0OOi <= 1;
	always @(nl0OOl_event)
		nl0OOl <= 1;
	always @(nl0OOO_event)
		nl0OOO <= 1;
	always @(nl10li_event)
		nl10li <= 1;
	always @(nl10ll_event)
		nl10ll <= 1;
	always @(nl10lO_event)
		nl10lO <= 1;
	always @(nl10Oi_event)
		nl10Oi <= 1;
	always @(nl10Ol_event)
		nl10Ol <= 1;
	always @(nl10OO_event)
		nl10OO <= 1;
	always @(nl1i0i_event)
		nl1i0i <= 1;
	always @(nl1i0l_event)
		nl1i0l <= 1;
	always @(nl1i1i_event)
		nl1i1i <= 1;
	always @(nl1i1l_event)
		nl1i1l <= 1;
	always @(nl1i1O_event)
		nl1i1O <= 1;
	always @(nl1l0O_event)
		nl1l0O <= 1;
	always @(nl1lii_event)
		nl1lii <= 1;
	always @(nl1lil_event)
		nl1lil <= 1;
	always @(nl1liO_event)
		nl1liO <= 1;
	always @(nl1OlO_event)
		nl1OlO <= 1;
	always @(nl1OOi_event)
		nl1OOi <= 1;
	always @(nl1OOl_event)
		nl1OOl <= 1;
	always @(nl1OOO_event)
		nl1OOO <= 1;
	always @(nli01i_event)
		nli01i <= 1;
	always @(nli0i_event)
		nli0i <= 1;
	always @(nli0l_event)
		nli0l <= 1;
	always @(nli0O_event)
		nli0O <= 1;
	always @(nli10i_event)
		nli10i <= 1;
	always @(nli10l_event)
		nli10l <= 1;
	always @(nli10O_event)
		nli10O <= 1;
	always @(nli11i_event)
		nli11i <= 1;
	always @(nli11l_event)
		nli11l <= 1;
	always @(nli11O_event)
		nli11O <= 1;
	always @(nli1i_event)
		nli1i <= 1;
	always @(nli1ii_event)
		nli1ii <= 1;
	always @(nli1il_event)
		nli1il <= 1;
	always @(nli1iO_event)
		nli1iO <= 1;
	always @(nli1l_event)
		nli1l <= 1;
	always @(nli1li_event)
		nli1li <= 1;
	always @(nli1ll_event)
		nli1ll <= 1;
	always @(nli1lO_event)
		nli1lO <= 1;
	always @(nli1O_event)
		nli1O <= 1;
	always @(nli1Oi_event)
		nli1Oi <= 1;
	always @(nli1Ol_event)
		nli1Ol <= 1;
	always @(nli1OO_event)
		nli1OO <= 1;
	always @(nliii_event)
		nliii <= 1;
	always @(nliil_event)
		nliil <= 1;
	always @(nliiO_event)
		nliiO <= 1;
	always @(nlili_event)
		nlili <= 1;
	always @(nlill_event)
		nlill <= 1;
	always @(nlilO_event)
		nlilO <= 1;
	always @(nliO0l_event)
		nliO0l <= 1;
	always @(nliO0O_event)
		nliO0O <= 1;
	always @(nliO1O_event)
		nliO1O <= 1;
	always @(nliOi_event)
		nliOi <= 1;
	always @(nliOii_event)
		nliOii <= 1;
	always @(nliOil_event)
		nliOil <= 1;
	always @(nliOiO_event)
		nliOiO <= 1;
	always @(nliOli_event)
		nliOli <= 1;
	always @(nliOll_event)
		nliOll <= 1;
	always @(nliOlO_event)
		nliOlO <= 1;
	always @(nliOOi_event)
		nliOOi <= 1;
	always @(nliOOl_event)
		nliOOl <= 1;
	always @(nliOOO_event)
		nliOOO <= 1;
	always @(nll10i_event)
		nll10i <= 1;
	always @(nll11i_event)
		nll11i <= 1;
	always @(nll11l_event)
		nll11l <= 1;
	always @(nll11O_event)
		nll11O <= 1;
	always @(nlli0l_event)
		nlli0l <= 1;
	always @(nlli0O_event)
		nlli0O <= 1;
	always @(nlliii_event)
		nlliii <= 1;
	always @(nlliil_event)
		nlliil <= 1;
	always @(nlliiO_event)
		nlliiO <= 1;
	always @(nllili_event)
		nllili <= 1;
	always @(nllill_event)
		nllill <= 1;
	always @(nllilO_event)
		nllilO <= 1;
	always @(nlliOi_event)
		nlliOi <= 1;
	always @(nlliOl_event)
		nlliOl <= 1;
	always @(nlliOO_event)
		nlliOO <= 1;
	always @(nlO00i_event)
		nlO00i <= 1;
	always @(nlO00l_event)
		nlO00l <= 1;
	always @(nlO00O_event)
		nlO00O <= 1;
	always @(nlO01i_event)
		nlO01i <= 1;
	always @(nlO01l_event)
		nlO01l <= 1;
	always @(nlO01O_event)
		nlO01O <= 1;
	always @(nlO0ii_event)
		nlO0ii <= 1;
	always @(nlO0il_event)
		nlO0il <= 1;
	always @(nlO0iO_event)
		nlO0iO <= 1;
	always @(nlO0li_event)
		nlO0li <= 1;
	always @(nlO0ll_event)
		nlO0ll <= 1;
	always @(nlO0lO_event)
		nlO0lO <= 1;
	always @(nlO0Oi_event)
		nlO0Oi <= 1;
	always @(nlO0Ol_event)
		nlO0Ol <= 1;
	always @(nlO0OO_event)
		nlO0OO <= 1;
	always @(nlO1ii_event)
		nlO1ii <= 1;
	always @(nlO1il_event)
		nlO1il <= 1;
	always @(nlO1iO_event)
		nlO1iO <= 1;
	always @(nlO1li_event)
		nlO1li <= 1;
	always @(nlO1ll_event)
		nlO1ll <= 1;
	always @(nlO1lO_event)
		nlO1lO <= 1;
	always @(nlO1Oi_event)
		nlO1Oi <= 1;
	always @(nlO1Ol_event)
		nlO1Ol <= 1;
	always @(nlO1OO_event)
		nlO1OO <= 1;
	always @(nlOi0i_event)
		nlOi0i <= 1;
	always @(nlOi0l_event)
		nlOi0l <= 1;
	always @(nlOi0O_event)
		nlOi0O <= 1;
	always @(nlOi1i_event)
		nlOi1i <= 1;
	always @(nlOi1l_event)
		nlOi1l <= 1;
	always @(nlOi1O_event)
		nlOi1O <= 1;
	always @(nlOiii_event)
		nlOiii <= 1;
	always @(nlOiil_event)
		nlOiil <= 1;
	always @(nlOiiO_event)
		nlOiiO <= 1;
	always @(nlOili_event)
		nlOili <= 1;
	always @(nlOill_event)
		nlOill <= 1;
	always @(nlOilO_event)
		nlOilO <= 1;
	always @(nlOiOi_event)
		nlOiOi <= 1;
	always @(nlOiOl_event)
		nlOiOl <= 1;
	always @(nlOiOO_event)
		nlOiOO <= 1;
	always @(nlOl0i_event)
		nlOl0i <= 1;
	always @(nlOl0l_event)
		nlOl0l <= 1;
	always @(nlOl0O_event)
		nlOl0O <= 1;
	always @(nlOl1i_event)
		nlOl1i <= 1;
	always @(nlOl1l_event)
		nlOl1l <= 1;
	always @(nlOl1O_event)
		nlOl1O <= 1;
	always @(nlOlii_event)
		nlOlii <= 1;
	always @(nlOlil_event)
		nlOlil <= 1;
	always @(nlOliO_event)
		nlOliO <= 1;
	always @(nlOlli_event)
		nlOlli <= 1;
	always @(nlOlll_event)
		nlOlll <= 1;
	always @(nlOllO_event)
		nlOllO <= 1;
	always @(nlOlOi_event)
		nlOlOi <= 1;
	always @(nlOlOl_event)
		nlOlOl <= 1;
	always @(nlOlOO_event)
		nlOlOO <= 1;
	always @(nlOO0i_event)
		nlOO0i <= 1;
	always @(nlOO0l_event)
		nlOO0l <= 1;
	always @(nlOO0O_event)
		nlOO0O <= 1;
	always @(nlOO1i_event)
		nlOO1i <= 1;
	always @(nlOO1l_event)
		nlOO1l <= 1;
	always @(nlOO1O_event)
		nlOO1O <= 1;
	always @(nlOOii_event)
		nlOOii <= 1;
	always @(nlOOil_event)
		nlOOil <= 1;
	always @(nlOOiO_event)
		nlOOiO <= 1;
	always @(nlOOl_event)
		nlOOl <= 1;
	always @(nlOOli_event)
		nlOOli <= 1;
	always @(nlOOll_event)
		nlOOll <= 1;
	always @(nlOOlO_event)
		nlOOlO <= 1;
	always @(nlOOOi_event)
		nlOOOi <= 1;
	always @(nlOOOl_event)
		nlOOOl <= 1;
	always @(nlOOOO_event)
		nlOOOO <= 1;
	lpm_add_sub   nl1Oli
	( 
	.aclr((~ reset_n)),
	.add_sub(1'b1),
	.clken(clken),
	.clock(clk),
	.cout(),
	.dataa({phi_inc_i[24:0]}),
	.datab({freq_mod_i[24:0]}),
	.overflow(),
	.result(wire_nl1Oli_result),
	.cin()
	);
	defparam
		nl1Oli.lpm_pipeline = 1,
		nl1Oli.lpm_representation = "SIGNED",
		nl1Oli.lpm_width = 25;
	lpm_add_sub   nl1Oll
	( 
	.aclr((~ reset_n)),
	.clken(clken),
	.clock(clk),
	.cout(),
	.dataa({nl1OlO, nl1OOi, nl1OOl, nl1OOO, nl011i, nl011l, nl011O, nl010i, nl010l, nl010O, nl01ii, nl01il, nl01iO, nl01li, nl01ll, nl01lO, nl01Oi, nl01Ol, nl01OO, nl001i, nl001l, nl001O, nl000i, nl000l, nl0Oll}),
	.datab({wire_nl1Oll_result[24:0]}),
	.overflow(),
	.result(wire_nl1Oll_result),
	.add_sub(),
	.cin()
	);
	defparam
		nl1Oll.lpm_direction = "ADD",
		nl1Oll.lpm_pipeline = 1,
		nl1Oll.lpm_representation = "UNSIGNED",
		nl1Oll.lpm_width = 25;
	lpm_add_sub   nliO0i
	( 
	.aclr((~ reset_n)),
	.clken(clken),
	.clock(clk),
	.cout(),
	.dataa({wire_nl1Oll_result[24:5]}),
	.datab({{16{nli1Oi}}, nli1Ol, nli1OO, nli01i, nliO1O}),
	.overflow(),
	.result(wire_nliO0i_result),
	.add_sub(),
	.cin()
	);
	defparam
		nliO0i.lpm_direction = "ADD",
		nliO0i.lpm_pipeline = 1,
		nliO0i.lpm_representation = "SIGNED",
		nliO0i.lpm_width = 20;
	lpm_counter   nlOOO
	( 
	.aclr((~ reset_n)),
	.clk_en(clken),
	.clock(clk),
	.cout(),
	.q(wire_nlOOO_q),
	.aload(),
	.aset(),
	.cin(),
	.cnt_en(),
	.data(),
	.sclr(),
	.sload(),
	.sset(),
	.updown()
	);
	defparam
		nlOOO.lpm_direction = "UP",
		nlOOO.lpm_modulus = 0,
		nlOOO.lpm_port_updown = "PORT_CONNECTIVITY",
		nlOOO.lpm_width = 4;
	and(wire_n000i_dataout, wire_ni0OO_dataout, ~((~ reset_n)));
	and(wire_n000l_dataout, wire_nii1i_dataout, ~((~ reset_n)));
	and(wire_n000O_dataout, wire_nii1l_dataout, ~((~ reset_n)));
	and(wire_n001i_dataout, wire_ni0lO_dataout, ~((~ reset_n)));
	and(wire_n001l_dataout, wire_ni0Oi_dataout, ~((~ reset_n)));
	and(wire_n001O_dataout, wire_ni0Ol_dataout, ~((~ reset_n)));
	and(wire_n00ii_dataout, wire_nii1O_dataout, ~((~ reset_n)));
	and(wire_n00il_dataout, wire_nii0i_dataout, ~((~ reset_n)));
	and(wire_n00iO_dataout, wire_nii0l_dataout, ~((~ reset_n)));
	and(wire_n00li_dataout, wire_nii0O_dataout, ~((~ reset_n)));
	and(wire_n00ll_dataout, wire_niiii_dataout, ~((~ reset_n)));
	and(wire_n00lO_dataout, wire_niiil_dataout, ~((~ reset_n)));
	and(wire_n00Oi_dataout, wire_niiiO_dataout, ~((~ reset_n)));
	assign		wire_n00Ol_dataout = (clken === 1'b1) ? nlOi0l : niilO;
	assign		wire_n00OO_dataout = (clken === 1'b1) ? nlOi0i : n101l;
	and(wire_n010i_dataout, wire_ni1OO_dataout, ~((~ reset_n)));
	and(wire_n010l_dataout, wire_ni01i_dataout, ~((~ reset_n)));
	and(wire_n010O_dataout, wire_ni01l_dataout, ~((~ reset_n)));
	and(wire_n011i_dataout, wire_ni1lO_dataout, ~((~ reset_n)));
	and(wire_n011l_dataout, wire_ni1Oi_dataout, ~((~ reset_n)));
	and(wire_n011O_dataout, wire_ni1Ol_dataout, ~((~ reset_n)));
	and(wire_n01ii_dataout, wire_ni01O_dataout, ~((~ reset_n)));
	and(wire_n01il_dataout, wire_ni00i_dataout, ~((~ reset_n)));
	and(wire_n01iO_dataout, wire_ni00l_dataout, ~((~ reset_n)));
	and(wire_n01li_dataout, wire_ni00O_dataout, ~((~ reset_n)));
	and(wire_n01ll_dataout, wire_ni0ii_dataout, ~((~ reset_n)));
	and(wire_n01lO_dataout, wire_ni0il_dataout, ~((~ reset_n)));
	and(wire_n01Oi_dataout, wire_ni0iO_dataout, ~((~ reset_n)));
	and(wire_n01Ol_dataout, wire_ni0li_dataout, ~((~ reset_n)));
	and(wire_n01OO_dataout, wire_ni0ll_dataout, ~((~ reset_n)));
	assign		wire_n0i0i_dataout = (clken === 1'b1) ? nlO0OO : n11Oi;
	assign		wire_n0i0l_dataout = (clken === 1'b1) ? nlO0Ol : n11lO;
	assign		wire_n0i0O_dataout = (clken === 1'b1) ? nlO0Oi : n11ll;
	assign		wire_n0i1i_dataout = (clken === 1'b1) ? nlOi1O : n101i;
	assign		wire_n0i1l_dataout = (clken === 1'b1) ? nlOi1l : n11OO;
	assign		wire_n0i1O_dataout = (clken === 1'b1) ? nlOi1i : n11Ol;
	assign		wire_n0iii_dataout = (clken === 1'b1) ? nlO0lO : n11li;
	assign		wire_n0iil_dataout = (clken === 1'b1) ? nlO0ll : n11iO;
	assign		wire_n0iiO_dataout = (clken === 1'b1) ? nlO0li : n11il;
	assign		wire_n0ili_dataout = (clken === 1'b1) ? nlO0iO : n11ii;
	assign		wire_n0ill_dataout = (clken === 1'b1) ? nlO0il : n110O;
	assign		wire_n0ilO_dataout = (clken === 1'b1) ? nlO0ii : n110l;
	assign		wire_n0iOi_dataout = (clken === 1'b1) ? nlO00O : n110i;
	assign		wire_n0iOl_dataout = (clken === 1'b1) ? nlO00l : n111O;
	assign		wire_n0iOO_dataout = (clken === 1'b1) ? nlO00i : n111l;
	assign		wire_n0l0i_dataout = (clken === 1'b1) ? nlO1OO : nlOOOi;
	assign		wire_n0l0l_dataout = (clken === 1'b1) ? nlO1Ol : nlOOlO;
	assign		wire_n0l0O_dataout = (clken === 1'b1) ? nlO1Oi : nlOOll;
	assign		wire_n0l1i_dataout = (clken === 1'b1) ? nlO01O : n111i;
	assign		wire_n0l1l_dataout = (clken === 1'b1) ? nlO01l : nlOOOO;
	assign		wire_n0l1O_dataout = (clken === 1'b1) ? nlO01i : nlOOOl;
	assign		wire_n0lii_dataout = (clken === 1'b1) ? nlO1lO : nlOOli;
	assign		wire_n0lil_dataout = (clken === 1'b1) ? nlO1ll : nlOOiO;
	assign		wire_n0liO_dataout = (clken === 1'b1) ? nlO1li : nlOOil;
	assign		wire_n0lli_dataout = (clken === 1'b1) ? nlO1iO : nlOOii;
	assign		wire_n0lll_dataout = (clken === 1'b1) ? nlO1il : nlOO0O;
	assign		wire_n0llO_dataout = (clken === 1'b1) ? wire_niili_o[0] : nlOO0l;
	assign		wire_n0lOi_dataout = (clken === 1'b1) ? wire_niili_o[1] : nlOO0i;
	assign		wire_n0lOl_dataout = (clken === 1'b1) ? wire_niili_o[2] : nlOO1O;
	assign		wire_n0lOO_dataout = (clken === 1'b1) ? wire_niili_o[3] : nlOO1l;
	assign		wire_n0O0i_dataout = (clken === 1'b1) ? wire_niili_o[7] : nlOlOi;
	assign		wire_n0O0l_dataout = (clken === 1'b1) ? wire_niili_o[8] : nlOllO;
	assign		wire_n0O0O_dataout = (clken === 1'b1) ? wire_niili_o[9] : nlOlll;
	assign		wire_n0O1i_dataout = (clken === 1'b1) ? wire_niili_o[4] : nlOO1i;
	assign		wire_n0O1l_dataout = (clken === 1'b1) ? wire_niili_o[5] : nlOlOO;
	assign		wire_n0O1O_dataout = (clken === 1'b1) ? wire_niili_o[6] : nlOlOl;
	assign		wire_n0Oii_dataout = (clken === 1'b1) ? wire_niili_o[10] : nlOlli;
	assign		wire_n0Oil_dataout = (clken === 1'b1) ? wire_niili_o[11] : nlOliO;
	assign		wire_n0OiO_dataout = (clken === 1'b1) ? wire_niili_o[12] : nlOlil;
	assign		wire_n0Oli_dataout = (clken === 1'b1) ? wire_niili_o[13] : nlOlii;
	assign		wire_n0Oll_dataout = (clken === 1'b1) ? (~ wire_niili_o[14]) : nlOl0O;
	assign		wire_n0OlO_dataout = (clken === 1'b1) ? wire_niill_o[0] : nlOl0l;
	assign		wire_n0OOi_dataout = (clken === 1'b1) ? wire_niill_o[1] : nlOl0i;
	assign		wire_n0OOl_dataout = (clken === 1'b1) ? wire_niill_o[2] : nlOl1O;
	assign		wire_n0OOO_dataout = (clken === 1'b1) ? wire_niill_o[3] : nlOl1l;
	and(wire_n100i_dataout, wire_n00OO_dataout, ~((~ reset_n)));
	and(wire_n100l_dataout, wire_n0i1i_dataout, ~((~ reset_n)));
	and(wire_n100O_dataout, wire_n0i1l_dataout, ~((~ reset_n)));
	and(wire_n101O_dataout, wire_n00Ol_dataout, ~((~ reset_n)));
	and(wire_n10ii_dataout, wire_n0i1O_dataout, ~((~ reset_n)));
	and(wire_n10il_dataout, wire_n0i0i_dataout, ~((~ reset_n)));
	and(wire_n10iO_dataout, wire_n0i0l_dataout, ~((~ reset_n)));
	and(wire_n10li_dataout, wire_n0i0O_dataout, ~((~ reset_n)));
	and(wire_n10ll_dataout, wire_n0iii_dataout, ~((~ reset_n)));
	and(wire_n10lO_dataout, wire_n0iil_dataout, ~((~ reset_n)));
	and(wire_n10Oi_dataout, wire_n0iiO_dataout, ~((~ reset_n)));
	and(wire_n10Ol_dataout, wire_n0ili_dataout, ~((~ reset_n)));
	and(wire_n10OO_dataout, wire_n0ill_dataout, ~((~ reset_n)));
	and(wire_n11l_dataout, wire_n11O_dataout, ~((~ reset_n)));
	or(wire_n11O_dataout, n10O, (clken & ((((wire_nlOOO_q[1] & wire_nlOOO_q[3]) & (~ wire_nlOOO_q[0])) & (~ wire_nlOOO_q[2])) & (nl101O6 ^ nl101O5))));
	and(wire_n1i0i_dataout, wire_n0iOO_dataout, ~((~ reset_n)));
	and(wire_n1i0l_dataout, wire_n0l1i_dataout, ~((~ reset_n)));
	and(wire_n1i0O_dataout, wire_n0l1l_dataout, ~((~ reset_n)));
	and(wire_n1i1i_dataout, wire_n0ilO_dataout, ~((~ reset_n)));
	and(wire_n1i1l_dataout, wire_n0iOi_dataout, ~((~ reset_n)));
	and(wire_n1i1O_dataout, wire_n0iOl_dataout, ~((~ reset_n)));
	and(wire_n1iii_dataout, wire_n0l1O_dataout, ~((~ reset_n)));
	and(wire_n1iil_dataout, wire_n0l0i_dataout, ~((~ reset_n)));
	and(wire_n1iiO_dataout, wire_n0l0l_dataout, ~((~ reset_n)));
	and(wire_n1ili_dataout, wire_n0l0O_dataout, ~((~ reset_n)));
	and(wire_n1ill_dataout, wire_n0lii_dataout, ~((~ reset_n)));
	and(wire_n1ilO_dataout, wire_n0lil_dataout, ~((~ reset_n)));
	and(wire_n1iOi_dataout, wire_n0liO_dataout, ~((~ reset_n)));
	and(wire_n1iOl_dataout, wire_n0lli_dataout, ~((~ reset_n)));
	and(wire_n1iOO_dataout, wire_n0lll_dataout, ~((~ reset_n)));
	and(wire_n1l0i_dataout, wire_n0lOO_dataout, ~((~ reset_n)));
	and(wire_n1l0l_dataout, wire_n0O1i_dataout, ~((~ reset_n)));
	and(wire_n1l0O_dataout, wire_n0O1l_dataout, ~((~ reset_n)));
	and(wire_n1l1i_dataout, wire_n0llO_dataout, ~((~ reset_n)));
	and(wire_n1l1l_dataout, wire_n0lOi_dataout, ~((~ reset_n)));
	and(wire_n1l1O_dataout, wire_n0lOl_dataout, ~((~ reset_n)));
	and(wire_n1lii_dataout, wire_n0O1O_dataout, ~((~ reset_n)));
	and(wire_n1lil_dataout, wire_n0O0i_dataout, ~((~ reset_n)));
	and(wire_n1liO_dataout, wire_n0O0l_dataout, ~((~ reset_n)));
	and(wire_n1lli_dataout, wire_n0O0O_dataout, ~((~ reset_n)));
	and(wire_n1lll_dataout, wire_n0Oii_dataout, ~((~ reset_n)));
	and(wire_n1llO_dataout, wire_n0Oil_dataout, ~((~ reset_n)));
	and(wire_n1lOi_dataout, wire_n0OiO_dataout, ~((~ reset_n)));
	and(wire_n1lOl_dataout, wire_n0Oli_dataout, ~((~ reset_n)));
	and(wire_n1lOO_dataout, wire_n0Oll_dataout, ~((~ reset_n)));
	and(wire_n1O0i_dataout, wire_n0OOO_dataout, ~((~ reset_n)));
	and(wire_n1O0l_dataout, wire_ni11i_dataout, ~((~ reset_n)));
	and(wire_n1O0O_dataout, wire_ni11l_dataout, ~((~ reset_n)));
	and(wire_n1O1i_dataout, wire_n0OlO_dataout, ~((~ reset_n)));
	and(wire_n1O1l_dataout, wire_n0OOi_dataout, ~((~ reset_n)));
	and(wire_n1O1O_dataout, wire_n0OOl_dataout, ~((~ reset_n)));
	and(wire_n1Oii_dataout, wire_ni11O_dataout, ~((~ reset_n)));
	and(wire_n1Oil_dataout, wire_ni10i_dataout, ~((~ reset_n)));
	and(wire_n1OiO_dataout, wire_ni10l_dataout, ~((~ reset_n)));
	and(wire_n1Oli_dataout, wire_ni10O_dataout, ~((~ reset_n)));
	and(wire_n1Oll_dataout, wire_ni1ii_dataout, ~((~ reset_n)));
	and(wire_n1OlO_dataout, wire_ni1il_dataout, ~((~ reset_n)));
	and(wire_n1OOi_dataout, wire_ni1iO_dataout, ~((~ reset_n)));
	and(wire_n1OOl_dataout, wire_ni1li_dataout, ~((~ reset_n)));
	and(wire_n1OOO_dataout, wire_ni1ll_dataout, ~((~ reset_n)));
	assign		wire_ni00i_dataout = (clken === 1'b1) ? wire_niiOl_q_a[7] : nlO0Oi;
	assign		wire_ni00l_dataout = (clken === 1'b1) ? wire_niiOl_q_a[8] : nlO0lO;
	assign		wire_ni00O_dataout = (clken === 1'b1) ? wire_niiOl_q_a[9] : nlO0ll;
	assign		wire_ni01i_dataout = (clken === 1'b1) ? wire_niiOl_q_a[4] : nlOi1i;
	assign		wire_ni01l_dataout = (clken === 1'b1) ? wire_niiOl_q_a[5] : nlO0OO;
	assign		wire_ni01O_dataout = (clken === 1'b1) ? wire_niiOl_q_a[6] : nlO0Ol;
	assign		wire_ni0ii_dataout = (clken === 1'b1) ? wire_niiOl_q_a[10] : nlO0li;
	assign		wire_ni0il_dataout = (clken === 1'b1) ? wire_niiOl_q_a[11] : nlO0iO;
	assign		wire_ni0iO_dataout = (clken === 1'b1) ? wire_niiOl_q_a[12] : nlO0il;
	assign		wire_ni0li_dataout = (clken === 1'b1) ? wire_niiOl_q_a[13] : nlO0ii;
	assign		wire_ni0ll_dataout = (clken === 1'b1) ? wire_niiOi_q_a[0] : nlO00O;
	assign		wire_ni0lO_dataout = (clken === 1'b1) ? wire_niiOi_q_a[1] : nlO00l;
	assign		wire_ni0Oi_dataout = (clken === 1'b1) ? wire_niiOi_q_a[2] : nlO00i;
	assign		wire_ni0Ol_dataout = (clken === 1'b1) ? wire_niiOi_q_a[3] : nlO01O;
	assign		wire_ni0OO_dataout = (clken === 1'b1) ? wire_niiOi_q_a[4] : nlO01l;
	assign		wire_ni10i_dataout = (clken === 1'b1) ? wire_niill_o[7] : nlOiOi;
	assign		wire_ni10l_dataout = (clken === 1'b1) ? wire_niill_o[8] : nlOilO;
	assign		wire_ni10O_dataout = (clken === 1'b1) ? wire_niill_o[9] : nlOill;
	assign		wire_ni11i_dataout = (clken === 1'b1) ? wire_niill_o[4] : nlOl1i;
	assign		wire_ni11l_dataout = (clken === 1'b1) ? wire_niill_o[5] : nlOiOO;
	assign		wire_ni11O_dataout = (clken === 1'b1) ? wire_niill_o[6] : nlOiOl;
	assign		wire_ni1ii_dataout = (clken === 1'b1) ? wire_niill_o[10] : nlOili;
	assign		wire_ni1il_dataout = (clken === 1'b1) ? wire_niill_o[11] : nlOiiO;
	assign		wire_ni1iO_dataout = (clken === 1'b1) ? wire_niill_o[12] : nlOiil;
	assign		wire_ni1li_dataout = (clken === 1'b1) ? wire_niill_o[13] : nlOiii;
	assign		wire_ni1ll_dataout = (clken === 1'b1) ? (~ wire_niill_o[14]) : nlOi0O;
	assign		wire_ni1lO_dataout = (clken === 1'b1) ? wire_niiOl_q_a[0] : nlOi0l;
	assign		wire_ni1Oi_dataout = (clken === 1'b1) ? wire_niiOl_q_a[1] : nlOi0i;
	assign		wire_ni1Ol_dataout = (clken === 1'b1) ? wire_niiOl_q_a[2] : nlOi1O;
	assign		wire_ni1OO_dataout = (clken === 1'b1) ? wire_niiOl_q_a[3] : nlOi1l;
	assign		wire_nii0i_dataout = (clken === 1'b1) ? wire_niiOi_q_a[8] : nlO1Oi;
	assign		wire_nii0l_dataout = (clken === 1'b1) ? wire_niiOi_q_a[9] : nlO1lO;
	assign		wire_nii0O_dataout = (clken === 1'b1) ? wire_niiOi_q_a[10] : nlO1ll;
	assign		wire_nii1i_dataout = (clken === 1'b1) ? wire_niiOi_q_a[5] : nlO01i;
	assign		wire_nii1l_dataout = (clken === 1'b1) ? wire_niiOi_q_a[6] : nlO1OO;
	assign		wire_nii1O_dataout = (clken === 1'b1) ? wire_niiOi_q_a[7] : nlO1Ol;
	assign		wire_niiii_dataout = (clken === 1'b1) ? wire_niiOi_q_a[11] : nlO1li;
	assign		wire_niiil_dataout = (clken === 1'b1) ? wire_niiOi_q_a[12] : nlO1iO;
	assign		wire_niiiO_dataout = (clken === 1'b1) ? wire_niiOi_q_a[13] : nlO1il;
	and(wire_nilOl_dataout, wire_niOOl_dataout, ~((~ reset_n)));
	and(wire_nilOO_dataout, wire_niOOO_dataout, ~((~ reset_n)));
	and(wire_niO0i_dataout, wire_nl10i_dataout, ~((~ reset_n)));
	and(wire_niO0l_dataout, wire_nl10l_dataout, ~((~ reset_n)));
	and(wire_niO0O_dataout, wire_nl10O_dataout, ~((~ reset_n)));
	and(wire_niO1i_dataout, wire_nl11i_dataout, ~((~ reset_n)));
	and(wire_niO1l_dataout, wire_nl11l_dataout, ~((~ reset_n)));
	and(wire_niO1O_dataout, wire_nl11O_dataout, ~((~ reset_n)));
	and(wire_niOii_dataout, wire_nl1ii_dataout, ~((~ reset_n)));
	and(wire_niOil_dataout, wire_nl1il_dataout, ~((~ reset_n)));
	and(wire_niOiO_dataout, wire_nl1iO_dataout, ~((~ reset_n)));
	and(wire_niOli_dataout, wire_nl1li_dataout, ~((~ reset_n)));
	and(wire_niOll_dataout, wire_nl1ll_dataout, ~((~ reset_n)));
	and(wire_niOlO_dataout, wire_nl1lO_dataout, ~((~ reset_n)));
	and(wire_niOOi_dataout, wire_nl1Oi_dataout, ~((~ reset_n)));
	assign		wire_niOOl_dataout = (clken === 1'b1) ? wire_nl1Ol_o : nl0Ol;
	assign		wire_niOOO_dataout = (clken === 1'b1) ? wire_nl1OO_o : nilOi;
	and(wire_nl000O_dataout, wire_nl0l1i_dataout, ~((~ reset_n)));
	and(wire_nl00ii_dataout, wire_nl0l1l_dataout, ~((~ reset_n)));
	and(wire_nl00il_dataout, wire_nl0l1O_dataout, ~((~ reset_n)));
	and(wire_nl00iO_dataout, wire_nl0l0i_dataout, ~((~ reset_n)));
	and(wire_nl00li_dataout, wire_nl0l0l_dataout, ~((~ reset_n)));
	and(wire_nl00ll_dataout, wire_nl0l0O_dataout, ~((~ reset_n)));
	and(wire_nl00lO_dataout, wire_nl0lii_dataout, ~((~ reset_n)));
	and(wire_nl00Oi_dataout, wire_nl0lil_dataout, ~((~ reset_n)));
	and(wire_nl00Ol_dataout, wire_nl0liO_dataout, ~((~ reset_n)));
	and(wire_nl00OO_dataout, wire_nl0lli_dataout, ~((~ reset_n)));
	and(wire_nl0i0i_dataout, wire_nl0lOl_dataout, ~((~ reset_n)));
	and(wire_nl0i0l_dataout, wire_nl0lOO_dataout, ~((~ reset_n)));
	and(wire_nl0i0O_dataout, wire_nl0O1i_dataout, ~((~ reset_n)));
	and(wire_nl0i1i_dataout, wire_nl0lll_dataout, ~((~ reset_n)));
	and(wire_nl0i1l_dataout, wire_nl0llO_dataout, ~((~ reset_n)));
	and(wire_nl0i1O_dataout, wire_nl0lOi_dataout, ~((~ reset_n)));
	and(wire_nl0iii_dataout, wire_nl0O1l_dataout, ~((~ reset_n)));
	and(wire_nl0iil_dataout, wire_nl0O1O_dataout, ~((~ reset_n)));
	and(wire_nl0iiO_dataout, wire_nl0O0i_dataout, ~((~ reset_n)));
	and(wire_nl0ili_dataout, wire_nl0O0l_dataout, ~((~ reset_n)));
	and(wire_nl0ill_dataout, wire_nl0O0O_dataout, ~((~ reset_n)));
	and(wire_nl0ilO_dataout, wire_nl0Oii_dataout, ~((~ reset_n)));
	and(wire_nl0iOi_dataout, wire_nl0Oil_dataout, ~((~ reset_n)));
	and(wire_nl0iOl_dataout, wire_nl0OiO_dataout, ~((~ reset_n)));
	and(wire_nl0iOO_dataout, wire_nl0Oli_dataout, ~((~ reset_n)));
	assign		wire_nl0l0i_dataout = (clken === 1'b1) ? wire_nl1Oli_result[3] : nl001O;
	assign		wire_nl0l0l_dataout = (clken === 1'b1) ? wire_nl1Oli_result[4] : nl001l;
	assign		wire_nl0l0O_dataout = (clken === 1'b1) ? wire_nl1Oli_result[5] : nl001i;
	assign		wire_nl0l1i_dataout = (clken === 1'b1) ? wire_nl1Oli_result[0] : nl0Oll;
	assign		wire_nl0l1l_dataout = (clken === 1'b1) ? wire_nl1Oli_result[1] : nl000l;
	assign		wire_nl0l1O_dataout = (clken === 1'b1) ? wire_nl1Oli_result[2] : nl000i;
	assign		wire_nl0lii_dataout = (clken === 1'b1) ? wire_nl1Oli_result[6] : nl01OO;
	assign		wire_nl0lil_dataout = (clken === 1'b1) ? wire_nl1Oli_result[7] : nl01Ol;
	assign		wire_nl0liO_dataout = (clken === 1'b1) ? wire_nl1Oli_result[8] : nl01Oi;
	assign		wire_nl0lli_dataout = (clken === 1'b1) ? wire_nl1Oli_result[9] : nl01lO;
	assign		wire_nl0lll_dataout = (clken === 1'b1) ? wire_nl1Oli_result[10] : nl01ll;
	assign		wire_nl0llO_dataout = (clken === 1'b1) ? wire_nl1Oli_result[11] : nl01li;
	assign		wire_nl0lOi_dataout = (clken === 1'b1) ? wire_nl1Oli_result[12] : nl01iO;
	assign		wire_nl0lOl_dataout = (clken === 1'b1) ? wire_nl1Oli_result[13] : nl01il;
	assign		wire_nl0lOO_dataout = (clken === 1'b1) ? wire_nl1Oli_result[14] : nl01ii;
	assign		wire_nl0O0i_dataout = (clken === 1'b1) ? wire_nl1Oli_result[18] : nl011O;
	assign		wire_nl0O0l_dataout = (clken === 1'b1) ? wire_nl1Oli_result[19] : nl011l;
	assign		wire_nl0O0O_dataout = (clken === 1'b1) ? wire_nl1Oli_result[20] : nl011i;
	assign		wire_nl0O1i_dataout = (clken === 1'b1) ? wire_nl1Oli_result[15] : nl010O;
	assign		wire_nl0O1l_dataout = (clken === 1'b1) ? wire_nl1Oli_result[16] : nl010l;
	assign		wire_nl0O1O_dataout = (clken === 1'b1) ? wire_nl1Oli_result[17] : nl010i;
	assign		wire_nl0Oii_dataout = (clken === 1'b1) ? wire_nl1Oli_result[21] : nl1OOO;
	assign		wire_nl0Oil_dataout = (clken === 1'b1) ? wire_nl1Oli_result[22] : nl1OOl;
	assign		wire_nl0OiO_dataout = (clken === 1'b1) ? wire_nl1Oli_result[23] : nl1OOi;
	assign		wire_nl0Oli_dataout = (clken === 1'b1) ? wire_nl1Oli_result[24] : nl1OlO;
	assign		wire_nl10i_dataout = (clken === 1'b1) ? wire_nl00i_o : niliO;
	assign		wire_nl10l_dataout = (clken === 1'b1) ? wire_nl00l_o : nilil;
	assign		wire_nl10O_dataout = (clken === 1'b1) ? wire_nl00O_o : nilii;
	assign		wire_nl11i_dataout = (clken === 1'b1) ? wire_nl01i_o : nillO;
	assign		wire_nl11l_dataout = (clken === 1'b1) ? wire_nl01l_o : nilll;
	assign		wire_nl11O_dataout = (clken === 1'b1) ? wire_nl01O_o : nilli;
	and(wire_nl1i0O_dataout, wire_nl1lli_dataout, ~((~ reset_n)));
	assign		wire_nl1ii_dataout = (clken === 1'b1) ? wire_nl0ii_o : nil0O;
	and(wire_nl1iii_dataout, wire_nl1lll_dataout, ~((~ reset_n)));
	and(wire_nl1iil_dataout, wire_nl1llO_dataout, ~((~ reset_n)));
	and(wire_nl1iiO_dataout, wire_nl1lOi_dataout, ~((~ reset_n)));
	assign		wire_nl1il_dataout = (clken === 1'b1) ? wire_nl0il_o : nil0l;
	and(wire_nl1ili_dataout, wire_nl1lOl_dataout, ~((~ reset_n)));
	and(wire_nl1ill_dataout, wire_nl1lOO_dataout, ~((~ reset_n)));
	and(wire_nl1ilO_dataout, wire_nl1O1i_dataout, ~((~ reset_n)));
	assign		wire_nl1iO_dataout = (clken === 1'b1) ? wire_nl0iO_o : nil0i;
	and(wire_nl1iOi_dataout, wire_nl1O1l_dataout, ~((~ reset_n)));
	and(wire_nl1iOl_dataout, wire_nl1O1O_dataout, ~((~ reset_n)));
	and(wire_nl1iOO_dataout, wire_nl1O0i_dataout, ~((~ reset_n)));
	and(wire_nl1l0i_dataout, wire_nl1Oil_dataout, ~((~ reset_n)));
	and(wire_nl1l0l_dataout, wire_nl1OiO_dataout, ~((~ reset_n)));
	and(wire_nl1l1i_dataout, wire_nl1O0l_dataout, ~((~ reset_n)));
	and(wire_nl1l1l_dataout, wire_nl1O0O_dataout, ~((~ reset_n)));
	and(wire_nl1l1O_dataout, wire_nl1Oii_dataout, ~((~ reset_n)));
	assign		wire_nl1li_dataout = (clken === 1'b1) ? wire_nl0li_o : nil1O;
	assign		wire_nl1ll_dataout = (clken === 1'b1) ? wire_nl0ll_o : nil1l;
	assign		wire_nl1lli_dataout = (clken === 1'b1) ? nl1lii : nl10li;
	assign		wire_nl1lll_dataout = (clken === 1'b1) ? nl1lil : nl10ll;
	assign		wire_nl1llO_dataout = (clken === 1'b1) ? nl1liO : nl10lO;
	assign		wire_nl1lO_dataout = (clken === 1'b1) ? wire_nl0lO_o : nil1i;
	assign		wire_nl1lOi_dataout = (clken === 1'b1) ? nliOii : nl10Oi;
	assign		wire_nl1lOl_dataout = (clken === 1'b1) ? nliO0O : nl10Ol;
	assign		wire_nl1lOO_dataout = (clken === 1'b1) ? nliO0l : nl10OO;
	assign		wire_nl1O0i_dataout = (clken === 1'b1) ? nl1i1i : nl1i0i;
	assign		wire_nl1O0l_dataout = (clken === 1'b1) ? nl1i1l : nl1i0l;
	assign		wire_nl1O0O_dataout = (clken === 1'b1) ? nl1i1O : nl1l0O;
	assign		wire_nl1O1i_dataout = (clken === 1'b1) ? nl10Oi : nl1i1i;
	assign		wire_nl1O1l_dataout = (clken === 1'b1) ? nl10Ol : nl1i1l;
	assign		wire_nl1O1O_dataout = (clken === 1'b1) ? nl10OO : nl1i1O;
	assign		wire_nl1Oi_dataout = (clken === 1'b1) ? wire_nl0Oi_o : niiOO;
	assign		wire_nl1Oii_dataout = (clken === 1'b1) ? nl1i0i : nl1lii;
	assign		wire_nl1Oil_dataout = (clken === 1'b1) ? nl1i0l : nl1lil;
	assign		wire_nl1OiO_dataout = (clken === 1'b1) ? nl1l0O : nl1liO;
	and(wire_nli00i_dataout, wire_nliili_dataout, ~((~ reset_n)));
	and(wire_nli00l_dataout, wire_nliill_dataout, ~((~ reset_n)));
	and(wire_nli00O_dataout, wire_nliilO_dataout, ~((~ reset_n)));
	and(wire_nli01l_dataout, wire_nliiil_dataout, ~((~ reset_n)));
	and(wire_nli01O_dataout, wire_nliiiO_dataout, ~((~ reset_n)));
	or(wire_nli0ii_dataout, wire_nliiOi_dataout, (~ reset_n));
	and(wire_nli0il_dataout, wire_nliiOl_dataout, ~((~ reset_n)));
	or(wire_nli0iO_dataout, wire_nliiOO_dataout, (~ reset_n));
	or(wire_nli0li_dataout, wire_nlil1i_dataout, (~ reset_n));
	or(wire_nli0ll_dataout, wire_nlil1l_dataout, (~ reset_n));
	and(wire_nli0lO_dataout, wire_nlil1O_dataout, ~((~ reset_n)));
	or(wire_nli0Oi_dataout, wire_nlil0i_dataout, (~ reset_n));
	or(wire_nli0Ol_dataout, wire_nlil0l_dataout, (~ reset_n));
	and(wire_nli0OO_dataout, wire_nlil0O_dataout, ~((~ reset_n)));
	or(wire_nlii0i_dataout, wire_nlilli_dataout, (~ reset_n));
	and(wire_nlii0l_dataout, wire_nlilll_dataout, ~((~ reset_n)));
	and(wire_nlii0O_dataout, wire_nlillO_dataout, ~((~ reset_n)));
	or(wire_nlii1i_dataout, wire_nlilii_dataout, (~ reset_n));
	and(wire_nlii1l_dataout, wire_nlilil_dataout, ~((~ reset_n)));
	or(wire_nlii1O_dataout, wire_nliliO_dataout, (~ reset_n));
	or(wire_nliiii_dataout, wire_nlilOi_dataout, (~ reset_n));
	assign		wire_nliiil_dataout = (clken === 1'b1) ? wire_nlilOl_o[0] : nliO1O;
	assign		wire_nliiiO_dataout = (clken === 1'b1) ? wire_nlilOl_o[1] : nli01i;
	assign		wire_nliili_dataout = (clken === 1'b1) ? wire_nlilOl_o[2] : nli1OO;
	assign		wire_nliill_dataout = (clken === 1'b1) ? wire_nlilOl_o[3] : nli1Ol;
	assign		wire_nliilO_dataout = (clken === 1'b1) ? wire_nlilOl_o[4] : nli1Oi;
	assign		wire_nliiOi_dataout = (clken === 1'b1) ? ((nl0OOi ^ nl0OlO) ^ (nli1iO ^ nl0OOO)) : nli1lO;
	assign		wire_nliiOl_dataout = (clken === 1'b1) ? nli1lO : nli1ll;
	assign		wire_nliiOO_dataout = (clken === 1'b1) ? nli1ll : nli1li;
	assign		wire_nlil0i_dataout = (clken === 1'b1) ? nli1ii : nli10O;
	assign		wire_nlil0l_dataout = (clken === 1'b1) ? nli10O : nli10l;
	assign		wire_nlil0O_dataout = (clken === 1'b1) ? nli10l : nli10i;
	assign		wire_nlil1i_dataout = (clken === 1'b1) ? nli1li : nli1iO;
	assign		wire_nlil1l_dataout = (clken === 1'b1) ? nli1iO : nli1il;
	assign		wire_nlil1O_dataout = (clken === 1'b1) ? nli1il : nli1ii;
	assign		wire_nlilii_dataout = (clken === 1'b1) ? nli10i : nli11O;
	assign		wire_nlilil_dataout = (clken === 1'b1) ? nli11O : nli11l;
	assign		wire_nliliO_dataout = (clken === 1'b1) ? nli11l : nli11i;
	assign		wire_nlilli_dataout = (clken === 1'b1) ? nli11i : nl0OOO;
	assign		wire_nlilll_dataout = (clken === 1'b1) ? nl0OOO : nl0OOl;
	assign		wire_nlillO_dataout = (clken === 1'b1) ? nl0OOl : nl0OOi;
	assign		wire_nlilOi_dataout = (clken === 1'b1) ? nl0OOi : nl0OlO;
	and(wire_nliOl_dataout, wire_nllOl_dataout, ~((~ reset_n)));
	and(wire_nliOO_dataout, wire_nllOO_dataout, ~((~ reset_n)));
	and(wire_nll00i_dataout, wire_nlli0i_dataout, ~((~ reset_n)));
	assign		wire_nll00l_dataout = (clken === 1'b1) ? wire_nliO0i_result[5] : nll10i;
	assign		wire_nll00O_dataout = (clken === 1'b1) ? wire_nliO0i_result[6] : nll11O;
	and(wire_nll01i_dataout, wire_nlli1i_dataout, ~((~ reset_n)));
	and(wire_nll01l_dataout, wire_nlli1l_dataout, ~((~ reset_n)));
	and(wire_nll01O_dataout, wire_nlli1O_dataout, ~((~ reset_n)));
	and(wire_nll0i_dataout, wire_nlO0i_dataout, ~((~ reset_n)));
	assign		wire_nll0ii_dataout = (clken === 1'b1) ? wire_nliO0i_result[7] : nll11l;
	assign		wire_nll0il_dataout = (clken === 1'b1) ? wire_nliO0i_result[8] : nll11i;
	assign		wire_nll0iO_dataout = (clken === 1'b1) ? wire_nliO0i_result[9] : nliOOO;
	and(wire_nll0l_dataout, wire_nlO0l_dataout, ~((~ reset_n)));
	assign		wire_nll0li_dataout = (clken === 1'b1) ? wire_nliO0i_result[10] : nliOOl;
	assign		wire_nll0ll_dataout = (clken === 1'b1) ? wire_nliO0i_result[11] : nliOOi;
	assign		wire_nll0lO_dataout = (clken === 1'b1) ? wire_nliO0i_result[12] : nliOlO;
	and(wire_nll0O_dataout, wire_nlO0O_dataout, ~((~ reset_n)));
	assign		wire_nll0Oi_dataout = (clken === 1'b1) ? wire_nliO0i_result[13] : nliOll;
	assign		wire_nll0Ol_dataout = (clken === 1'b1) ? wire_nliO0i_result[14] : nliOli;
	assign		wire_nll0OO_dataout = (clken === 1'b1) ? wire_nliO0i_result[15] : nliOiO;
	and(wire_nll10l_dataout, wire_nll00l_dataout, ~((~ reset_n)));
	and(wire_nll10O_dataout, wire_nll00O_dataout, ~((~ reset_n)));
	and(wire_nll1i_dataout, wire_nlO1i_dataout, ~((~ reset_n)));
	and(wire_nll1ii_dataout, wire_nll0ii_dataout, ~((~ reset_n)));
	and(wire_nll1il_dataout, wire_nll0il_dataout, ~((~ reset_n)));
	and(wire_nll1iO_dataout, wire_nll0iO_dataout, ~((~ reset_n)));
	and(wire_nll1l_dataout, wire_nlO1l_dataout, ~((~ reset_n)));
	and(wire_nll1li_dataout, wire_nll0li_dataout, ~((~ reset_n)));
	and(wire_nll1ll_dataout, wire_nll0ll_dataout, ~((~ reset_n)));
	and(wire_nll1lO_dataout, wire_nll0lO_dataout, ~((~ reset_n)));
	and(wire_nll1O_dataout, wire_nlO1O_dataout, ~((~ reset_n)));
	and(wire_nll1Oi_dataout, wire_nll0Oi_dataout, ~((~ reset_n)));
	and(wire_nll1Ol_dataout, wire_nll0Ol_dataout, ~((~ reset_n)));
	and(wire_nll1OO_dataout, wire_nll0OO_dataout, ~((~ reset_n)));
	assign		wire_nlli0i_dataout = (clken === 1'b1) ? wire_nliO0i_result[19] : nliO0l;
	assign		wire_nlli1i_dataout = (clken === 1'b1) ? wire_nliO0i_result[16] : nliOil;
	assign		wire_nlli1l_dataout = (clken === 1'b1) ? wire_nliO0i_result[17] : nliOii;
	assign		wire_nlli1O_dataout = (clken === 1'b1) ? wire_nliO0i_result[18] : nliO0O;
	and(wire_nllii_dataout, wire_nlOii_dataout, ~((~ reset_n)));
	and(wire_nllil_dataout, wire_nlOil_dataout, ~((~ reset_n)));
	and(wire_nlliO_dataout, wire_nlOiO_dataout, ~((~ reset_n)));
	and(wire_nlll0i_dataout, wire_nllO1i_dataout, ~((~ reset_n)));
	and(wire_nlll0l_dataout, wire_nllO1l_dataout, ~((~ reset_n)));
	and(wire_nlll0O_dataout, wire_nllO1O_dataout, ~((~ reset_n)));
	and(wire_nlll1i_dataout, wire_nlllOi_dataout, ~((~ reset_n)));
	and(wire_nlll1l_dataout, wire_nlllOl_dataout, ~((~ reset_n)));
	and(wire_nlll1O_dataout, wire_nlllOO_dataout, ~((~ reset_n)));
	and(wire_nllli_dataout, wire_nlOli_dataout, ~((~ reset_n)));
	and(wire_nlllii_dataout, wire_nllO0i_dataout, ~((~ reset_n)));
	and(wire_nlllil_dataout, wire_nllO0l_dataout, ~((~ reset_n)));
	and(wire_nllliO_dataout, wire_nllO0O_dataout, ~((~ reset_n)));
	and(wire_nllll_dataout, wire_nlOll_dataout, ~((~ reset_n)));
	and(wire_nlllli_dataout, wire_nllOii_dataout, ~((~ reset_n)));
	and(wire_nlllll_dataout, wire_nllOil_dataout, ~((~ reset_n)));
	and(wire_nllllO_dataout, wire_nllOiO_dataout, ~((~ reset_n)));
	and(wire_nlllO_dataout, wire_nlOlO_dataout, ~((~ reset_n)));
	assign		wire_nlllOi_dataout = (clken === 1'b1) ? wire_nllOli_dataout : nlO1ii;
	assign		wire_nlllOl_dataout = (clken === 1'b1) ? wire_nllOll_dataout : nlliOO;
	assign		wire_nlllOO_dataout = (clken === 1'b1) ? wire_nllOlO_dataout : nlliOl;
	assign		wire_nllO0i_dataout = (clken === 1'b1) ? wire_nlO11i_dataout : nllili;
	assign		wire_nllO0l_dataout = (clken === 1'b1) ? wire_nlO11l_dataout : nlliiO;
	assign		wire_nllO0O_dataout = (clken === 1'b1) ? wire_nlO11O_dataout : nlliil;
	assign		wire_nllO1i_dataout = (clken === 1'b1) ? wire_nllOOi_dataout : nlliOi;
	assign		wire_nllO1l_dataout = (clken === 1'b1) ? wire_nllOOl_dataout : nllilO;
	assign		wire_nllO1O_dataout = (clken === 1'b1) ? wire_nllOOO_dataout : nllill;
	and(wire_nllOi_dataout, wire_nlOOi_dataout, ~((~ reset_n)));
	assign		wire_nllOii_dataout = (clken === 1'b1) ? wire_nlO10i_dataout : nlliii;
	assign		wire_nllOil_dataout = (clken === 1'b1) ? wire_nlO10l_dataout : nlli0O;
	assign		wire_nllOiO_dataout = (clken === 1'b1) ? wire_nlO10O_dataout : nlli0l;
	assign		wire_nllOl_dataout = (clken === 1'b1) ? nl0Ol : nlOOl;
	assign		wire_nllOli_dataout = ((~ nliOii) === 1'b1) ? nll10i : (~ nll10i);
	assign		wire_nllOll_dataout = ((~ nliOii) === 1'b1) ? nll11O : (~ nll11O);
	assign		wire_nllOlO_dataout = ((~ nliOii) === 1'b1) ? nll11l : (~ nll11l);
	assign		wire_nllOO_dataout = (clken === 1'b1) ? nilOi : nliOi;
	assign		wire_nllOOi_dataout = ((~ nliOii) === 1'b1) ? nll11i : (~ nll11i);
	assign		wire_nllOOl_dataout = ((~ nliOii) === 1'b1) ? nliOOO : (~ nliOOO);
	assign		wire_nllOOO_dataout = ((~ nliOii) === 1'b1) ? nliOOl : (~ nliOOl);
	assign		wire_nlO0i_dataout = (clken === 1'b1) ? niliO : nliiO;
	assign		wire_nlO0l_dataout = (clken === 1'b1) ? nilil : nliil;
	assign		wire_nlO0O_dataout = (clken === 1'b1) ? nilii : nliii;
	assign		wire_nlO10i_dataout = ((~ nliOii) === 1'b1) ? nliOli : (~ nliOli);
	assign		wire_nlO10l_dataout = ((~ nliOii) === 1'b1) ? nliOiO : (~ nliOiO);
	assign		wire_nlO10O_dataout = ((~ nliOii) === 1'b1) ? nliOil : (~ nliOil);
	assign		wire_nlO11i_dataout = ((~ nliOii) === 1'b1) ? nliOOi : (~ nliOOi);
	assign		wire_nlO11l_dataout = ((~ nliOii) === 1'b1) ? nliOlO : (~ nliOlO);
	assign		wire_nlO11O_dataout = ((~ nliOii) === 1'b1) ? nliOll : (~ nliOll);
	assign		wire_nlO1i_dataout = (clken === 1'b1) ? nillO : nlilO;
	assign		wire_nlO1l_dataout = (clken === 1'b1) ? nilll : nlill;
	assign		wire_nlO1O_dataout = (clken === 1'b1) ? nilli : nlili;
	assign		wire_nlOii_dataout = (clken === 1'b1) ? nil0O : nli0O;
	assign		wire_nlOil_dataout = (clken === 1'b1) ? nil0l : nli0l;
	assign		wire_nlOiO_dataout = (clken === 1'b1) ? nil0i : nli0i;
	assign		wire_nlOli_dataout = (clken === 1'b1) ? nil1O : nli1O;
	assign		wire_nlOll_dataout = (clken === 1'b1) ? nil1l : nli1l;
	assign		wire_nlOlO_dataout = (clken === 1'b1) ? nil1i : nli1i;
	assign		wire_nlOOi_dataout = (clken === 1'b1) ? niiOO : nl0OO;
	oper_add   niili
	( 
	.a({1'b0, (~ nlO0ii), (~ nlO0il), (~ nlO0iO), (~ nlO0li), (~ nlO0ll), (~ nlO0lO), (~ nlO0Oi), (~ nlO0Ol), (~ nlO0OO), (~ nlOi1i), (~ nlOi1l), (~ nlOi1O), (~ nlOi0i), (~ nlOi0l)}),
	.b({{14{1'b0}}, 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_niili_o));
	defparam
		niili.sgate_representation = 0,
		niili.width_a = 15,
		niili.width_b = 15,
		niili.width_o = 15;
	oper_add   niill
	( 
	.a({1'b0, (~ nlO1il), (~ nlO1iO), (~ nlO1li), (~ nlO1ll), (~ nlO1lO), (~ nlO1Oi), (~ nlO1Ol), (~ nlO1OO), (~ nlO01i), (~ nlO01l), (~ nlO01O), (~ nlO00i), (~ nlO00l), (~ nlO00O)}),
	.b({{14{1'b0}}, 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_niill_o));
	defparam
		niill.sgate_representation = 0,
		niill.width_a = 15,
		niill.width_b = 15,
		niill.width_o = 15;
	oper_add   nlilOl
	( 
	.a({nl0OlO, nl0OOi, nl0OOl, nl0OOO, nli11i}),
	.b({{4{1'b0}}, nl0OlO}),
	.cin(1'b0),
	.cout(),
	.o(wire_nlilOl_o));
	defparam
		nlilOl.sgate_representation = 0,
		nlilOl.width_a = 5,
		nlilOl.width_b = 5,
		nlilOl.width_o = 5;
	oper_mux   nl00i
	( 
	.data({((niOOOO42 ^ niOOOO41) & nlOiOO), {2{nlOlOO}}, nlOiOO, ((nl111i40 ^ nl111i39) & nlOOOl), {2{n11Oi}}, nlOOOl}),
	.o(wire_nl00i_o),
	.sel({nl10lO, nl10ll, nl10li}));
	defparam
		nl00i.width_data = 8,
		nl00i.width_sel = 3;
	oper_mux   nl00l
	( 
	.data({nlOiOl, ((nl111l38 ^ nl111l37) & nlOlOl), nlOlOl, ((nl111O36 ^ nl111O35) & nlOiOl), ((nl110i34 ^ nl110i33) & nlOOOi), {2{n11lO}}, ((nl110l32 ^ nl110l31) & nlOOOi)}),
	.o(wire_nl00l_o),
	.sel({nl10lO, nl10ll, nl10li}));
	defparam
		nl00l.width_data = 8,
		nl00l.width_sel = 3;
	oper_mux   nl00O
	( 
	.data({nlOiOi, {2{nlOlOi}}, nlOiOi, nlOOlO, ((nl110O30 ^ nl110O29) & n11ll), n11ll, ((nl11ii28 ^ nl11ii27) & nlOOlO)}),
	.o(wire_nl00O_o),
	.sel({nl10lO, nl10ll, nl10li}));
	defparam
		nl00O.width_data = 8,
		nl00O.width_sel = 3;
	oper_mux   nl01i
	( 
	.data({nlOl1O, {2{nlOO1O}}, nlOl1O, n111l, {2{n101i}}, n111l}),
	.o(wire_nl01i_o),
	.sel({nl10lO, nl10ll, nl10li}));
	defparam
		nl01i.width_data = 8,
		nl01i.width_sel = 3;
	oper_mux   nl01l
	( 
	.data({nlOl1l, {2{nlOO1l}}, nlOl1l, n111i, {2{n11OO}}, n111i}),
	.o(wire_nl01l_o),
	.sel({nl10lO, nl10ll, nl10li}));
	defparam
		nl01l.width_data = 8,
		nl01l.width_sel = 3;
	oper_mux   nl01O
	( 
	.data({nlOl1i, ((niOOOl44 ^ niOOOl43) & nlOO1i), nlOO1i, nlOl1i, nlOOOO, {2{n11Ol}}, nlOOOO}),
	.o(wire_nl01O_o),
	.sel({nl10lO, nl10ll, nl10li}));
	defparam
		nl01O.width_data = 8,
		nl01O.width_sel = 3;
	oper_mux   nl0ii
	( 
	.data({nlOilO, {2{nlOllO}}, nlOilO, nlOOll, n11li, ((nl11il26 ^ nl11il25) & n11li), ((nl11iO24 ^ nl11iO23) & nlOOll)}),
	.o(wire_nl0ii_o),
	.sel({((nl11li22 ^ nl11li21) & nl10lO), nl10ll, nl10li}));
	defparam
		nl0ii.width_data = 8,
		nl0ii.width_sel = 3;
	oper_mux   nl0il
	( 
	.data({nlOill, {2{nlOlll}}, nlOill, ((nl11ll20 ^ nl11ll19) & nlOOli), {2{n11iO}}, nlOOli}),
	.o(wire_nl0il_o),
	.sel({nl10lO, nl10ll, nl10li}));
	defparam
		nl0il.width_data = 8,
		nl0il.width_sel = 3;
	oper_mux   nl0iO
	( 
	.data({nlOili, {2{nlOlli}}, ((nl11lO18 ^ nl11lO17) & nlOili), nlOOiO, {2{n11il}}, nlOOiO}),
	.o(wire_nl0iO_o),
	.sel({nl10lO, ((nl11Oi16 ^ nl11Oi15) & nl10ll), nl10li}));
	defparam
		nl0iO.width_data = 8,
		nl0iO.width_sel = 3;
	oper_mux   nl0li
	( 
	.data({nlOiiO, {2{nlOliO}}, nlOiiO, nlOOil, {2{n11ii}}, ((nl11Ol14 ^ nl11Ol13) & nlOOil)}),
	.o(wire_nl0li_o),
	.sel({nl10lO, nl10ll, nl10li}));
	defparam
		nl0li.width_data = 8,
		nl0li.width_sel = 3;
	oper_mux   nl0ll
	( 
	.data({nlOiil, {2{nlOlil}}, nlOiil, nlOOii, {2{n110O}}, nlOOii}),
	.o(wire_nl0ll_o),
	.sel({nl10lO, nl10ll, nl10li}));
	defparam
		nl0ll.width_data = 8,
		nl0ll.width_sel = 3;
	oper_mux   nl0lO
	( 
	.data({nlOiii, {2{nlOlii}}, nlOiii, nlOO0O, n110l, ((nl11OO12 ^ nl11OO11) & n110l), nlOO0O}),
	.o(wire_nl0lO_o),
	.sel({nl10lO, nl10ll, nl10li}));
	defparam
		nl0lO.width_data = 8,
		nl0lO.width_sel = 3;
	oper_mux   nl0Oi
	( 
	.data({nlOi0O, ((nl101i10 ^ nl101i9) & nlOl0O), nlOl0O, nlOi0O, {4{1'b0}}}),
	.o(wire_nl0Oi_o),
	.sel({((nl101l8 ^ nl101l7) & nl10lO), nl10ll, nl10li}));
	defparam
		nl0Oi.width_data = 8,
		nl0Oi.width_sel = 3;
	oper_mux   nl1Ol
	( 
	.data({nlOl0l, {2{nlOO0l}}, nlOl0l, n110i, {2{niilO}}, n110i}),
	.o(wire_nl1Ol_o),
	.sel({nl10lO, nl10ll, nl10li}));
	defparam
		nl1Ol.width_data = 8,
		nl1Ol.width_sel = 3;
	oper_mux   nl1OO
	( 
	.data({nlOl0i, {2{nlOO0i}}, nlOl0i, n111O, {2{n101l}}, n111O}),
	.o(wire_nl1OO_o),
	.sel({nl10lO, nl10ll, nl10li}));
	defparam
		nl1OO.width_data = 8,
		nl1OO.width_sel = 3;
	assign
		fsin_o = {nl0OO, nli1i, nli1l, nli1O, nli0i, nli0l, nli0O, nliii, nliil, nliiO, nlili, nlill, nlilO, nliOi, nlOOl},
		nl100O = 1'b1,
		out_valid = n10O;
endmodule //dds
//synopsys translate_on
//VALID FILE
