|shift_top
clk => clk.IN4
rst_n => rst_n.IN4
uart_rx => uart_rx.IN1
uart_tx <= uart_test:uart_test_inst.uart_tx


|shift_top|shift_data:shift_data_inst
clk => clk.IN1
rst_n => rst_n.IN1
data_in[0] => Decoder2.IN4
data_in[1] => Decoder1.IN3
data_in[1] => Decoder2.IN3
data_in[2] => Decoder1.IN2
data_in[2] => Decoder2.IN2
data_in[3] => Decoder0.IN1
data_in[3] => Decoder1.IN1
data_in[3] => Decoder2.IN1
data_in[4] => Decoder0.IN0
data_in[4] => Decoder1.IN0
data_in[4] => Decoder2.IN0
trans_done <= trans_d.DB_MAX_OUTPUT_PORT_TYPE
dout <= shift[4].DB_MAX_OUTPUT_PORT_TYPE


|shift_top|shift_data:shift_data_inst|tmm_c:tmm_c_inst
clk => clk_out~reg0.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
rst_n => count.OUTPUTSELECT
rst_n => count.OUTPUTSELECT
rst_n => count.OUTPUTSELECT
rst_n => count.OUTPUTSELECT
rst_n => count.OUTPUTSELECT
rst_n => count.OUTPUTSELECT
rst_n => count.OUTPUTSELECT
rst_n => count.OUTPUTSELECT
rst_n => count.OUTPUTSELECT
rst_n => count.OUTPUTSELECT
rst_n => count.OUTPUTSELECT
rst_n => count.OUTPUTSELECT
rst_n => count.OUTPUTSELECT
rst_n => count.OUTPUTSELECT
rst_n => count.OUTPUTSELECT
rst_n => count.OUTPUTSELECT
rst_n => count.OUTPUTSELECT
rst_n => count.OUTPUTSELECT
rst_n => count.OUTPUTSELECT
rst_n => count.OUTPUTSELECT
rst_n => clk_out.OUTPUTSELECT
m[0] => Add0.IN40
m[1] => Add0.IN39
m[1] => Add1.IN38
m[2] => Add0.IN38
m[2] => Add1.IN37
m[3] => Add0.IN37
m[3] => Add1.IN36
m[4] => Add0.IN36
m[4] => Add1.IN35
m[5] => Add0.IN35
m[5] => Add1.IN34
m[6] => Add0.IN34
m[6] => Add1.IN33
m[7] => Add0.IN33
m[7] => Add1.IN32
m[8] => Add0.IN32
m[8] => Add1.IN31
m[9] => Add0.IN31
m[9] => Add1.IN30
m[10] => Add0.IN30
m[10] => Add1.IN29
m[11] => Add0.IN29
m[11] => Add1.IN28
m[12] => Add0.IN28
m[12] => Add1.IN27
m[13] => Add0.IN27
m[13] => Add1.IN26
m[14] => Add0.IN26
m[14] => Add1.IN25
m[15] => Add0.IN25
m[15] => Add1.IN24
m[16] => Add0.IN24
m[16] => Add1.IN23
m[17] => Add0.IN23
m[17] => Add1.IN22
m[18] => Add0.IN22
m[18] => Add1.IN21
m[19] => Add0.IN21
m[19] => Add1.IN20
clk_out <= clk_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|shift_top|decoder:decoder_inst
clk => clk.IN1
rst_n => rst_n.IN1
signal => always0.IN1
signal => shift.DATAB
signal => shift.DATAB
t_valid <= trans_done.DB_MAX_OUTPUT_PORT_TYPE
dout[0] <= data_out[0].DB_MAX_OUTPUT_PORT_TYPE
dout[1] <= data_out[1].DB_MAX_OUTPUT_PORT_TYPE
dout[2] <= data_out[2].DB_MAX_OUTPUT_PORT_TYPE
dout[3] <= data_out[3].DB_MAX_OUTPUT_PORT_TYPE


|shift_top|decoder:decoder_inst|tmm_c1:tmm_c1_inst
clk => clk_out~reg0.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
rst_n => count.OUTPUTSELECT
rst_n => count.OUTPUTSELECT
rst_n => count.OUTPUTSELECT
rst_n => count.OUTPUTSELECT
rst_n => count.OUTPUTSELECT
rst_n => count.OUTPUTSELECT
rst_n => count.OUTPUTSELECT
rst_n => count.OUTPUTSELECT
rst_n => count.OUTPUTSELECT
rst_n => count.OUTPUTSELECT
rst_n => count.OUTPUTSELECT
rst_n => count.OUTPUTSELECT
rst_n => count.OUTPUTSELECT
rst_n => count.OUTPUTSELECT
rst_n => count.OUTPUTSELECT
rst_n => count.OUTPUTSELECT
rst_n => count.OUTPUTSELECT
rst_n => count.OUTPUTSELECT
rst_n => count.OUTPUTSELECT
rst_n => count.OUTPUTSELECT
rst_n => clk_out.OUTPUTSELECT
m[0] => Add0.IN40
m[1] => Add0.IN39
m[1] => Add1.IN38
m[2] => Add0.IN38
m[2] => Add1.IN37
m[3] => Add0.IN37
m[3] => Add1.IN36
m[4] => Add0.IN36
m[4] => Add1.IN35
m[5] => Add0.IN35
m[5] => Add1.IN34
m[6] => Add0.IN34
m[6] => Add1.IN33
m[7] => Add0.IN33
m[7] => Add1.IN32
m[8] => Add0.IN32
m[8] => Add1.IN31
m[9] => Add0.IN31
m[9] => Add1.IN30
m[10] => Add0.IN30
m[10] => Add1.IN29
m[11] => Add0.IN29
m[11] => Add1.IN28
m[12] => Add0.IN28
m[12] => Add1.IN27
m[13] => Add0.IN27
m[13] => Add1.IN26
m[14] => Add0.IN26
m[14] => Add1.IN25
m[15] => Add0.IN25
m[15] => Add1.IN24
m[16] => Add0.IN24
m[16] => Add1.IN23
m[17] => Add0.IN23
m[17] => Add1.IN22
m[18] => Add0.IN22
m[18] => Add1.IN21
m[19] => Add0.IN21
m[19] => Add1.IN20
clk_out <= clk_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|shift_top|tmm_c2:tmm_c2_inst
clk => clk_out~reg0.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
rst_n => count.OUTPUTSELECT
rst_n => count.OUTPUTSELECT
rst_n => count.OUTPUTSELECT
rst_n => count.OUTPUTSELECT
rst_n => count.OUTPUTSELECT
rst_n => count.OUTPUTSELECT
rst_n => count.OUTPUTSELECT
rst_n => count.OUTPUTSELECT
rst_n => count.OUTPUTSELECT
rst_n => count.OUTPUTSELECT
rst_n => count.OUTPUTSELECT
rst_n => count.OUTPUTSELECT
rst_n => count.OUTPUTSELECT
rst_n => count.OUTPUTSELECT
rst_n => count.OUTPUTSELECT
rst_n => count.OUTPUTSELECT
rst_n => count.OUTPUTSELECT
rst_n => count.OUTPUTSELECT
rst_n => count.OUTPUTSELECT
rst_n => count.OUTPUTSELECT
rst_n => clk_out.OUTPUTSELECT
m[0] => Add0.IN40
m[1] => Add0.IN39
m[1] => Add1.IN38
m[2] => Add0.IN38
m[2] => Add1.IN37
m[3] => Add0.IN37
m[3] => Add1.IN36
m[4] => Add0.IN36
m[4] => Add1.IN35
m[5] => Add0.IN35
m[5] => Add1.IN34
m[6] => Add0.IN34
m[6] => Add1.IN33
m[7] => Add0.IN33
m[7] => Add1.IN32
m[8] => Add0.IN32
m[8] => Add1.IN31
m[9] => Add0.IN31
m[9] => Add1.IN30
m[10] => Add0.IN30
m[10] => Add1.IN29
m[11] => Add0.IN29
m[11] => Add1.IN28
m[12] => Add0.IN28
m[12] => Add1.IN27
m[13] => Add0.IN27
m[13] => Add1.IN26
m[14] => Add0.IN26
m[14] => Add1.IN25
m[15] => Add0.IN25
m[15] => Add1.IN24
m[16] => Add0.IN24
m[16] => Add1.IN23
m[17] => Add0.IN23
m[17] => Add1.IN22
m[18] => Add0.IN22
m[18] => Add1.IN21
m[19] => Add0.IN21
m[19] => Add1.IN20
clk_out <= clk_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|shift_top|uart_test:uart_test_inst
clk => clk.IN2
rst_n => rst_n.IN2
data_in[0] => sav_data[0].DATAIN
data_in[1] => sav_data[1].DATAIN
data_in[2] => sav_data[2].DATAIN
data_in[3] => sav_data[3].DATAIN
clk_valid => clk_valid_d.DATAIN
clk_valid => always1.IN1
uart_rx => uart_rx.IN1
uart_tx <= uart_tx:uart_tx_inst.tx_pin


|shift_top|uart_test:uart_test_inst|uart_rx:uart_rx_inst
clk => rx_bits[0].CLK
clk => rx_bits[1].CLK
clk => rx_bits[2].CLK
clk => rx_bits[3].CLK
clk => rx_bits[4].CLK
clk => rx_bits[5].CLK
clk => rx_bits[6].CLK
clk => rx_bits[7].CLK
clk => cycle_cnt[0].CLK
clk => cycle_cnt[1].CLK
clk => cycle_cnt[2].CLK
clk => cycle_cnt[3].CLK
clk => cycle_cnt[4].CLK
clk => cycle_cnt[5].CLK
clk => cycle_cnt[6].CLK
clk => cycle_cnt[7].CLK
clk => cycle_cnt[8].CLK
clk => cycle_cnt[9].CLK
clk => cycle_cnt[10].CLK
clk => cycle_cnt[11].CLK
clk => cycle_cnt[12].CLK
clk => cycle_cnt[13].CLK
clk => cycle_cnt[14].CLK
clk => cycle_cnt[15].CLK
clk => bit_cnt[0].CLK
clk => bit_cnt[1].CLK
clk => bit_cnt[2].CLK
clk => rx_data[0]~reg0.CLK
clk => rx_data[1]~reg0.CLK
clk => rx_data[2]~reg0.CLK
clk => rx_data[3]~reg0.CLK
clk => rx_data[4]~reg0.CLK
clk => rx_data[5]~reg0.CLK
clk => rx_data[6]~reg0.CLK
clk => rx_data[7]~reg0.CLK
clk => rx_data_valid~reg0.CLK
clk => rx_d1.CLK
clk => rx_d0.CLK
clk => state~1.DATAIN
rst_n => rx_data[0]~reg0.ACLR
rst_n => rx_data[1]~reg0.ACLR
rst_n => rx_data[2]~reg0.ACLR
rst_n => rx_data[3]~reg0.ACLR
rst_n => rx_data[4]~reg0.ACLR
rst_n => rx_data[5]~reg0.ACLR
rst_n => rx_data[6]~reg0.ACLR
rst_n => rx_data[7]~reg0.ACLR
rst_n => rx_data_valid~reg0.ACLR
rst_n => rx_d1.ACLR
rst_n => rx_d0.ACLR
rst_n => bit_cnt[0].ACLR
rst_n => bit_cnt[1].ACLR
rst_n => bit_cnt[2].ACLR
rst_n => cycle_cnt[0].ACLR
rst_n => cycle_cnt[1].ACLR
rst_n => cycle_cnt[2].ACLR
rst_n => cycle_cnt[3].ACLR
rst_n => cycle_cnt[4].ACLR
rst_n => cycle_cnt[5].ACLR
rst_n => cycle_cnt[6].ACLR
rst_n => cycle_cnt[7].ACLR
rst_n => cycle_cnt[8].ACLR
rst_n => cycle_cnt[9].ACLR
rst_n => cycle_cnt[10].ACLR
rst_n => cycle_cnt[11].ACLR
rst_n => cycle_cnt[12].ACLR
rst_n => cycle_cnt[13].ACLR
rst_n => cycle_cnt[14].ACLR
rst_n => cycle_cnt[15].ACLR
rst_n => rx_bits[0].ACLR
rst_n => rx_bits[1].ACLR
rst_n => rx_bits[2].ACLR
rst_n => rx_bits[3].ACLR
rst_n => rx_bits[4].ACLR
rst_n => rx_bits[5].ACLR
rst_n => rx_bits[6].ACLR
rst_n => rx_bits[7].ACLR
rst_n => state~3.DATAIN
rx_data[0] <= rx_data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[1] <= rx_data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[2] <= rx_data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[3] <= rx_data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[4] <= rx_data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[5] <= rx_data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[6] <= rx_data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[7] <= rx_data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data_valid <= rx_data_valid~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data_ready => always3.IN0
rx_data_ready => Selector0.IN3
rx_data_ready => Selector4.IN2
rx_pin => rx_bits.DATAB
rx_pin => rx_bits.DATAB
rx_pin => rx_bits.DATAB
rx_pin => rx_bits.DATAB
rx_pin => rx_bits.DATAB
rx_pin => rx_bits.DATAB
rx_pin => rx_bits.DATAB
rx_pin => rx_bits.DATAB
rx_pin => rx_d0.DATAIN


|shift_top|uart_test:uart_test_inst|uart_tx:uart_tx_inst
clk => tx_reg.CLK
clk => cycle_cnt[0].CLK
clk => cycle_cnt[1].CLK
clk => cycle_cnt[2].CLK
clk => cycle_cnt[3].CLK
clk => cycle_cnt[4].CLK
clk => cycle_cnt[5].CLK
clk => cycle_cnt[6].CLK
clk => cycle_cnt[7].CLK
clk => cycle_cnt[8].CLK
clk => cycle_cnt[9].CLK
clk => cycle_cnt[10].CLK
clk => cycle_cnt[11].CLK
clk => cycle_cnt[12].CLK
clk => cycle_cnt[13].CLK
clk => cycle_cnt[14].CLK
clk => cycle_cnt[15].CLK
clk => bit_cnt[0].CLK
clk => bit_cnt[1].CLK
clk => bit_cnt[2].CLK
clk => tx_data_latch[0].CLK
clk => tx_data_latch[1].CLK
clk => tx_data_latch[2].CLK
clk => tx_data_latch[3].CLK
clk => tx_data_latch[4].CLK
clk => tx_data_latch[5].CLK
clk => tx_data_latch[6].CLK
clk => tx_data_latch[7].CLK
clk => tx_data_ready~reg0.CLK
clk => state~1.DATAIN
rst_n => tx_data_latch[0].ACLR
rst_n => tx_data_latch[1].ACLR
rst_n => tx_data_latch[2].ACLR
rst_n => tx_data_latch[3].ACLR
rst_n => tx_data_latch[4].ACLR
rst_n => tx_data_latch[5].ACLR
rst_n => tx_data_latch[6].ACLR
rst_n => tx_data_latch[7].ACLR
rst_n => tx_data_ready~reg0.ACLR
rst_n => tx_reg.PRESET
rst_n => bit_cnt[0].ACLR
rst_n => bit_cnt[1].ACLR
rst_n => bit_cnt[2].ACLR
rst_n => cycle_cnt[0].ACLR
rst_n => cycle_cnt[1].ACLR
rst_n => cycle_cnt[2].ACLR
rst_n => cycle_cnt[3].ACLR
rst_n => cycle_cnt[4].ACLR
rst_n => cycle_cnt[5].ACLR
rst_n => cycle_cnt[6].ACLR
rst_n => cycle_cnt[7].ACLR
rst_n => cycle_cnt[8].ACLR
rst_n => cycle_cnt[9].ACLR
rst_n => cycle_cnt[10].ACLR
rst_n => cycle_cnt[11].ACLR
rst_n => cycle_cnt[12].ACLR
rst_n => cycle_cnt[13].ACLR
rst_n => cycle_cnt[14].ACLR
rst_n => cycle_cnt[15].ACLR
rst_n => state~3.DATAIN
tx_data[0] => tx_data_latch[0].DATAIN
tx_data[1] => tx_data_latch[1].DATAIN
tx_data[2] => tx_data_latch[2].DATAIN
tx_data[3] => tx_data_latch[3].DATAIN
tx_data[4] => tx_data_latch[4].DATAIN
tx_data[5] => tx_data_latch[5].DATAIN
tx_data[6] => tx_data_latch[6].DATAIN
tx_data[7] => tx_data_latch[7].DATAIN
tx_data_valid => always3.IN0
tx_data_valid => Selector1.IN3
tx_data_valid => tx_data_ready.DATAB
tx_data_valid => Selector0.IN2
tx_data_ready <= tx_data_ready~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_pin <= tx_reg.DB_MAX_OUTPUT_PORT_TYPE


